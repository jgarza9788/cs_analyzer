,file,full_path,functions,type,name,start_line,end_line,namespace,class_properties
0,Program.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Chapter01\Program.cs,"['public class Program', 'public static void Main(string[] args)', 'private static void Answer1_2()', 'private static void Answer1_1()', 'private static bool HasUniqueCharacters(string text)']",namespace,Demo.LearnByDoing.Chapter01,6,53,,
1,Class1.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Chapter01.Test\Class1.cs,['public class Class1'],namespace,Demo.LearnByDoing.Chapter01.Test,6,12,,
2,DuplicateEncoderProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.CodeWars\DuplicateEncoderProgram.cs,"['public class DuplicateEncoderProgram', 'public static void Main(string[] args)', 'public class Kata', 'public static string DuplicateEncode(string word)']",namespace,Demo.LearnByDoing.CodeWars,6,23,,
3,Class1.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.CodeWars.Tests\Class1.cs,['public class Class1'],namespace,Demo.LearnByDoing.CodeWars.Tests,6,12,,
4,BaseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Core\BaseTest.cs,"['public abstract class BaseTest', 'protected readonly ITestOutputHelper _output;', 'protected BaseTest(ITestOutputHelper output)', 'protected bool AreTwoMultidimensionalArraysSame(int[,] matrix1, int[,] matrix2)', 'protected void PrintArray(int[,] a)']",namespace,Demo.LearnByDoing.Core,4,39,,
5,BaseTestData.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Core\BaseTestData.cs,"['public abstract class BaseTestData : IEnumerable<object[]>', 'public abstract List<object[]> Data { get; set; }', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Core,3,20,,
6,PalinedromeChecker.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Core\PalinedromeChecker.cs,[],namespace,Demo.LearnByDoing.Core,0,0,,
7,Edge.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Core\Graph\Edge.cs,"['public class Edge<T>', 'public Vertex<T> Vertex1 { get; }', 'public Vertex<T> Vertex2 { get; }', 'public int Weight { get; }', 'public bool IsDirected { get; }', 'public Edge(Vertex<T> vertex1, Vertex<T> vertex2)', 'public Edge(Vertex<T> vertex1, Vertex<T> vertex2, bool isDirected)', 'public Edge(Vertex<T> vertex11, Vertex<T> vertex21, bool isDirectred, int weight)', 'public override int GetHashCode()', 'public override bool Equals(object obj)', 'public override string ToString()']",class,Edge<T>,2,68,,"['public', 'class', 'Edge<T>']"
8,Graph.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Core\Graph\Graph.cs,"['public class Graph<T>', 'public List<Edge<T>> Edges { get; }', 'public Dictionary<long, Vertex<T>> Vertices { get; }', 'public bool IsDirected { get; }', 'public Graph(bool isDirected)', 'public void AddEdge(long id1, long id2)', 'public void AddVertex(Vertex<T> vertex)', 'public Vertex<T> AddSingleVertex(long id)', 'public void AddEdge(long id1, long id2, int weight)', 'public IEnumerable<Vertex<T>> GetVertices()', 'public void SetDataForVertex(long id, T data)', 'public override string ToString()']",namespace,Demo.LearnByDoing.Core.Graph,3,107,,
9,Vertex.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Core\Graph\Vertex.cs,"['public class Vertex<T>', 'public long Id { get; }', 'public T Data { get; set; }', 'public List<Edge<T>> Edges { get; } = new List<Edge<T>>();', 'public List<Vertex<T>> AdjacentVertex { get; } = new List<Vertex<T>>();', 'public Vertex(long id)', 'public void AddAdjacentVertex(Edge<T> e, Vertex<T> v)', 'public override string ToString()', 'public int GetDegree()', 'public override int GetHashCode()', 'public override bool Equals(object obj)']",namespace,Demo.LearnByDoing.Core.Graph,2,53,,
10,Program.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.DotNetCore.OAuth\Program.cs,"['public class Program', 'public static void Main(string[] args)', 'public static IWebHost BuildWebHost(string[] args) =>']",namespace,Demo.LearnByDoing.DotNetCore.OAuth,10,25,,
11,Startup.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.DotNetCore.OAuth\Startup.cs,"['public class Startup', 'public Startup(IConfiguration configuration)', 'public IConfiguration Configuration { get; }', 'public void ConfigureServices(IServiceCollection services)', 'public void Configure(IApplicationBuilder app, IHostingEnvironment env)']",namespace,Demo.LearnByDoing.DotNetCore.OAuth,10,59,,
12,HomeController.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.DotNetCore.OAuth\Controllers\HomeController.cs,"['public class HomeController : Controller', 'public IActionResult Index()', 'public IActionResult Error()']",namespace,Demo.LearnByDoing.DotNetCore.OAuth.Controllers,7,23,,
13,SampleDataController.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.DotNetCore.OAuth\Controllers\SampleDataController.cs,"['public class SampleDataController : Controller', 'private static string[] Summaries = new[]', 'public IEnumerable<WeatherForecast> WeatherForecasts()', 'public class WeatherForecast', 'public string DateFormatted { get; set; }', 'public int TemperatureC { get; set; }', 'public string Summary { get; set; }', 'public int TemperatureF']",namespace,Demo.LearnByDoing.DotNetCore.OAuth.Controllers,6,44,,
14,ConvertIntegerToArrayProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\ConvertIntegerToArrayProgram.cs,"['public class ConvertIntegerToArrayProgram', 'public static void Main(string[] args)', 'private static int[] GetArray1(int value)', 'private static IEnumerable<int> GetArray2(int value)', 'private static IEnumerable<int> GetArray3(int value)']",namespace,Demo.LearnByDoing.General,5,85,,
15,FindAllArrayElementsExistInAnotherArrayProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\FindAllArrayElementsExistInAnotherArrayProgram.cs,"['public class FindAllArrayElementsExistInAnotherArrayProgram', 'public static void Main(string[] args)', 'private static bool CheckIfAllElementsExistInAnotherArray(int[] subA, int[] fullA)']",namespace,Demo.LearnByDoing.General,3,30,,
16,FindingAllFactorsProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\FindingAllFactorsProgram.cs,"['public class FindingAllFactorsProgram', 'public static void Main(string[] args)', 'private static IEnumerable<int> GetFactors(int number)']",namespace,Demo.LearnByDoing.General,4,39,,
17,FindValueInSortedArrayProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\FindValueInSortedArrayProgram.cs,"['public class FindValueInSortedArrayProgram', 'public static void Main(string[] args)', 'private static bool FindValue(int[] a, int value)']",namespace,Demo.LearnByDoing.General,2,41,,
18,MinimalTreeGenerationProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\MinimalTreeGenerationProgram.cs,"['public class MinimalTreeGenerationProgram', 'public static void Main(string[] args)', 'private static Node CreateMinimalTreeBst(int[] a)', 'private static Node CreateMinimalTreeBst(int[] a, int start, int end)']",namespace,Demo.LearnByDoing.General,3,38,,
19,ParsingNumbersPerDigitProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\ParsingNumbersPerDigitProgram.cs,"['public class ParsingNumbersPerDigitProgram', 'private const int UPTO = 1000000;', 'public static void Main(string[] args)', 'private static List<int> GetDigitsUsingConversion(int val)', 'private static List<int> GetDigits(int val)']",namespace,Demo.LearnByDoing.General,5,62,,
20,PrimeFactorizationProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\PrimeFactorizationProgram.cs,"['public class PrimeFactorizationProgram', 'public static void Main(string[] args)', 'private static IEnumerable<int> GetPrimeFactors(int number)']",namespace,Demo.LearnByDoing.General,6,47,,
21,RemoveDuplicatesProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\RemoveDuplicatesProgram.cs,"['public class RemoveDuplicatesProgram', 'public static void Main(string[] args)', 'private static int[] RemoveDuplicatesBySortingFirst(int[] a)', 'private static int[] RemoveDuplicatesByCheckingPreviousElement(int[] a)', 'private static int[] RemoveDuplicatesUsingHashTable(int[] a)', 'private static void ThrowExceptionIfArrayIsEmpty(int[] a)', 'private static void PrintArray(string header, int[] a)']",namespace,Demo.LearnByDoing.General,5,90,,
22,StringPermutationProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\StringPermutationProgram.cs,"['public class StringPermutationProgram', 'public static void Main(string[] args)', 'private static List<string> GetPermutations(string value)', 'private static void GetPermutations(string prefix, string remainder, List<string> result)', 'private static void Permute(string value, int left, int right)', 'private static void Swap(ref string value, int i, int j)']",namespace,Demo.LearnByDoing.General,7,77,,
23,TowerOfHanoiProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\TowerOfHanoiProgram.cs,"['public class TowerOfHanoiProgram', 'public static void Main(string[] args)', 'private static void PrintHanoiSteps(int disks, int tower1, int tower2, int tower3)']",namespace,Demo.LearnByDoing.General,2,33,,
24,AStarProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\AStar\AStarProgram.cs,"['public class AStarProgram', 'public static void Main(string[] args)', 'private static Graph<char> CreateSampleGraph()']",namespace,Demo.LearnByDoing.General.Algorithms.AStar,7,42,,
25,BellmanFordProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\BellmanFord\BellmanFordProgram.cs,"['public class BellmanFordProgram', 'public static void Main(string[] args)', 'private static Graph<char> CreateSampleGraph()']",namespace,Demo.LearnByDoing.General.Algorithms.BellmanFord,3,51,,
26,BellmanFordRepriseProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\BellmanFord\BellmanFordRepriseProgram.cs,['public class BellmanFordRepriseProgram'],namespace,Demo.LearnByDoing.General.Algorithms.BellmanFord,6,12,,
27,DijkstraProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\Dijkstra\DijkstraProgram.cs,"['public class DijkstraProgram', 'public static void Main(string[] args)', 'private static Graph<char> CreateSampleGraph()']",namespace,Demo.LearnByDoing.General.Algorithms.Dijkstra,4,46,,
28,Edge.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\Graph\Edge.cs,[],namespace,Demo.LearnByDoing.General.Algorithms.Graph,0,0,,
29,Graph.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\Graph\Graph.cs,"['public class Graph<T>', 'public Dictionary<Node<T>, Edge<T>[]> Vertices { get; } = new Dictionary<Node<T>, Edge<T>[]>();', 'public void AddVertex(Node<T> node, Edge<T>[] edges)', 'public List<Node<T>> GetShortestPathUsingBellmanFordAlgorithm(Node<T> fromNode, Node<T> toNode)', 'public Tuple<Dictionary<Node<T>, int>, Dictionary<Node<T>, Node<T>>>', 'public List<Node<T>> GetPathBetween3(Node<T> fromNode, Node<T> toNode)', 'public List<Node<T>> GetPathBetween2(Node<T> fromNode, Node<T> toNode)', 'public List<T> GetPathBetween(Node<T> fromNode, Node<T> toNode)']",namespace,Demo.LearnByDoing.General.Algorithms.Graph,4,304,,
30,Node.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\Graph\Node.cs,"['public class Node<T>', 'public T Value { get; set; }', 'public Node(T value)', 'public override bool Equals(object obj)', 'protected bool Equals(Node<T> other)', 'public override int GetHashCode()', 'public override string ToString()']",namespace,Demo.LearnByDoing.General.Algorithms.Graph,2,35,,
31,MaximumSubArray.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\MaximumSubArraySum\MaximumSubArray.cs,[],namespace,Demo.LearnByDoing.General.Algorithms.MaximumSubArraySum,0,0,,
32,MaximumSubArraySumProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\MaximumSubArraySum\MaximumSubArraySumProgram.cs,"['public class MaximumSubArraySumProgram', 'public static void Main(string[] args)', 'private static MaximumSubArray GetMaximumSubArray2(int[] a)', 'private static MaximumSubArray GetMaximumSubArray(int[] a)']",namespace,Demo.LearnByDoing.General.Algorithms.MaximumSubArraySum,2,87,,
33,PalindromePartitionProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Algorithms\PalindromePartition\PalindromePartitionProgram.cs,"['public class PalindromePartitionProgram', 'public static void Main(string[] args)', 'private static readonly PalinedromeChecker palinedromeChecker = new PalinedromeChecker();', 'private static int GetMinimumPalindromeSplitCount(string word)', 'private static int GetMinimumBetween(int[,] matrix, int i, int j)', 'private static void PrintMatrix(int[,] matrix)']",namespace,Demo.LearnByDoing.General.Algorithms.PalindromePartition,4,76,,
34,Graph.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Graph\Graph.cs,"['public class Graph', 'public Node[] Nodes;']",class,Graph,2,7,,"['public', 'class', 'Graph']"
35,Node.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Graph\Node.cs,"['public class Node', 'public int Value { get; set; }', 'public Node Left { get; set; }', 'public Node Right { get; set; }']",class,Node,2,9,,"['public', 'class', 'Node']"
36,Node.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\LinkedList\Node.cs,"['public class Node<T>', 'public T Value { get; set; }', 'public Node<T> Next { get; set; }', 'public Node(T value, Node<T> next)', 'public override string ToString()']",namespace,Demo.LearnByDoing.General.LinkedList,3,34,,
37,PrintForwardBackwardUsingRecursion.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\LinkedList\PrintForwardBackwardUsingRecursion.cs,"['public class PrintForwardBackwardUsingRecursion', 'public static void Main(string[] args)', 'private static void PrintBackwardUsingRecursion(Node<int> root)', 'private static void PrintForwardUsingRecursion(Node<int> root)', 'private static Node<int> GetNodes()']",namespace,Demo.LearnByDoing.General.LinkedList,2,54,,
38,ReverseLinkedListIteratively.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\LinkedList\ReverseLinkedListIteratively.cs,"['public class ReverseLinkedListIteratively', 'public static void Main(string[] args)', 'private static Node<int> ReverseIteratively(Node<int> root)', 'private static void Print(Node<int> root)', 'private static Node<int> GetNodes()']",namespace,Demo.LearnByDoing.General.LinkedList,2,62,,
39,ReverseLinkedListProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\LinkedList\ReverseLinkedListProgram.cs,"['public class ReverseLinkedListProgram', 'public static void Main(string[] args)', 'private static Node<int> ReverseRecursively(Node<int> curr, Node<int> next, Node<int> prev)', 'private static Node<int> ReverseIteratively(Node<int> head)', 'private static Node<int> BuildLinkedList()']",namespace,Demo.LearnByDoing.General.LinkedList,3,56,,
40,ReverseLinkedListUsingRecursion.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\LinkedList\ReverseLinkedListUsingRecursion.cs,"['public class ReverseLinkedListUsingRecursion', 'public static void Main(string[] args)', 'private static Node<int> _head;', 'private static void ReverseUsingRecursion(Node<int> node)', 'private static Node<int> GetNodes()']",namespace,Demo.LearnByDoing.General.LinkedList,2,47,,
41,FindingFirstLastOccurrenceOfANumberProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Search\FindingFirstLastOccurrenceOfANumberProgram.cs,"['public class FindingFirstLastOccurrenceOfANumberProgram', 'public static void Main(string[] args)', 'private static int GetFirstOccurrence(int[] numbers, int searchNumber)', 'private static int GetLastOccurrence(int[] numbers, int searchNumber)']",namespace,Demo.LearnByDoing.General.Search,3,80,,
42,KmpAlgorithmProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Search\KmpAlgorithmProgram.cs,"['public class KmpAlgorithmProgram', 'public static void Main(string[] args)']",namespace,Demo.LearnByDoing.General.Search,3,36,,
43,KmpSearch.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Search\KmpSearch.cs,"['public class KmpSearch', 'public bool SearchUsingKmp(string word, string searchWord)', 'private int[] SearchByKmp(string S, string W, int[] T)', 'private int[] BuildPrefixTable(string word)']",namespace,Demo.LearnByDoing.General.Search,3,105,,
44,KmpSearchYouTube.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Search\KmpSearchYouTube.cs,"['public class KmpSearchYouTube : IKmpSearch', 'public int[] Search(string word, string searchWord)', 'private int[] SearchByKmp(string S, string W, int[] T)', 'private int[] BuildPrefixTable(string searchWord)']",namespace,Demo.LearnByDoing.General.Search,3,110,,
45,BinarySearchFindFirstLastProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Sort\BinarySearchFindFirstLastProgram.cs,"['public class BinarySearchFindFirstLastProgram', 'public static void Main(string[] args)', 'private static Tuple<int, int> GetFirstLastOccurrences(int[] a, int searchValue)', 'private static int BinarySearch(int[] a, int searchValue, bool searchFirst = true)']",namespace,Demo.LearnByDoing.General.Sort,2,61,,
46,BinarySearchProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Sort\BinarySearchProgram.cs,"['public class BinarySearchProgram', 'public static void Main(string[] args)', 'private static int BinarySearchRecursive(int[] a, int x, int low, int high)', 'private static int BinarySearch(int[] a, int x)']",namespace,Demo.LearnByDoing.General.Sort,3,60,,
47,MergeSortProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Sort\MergeSortProgram.cs,"['public static void Main(string[] args)', 'private static void MergeSort(int[] a, int[] helper, int low, int high, string hint)', 'private static void Merge(int[] a, int[] helper, int low, int middle, int high, string hint)']",namespace,Demo.LearnByDoing.General.Sort,3,87,,
48,MergeSortProgram2.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Sort\MergeSortProgram2.cs,"['public class MergeSortProgram2', 'public static void Main(string[] args)', 'private static void MergeSort(int[] a)', 'private static void Merge(int[] left, int[] right, int[] a)']",namespace,Demo.LearnByDoing.General.Sort,3,86,,
49,QuickSortProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Sort\QuickSortProgram.cs,"['public class QuickSortProgram', 'public static void Main(string[] args)', 'private static void QuickSort(int[] a, int start, int end)', 'private static int Partition(int[] a, int start, int end)', 'private static void Swap(int[] a, int i, int j)']",namespace,Demo.LearnByDoing.General.Sort,3,55,,
50,SelectionSortProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Sort\SelectionSortProgram.cs,"['public class SelectionSortProgram', 'public static void Main(string[] args)', 'private static int[] SelectionSort(int[] unsorted)', 'private static void Swap(int[] unsorted, int i, int j)', 'private static void PrintSorted(int[] sorted)']",namespace,Demo.LearnByDoing.General.Sort,3,51,,
51,SortBasedOnAnotherListProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Sort\SortBasedOnAnotherListProgram.cs,"['public class SortBasedOnAnotherListProgram', 'public static void Main(string[] args)', 'private static IEnumerable<string> SortAtRandom(int[] a, string[] words)']",namespace,Demo.LearnByDoing.General.Sort,4,34,,
52,SortedArrayRotationCountProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Sort\SortedArrayRotationCountProgram.cs,"['public class SortedArrayRotationCountProgram', 'public static void Main(string[] args)', 'private static int GetRotationCount(int[] a)']",namespace,Demo.LearnByDoing.General.Sort,2,39,,
53,CheckForBalancedParentheses.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Stack\CheckForBalancedParentheses.cs,"['public class CheckForBalancedParentheses', 'public static void Main(string[] args)', 'private static IEnumerable<bool> CheckBalanced(string[] parentheses)', ""private static HashSet<char> openingParentheses = new HashSet<char> {'(', '[', '{'};"", ""private static HashSet<char> closingParentheses = new HashSet<char> {')', ']', '}'};"", 'private static Dictionary<char, char> map = new Dictionary<char, char>', 'private static bool IsBalanced(string parenthesis)']",namespace,Demo.LearnByDoing.General.Stack,4,64,,
54,BreadthFirstTraversal.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Tree\BreadthFirstTraversal.cs,"['public class BreadthFirstTraversal', 'public static void Main(string[] args)', 'private static void TraverseBreadthFirst(TreeNode<int> root, List<int> list)', 'private static void PrintListWithHeader(string header, List<int> list)', 'private static TreeNode<int> CreateSampleBinaryTree()']",namespace,Demo.LearnByDoing.General.Tree,4,58,,
55,LowestCommonAncestorProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Tree\LowestCommonAncestorProgram.cs,"['public class LowestCommonAncestorProgram', 'public static void Main(string[] args)', 'private static TreeNode<int> GetLowestCommonAncestor(TreeNode<int> root, TreeNode<int> n1, TreeNode<int> n2)', 'private static TreeNode<int> BuildTree()']",namespace,Demo.LearnByDoing.General.Tree,3,86,,
56,TreeNode.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Tree\TreeNode.cs,"['public class TreeNode<T>', 'public T Value { get; set; }', 'public TreeNode<T> Left { get; set; }', 'public TreeNode<T> Right { get; set; }', 'public TreeNode(T value)', 'public TreeNode(T value, TreeNode<T> left, TreeNode<T> right)', 'public static bool operator==(TreeNode<T> left, TreeNode<T> right)', 'public static bool operator !=(TreeNode<T> left, TreeNode<T> right)', 'public override bool Equals(object obj)']",class,TreeNode<T>,2,40,,"['public', 'class', 'TreeNode<T>']"
57,TreeTraversalProgram.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.General\Tree\TreeTraversalProgram.cs,"['public class TreeTraversalProgram', 'public static void Main(string[] args)', 'private static void PostOrderTraversal(TreeNode<int> node, List<int> list)', 'private static void PreOrderTraversal(TreeNode<int> node, List<int> list)', 'private static void InOrderTraversal(TreeNode<int> node, List<int> list)', 'private static void PrintListWithHeader(string header, List<int> list)', 'private static TreeNode<int> CreateSampleBinaryTree()']",namespace,Demo.LearnByDoing.General.Tree,4,69,,
58,CountOccurencesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.MyCodeSchool\ProgrammingInterviewQuestions\CountOccurencesTest.cs,"['public class CountOccurencesTest : BaseTest', 'private readonly CountOccurences _sut = new CountOccurences();', 'public CountOccurencesTest(ITestOutputHelper output) : base(output)', 'public void TestGettingFirstIndexes(int[] a, int value, int expected)', 'public void TestGettingLastIndexes(int[] a, int value, int expected)', 'public void TestCountOfElementInASortedList(int[] a, int value, int expected)', 'public class CountOccurences', 'public int GetCountUsinBinarySearch(int[] a, int value)', 'private int FindIndex(int[] a, int value, bool findFirst = true)', 'public int FindFirstIndex(int[] a, int value)', 'public int FindLastIndex(int[] a, int value)', 'public class CountOccurencesFirstIndexData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class CountOccurencesLastIndexData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class CountOccurencesData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.MyCodeSchool.ProgrammingInterviewQuestions,5,136,,
59,Program.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Permutation\Program.cs,"['private static IEnumerable<string> GetPermutations(string str)', 'private static IEnumerable<string> GetPermutations(string str, string prefix)', 'private static void Permutation(string str, string prefix = """")']",namespace,Demo.LearnByDoing.Permutation,4,69,,
60,PalinedromeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\PalinedromeTest.cs,"['public class PalinedromeTest : BaseTest', 'private readonly PalinedromeChecker _sut = new PalinedromeChecker();', 'public PalinedromeTest(ITestOutputHelper output) : base(output)', 'public void TestPalindrome(string word, bool expected)', 'public class PalinedromeBaseTestData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests,5,39,,
61,BellmanFordFromScratchTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\BellmanFordFromScratchTest.cs,[],namespace,Demo.LearnByDoing.Tests.Algorithms,6,0,,
62,BellmanFordRepriseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\BellmanFordRepriseTest.cs,[],namespace,Demo.LearnByDoing.Tests.Algorithms,6,0,,
63,DijkstraRepriseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\DijkstraRepriseTest.cs,[],namespace,Demo.LearnByDoing.Tests.Algorithms,7,0,,
64,GraphBreadthFirstSearchTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\GraphBreadthFirstSearchTest.cs,"['public class GraphBreadthFirstSearchTest : BaseTest', 'public GraphBreadthFirstSearchTest(ITestOutputHelper output) : base(output)', 'public void TestBfs(char[] expected, Graph<char> graph)', 'private IEnumerable<Node<char>> BreadthFirstSearchGraph(Graph<char> graph, Node<char> start)', 'public static IEnumerable<object[]> GetSamples()']",namespace,Demo.LearnByDoing.Tests.Algorithms,10,78,,
65,GraphDepthFirstSearchTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\GraphDepthFirstSearchTest.cs,[],namespace,Demo.LearnByDoing.Tests.Algorithms,4,0,,
66,LevenshteinDistanceTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\LevenshteinDistanceTest.cs,"['public class LevenshteinDistanceTest : BaseTest', 'public LevenshteinDistanceTest(ITestOutputHelper output) : base(output)', 'public void BaseCaseTest()', 'public class LevenshteinDistance', 'public int Calculate(string s1, string s2)', 'private int[,] BuildMatrix(string s1, string s2)', 'private void PrintMatrix(int[,] matrix)']",namespace,Demo.LearnByDoing.Tests.Algorithms,6,92,,
67,MakePalindromeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\MakePalindromeTest.cs,"['public class MakePalindromeTest : BaseTest', 'private readonly MakePalindrome _sut = new MakePalindrome();', 'public MakePalindromeTest(ITestOutputHelper output) : base(output)', 'public void TestForwardLoopResult(string word, string expected)', 'public void TestBackwardLoopResult(string word, string expected)', 'public void AddMinCharToMakePalindrome(string word, string expected)', 'public class MakePalindrome', 'public string GetShortestPalindrome(string word)', 'public string BuildPalindrome(string word)', 'public string GetForwardPrefix(string word)', 'public string GetBackwardPrefix(string word)', 'private void PushRange<T>(Stack<T> source, IEnumerable<T> collection)', 'public class AddMinCharToMakePalindromeBaseTestData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.Algorithms,6,187,,
68,MergeSortTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\MergeSortTest.cs,"['public class MergeSortTest : BaseTest', 'private readonly MergeSort _sut = new MergeSort();', 'public MergeSortTest(ITestOutputHelper output) : base(output)', 'public void TestMergingTwoListSorted(int[] left, int[] right, int[] expected)', 'public void TestMergeSort(int[] a, int[] expected)', 'public void TestMergeSortReprise(int[] a, int[] expected)', 'private int[] MergeSortArray(int[] a)', 'private IEnumerable<int> Merge(int[] left, int[] right)', 'public class MergeSort', 'public void Merge(int[] left, int[] right, int[] a)', 'public int[] Sort(int[] a)', 'public class MergeSortBaseTestData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class MergeSortBaseTestDataMerge : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.Algorithms,6,196,,
69,PrimsAlgorithmTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\PrimsAlgorithmTest.cs,"['public class PrimsAlgorithmTest', 'public void TestPrims()', 'private IEnumerable<Edge> GetMinimumSpanningTreeEdges3(Dictionary<char,List<Edge>> g)', 'private char ExtractMinimumVertex2(Dictionary<char,int> minHeap)', 'private IEnumerable<Edge> GetMinimumSpanningTreeEdges2(Dictionary<char, List<Edge>> g)', 'private char ExtractMinimumVertex(Dictionary<char, int> minHeapMap)', 'private Dictionary<char, int> BuildBinaryMinHeap(Dictionary<char, List<Edge>> g)', 'private IEnumerable<Edge> GetMinimumSpanningTreeEdgesBad(Dictionary<char, List<Edge>> g)', 'public char V1 { get; set; }', 'public char V2 { get; set; }', 'public int Weight { get; set; }', 'public Edge(char v1, char v2, int weight)', 'public override string ToString()', 'public override bool Equals(object obj)']",namespace,Demo.LearnByDoing.Tests.Algorithms,6,278,,
70,TopologicalGraphSortTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\TopologicalGraphSortTest.cs,"['public class TopologicalGraphSortTest : BaseTest', 'private readonly TopologicalGraphSort _sut = new TopologicalGraphSort();', 'public TopologicalGraphSortTest(ITestOutputHelper output) : base(output)', 'public void TestTopologicalSort(Graph<string> graph, string expected)', 'public class TopologicalGraphSort', 'public List<Vertex<T>> GetSorted<T>(Graph<T> graph)', 'private void SortChild<T>(Vertex<T> vertex, Stack<Vertex<T>> stack, HashSet<Vertex<T>> visited)', 'public class TopologicalGraphSortBaseTestData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'private static Graph<string> GetGraph()']",namespace,Demo.LearnByDoing.Tests.Algorithms,8,114,,
71,ZAlgorithmTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\ZAlgorithmTest.cs,"['public class ZAlgorithmTest', 'public void TestSamples(int[] expected, string input)', 'private int[] BuildZArray(string input)', 'public static IEnumerable<object[]> GetSamples()']",namespace,Demo.LearnByDoing.Tests.Algorithms,4,81,,
72,ReverseLinkedListTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\LinkedList\ReverseLinkedListTest.cs,[],namespace,Demo.LearnByDoing.Tests.Algorithms.LinkedList,0,0,,
73,SortingTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\Sorting\SortingTest.cs,"['public class SortingTest', 'public void TestSampleData(int[] expected, int[] input)', 'private int[] InsertionSort(int[] input)', 'private void Swap(int[] a, int i, int j)', 'public static IEnumerable<object[]> GetSampleData()']",namespace,Demo.LearnByDoing.Tests.Algorithms.Sorting,4,54,,
74,TopologicalSortingTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Algorithms\Sorting\TopologicalSortingTest.cs,[],namespace,Demo.LearnByDoing.Tests.Algorithms.Sorting,7,0,,
75,Chapter1_1.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_1.cs,"['public class Chapter1_1', 'public bool HasUniqueCharacters(string text)']",namespace,Demo.LearnByDoing.Tests.Chapter01,2,18,,
76,Chapter1_1Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_1Test.cs,"['public class Chapter1_1Test : BaseTest', 'private readonly Chapter1_1 _sut = new Chapter1_1();', 'public Chapter1_1Test(ITestOutputHelper output) : base(output)', 'public void TextHasUniqueCharacters(string text, bool expected)']",namespace,Demo.LearnByDoing.Tests.Chapter01,4,32,,
77,Chapter1_2.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_2.cs,"['public class Chapter1_2', 'public bool AreStringsPermutationalUsingLinq(string text1, string text2)', 'public bool AreStringsPermutational(string text1, string text2)', 'private string SortAlphabetically(string text)']",namespace,Demo.LearnByDoing.Tests.Chapter01,3,40,,
78,Chapter1_2Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_2Data.cs,"['public class Chapter1_2Data : IEnumerable<object[]>', 'private readonly List<object[]> _data = new List<object[]>', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter01,3,34,,
79,Chapter1_2Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_2Test.cs,"['public class Chapter1_2Test : BaseTest', 'private readonly Chapter1_2 _sut = new Chapter1_2();', 'public Chapter1_2Test(ITestOutputHelper output) : base(output)', 'public void CompareIfOneTextIsAPermutationOfTheOther(string text1, string text2, bool expected)', 'public void CompareIfOneTextIsAPermutationOfTheOtherUsingLinq(string text1, string text2, bool expected)']",namespace,Demo.LearnByDoing.Tests.Chapter01,4,36,,
80,Chapter1_3.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_3.cs,"['public class Chapter1_3', 'public string UrlifyString(string text, int trueLength)']",namespace,Demo.LearnByDoing.Tests.Chapter01,2,51,,
81,Chapter1_3Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_3Data.cs,"['public class Chapter1_3Data : IEnumerable<object[]>', 'private readonly List<object[]> _data = new List<object[]>', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter01,3,29,,
82,Chapter1_3Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_3Test.cs,"['public class Chapter1_3Test : BaseTest', 'private readonly Chapter1_3 _sut = new Chapter1_3();', 'public Chapter1_3Test(ITestOutputHelper output) : base(output)', 'public void TestUrlifyingText(string text, int trueLength, string expected)']",namespace,Demo.LearnByDoing.Tests.Chapter01,4,34,,
83,Chapter1_4.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_4.cs,"['public class Chapter1_4', 'public bool HasPalindrome(string text)', 'public bool IsPalindrome(string text)', 'private bool IsNotSpace(char c)']",namespace,Demo.LearnByDoing.Tests.Chapter01,4,64,,
84,Chapter1_4Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_4Data.cs,"['public class Chapter1_4Data : IEnumerable<object[]>', 'private readonly List<object[]> _data = new List<object[]>', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter01,3,37,,
85,Chapter1_4Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_4Test.cs,"['public class Chapter1_4Test : BaseTest', 'private readonly Chapter1_4 _sut = new Chapter1_4();', 'public Chapter1_4Test(ITestOutputHelper output) : base(output)', 'public void IsPalindrome(string text, bool expected)', 'public void CheckIfTextCanBeAPalindrome(string text, bool expected)']",namespace,Demo.LearnByDoing.Tests.Chapter01,4,60,,
86,Chapter1_5.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_5.cs,"['public class Chapter1_5', 'public bool IsOneEditAway(string text1, string text2)']",namespace,Demo.LearnByDoing.Tests.Chapter01,3,71,,
87,Chapter1_5Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_5Test.cs,"['public class Chapter1_5Test : BaseTest', 'private readonly Chapter1_5 _sut = new Chapter1_5();', 'public Chapter1_5Test(ITestOutputHelper output) : base(output)', 'public void TestCharacterDifferenceCount(string text1, string text2, bool expected)', 'public class Chapter1_5Data : IEnumerable<object[]>', 'private readonly List<object[]> _data = new List<object[]>', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter01,7,82,,
88,Chapter1_6.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_6.cs,"['public class Chapter1_6', 'public string CompressText(string text)']",namespace,Demo.LearnByDoing.Tests.Chapter01,2,60,,
89,Chapter1_6Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_6Data.cs,"['public class Chapter1_6Data : IEnumerable<object[]>', 'private readonly List<object[]> _data = new List<object[]>', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter01,3,30,,
90,Chapter1_6Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_6Test.cs,"['public class Chapter1_6Test : BaseTest', 'private readonly Chapter1_6 _sut = new Chapter1_6();', 'public Chapter1_6Test(ITestOutputHelper output) : base(output)', 'public void TestCompression(string text, string expected)']",namespace,Demo.LearnByDoing.Tests.Chapter01,4,31,,
91,Chapter1_7Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_7Test.cs,[],namespace,Demo.LearnByDoing.Tests.Chapter01,8,0,,
92,Chapter1_8.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_8.cs,"['public class Chapter1_8', 'public IEnumerable<Tuple<int, int>> GetZeroPositions(int[,] matrix)']",namespace,Demo.LearnByDoing.Tests.Chapter01,3,20,,
93,Chapter1_8Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_8Test.cs,[],namespace,Demo.LearnByDoing.Tests.Chapter01,7,0,,
94,Chapter1_9Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter01\Chapter1_9Test.cs,"['public class Chapter1_9Test : BaseTest', 'private readonly Chapter1_9 _sut = new Chapter1_9();', 'public Chapter1_9Test(ITestOutputHelper output) : base(output)', 'public void TestIfSubstringIsRotation(string s1, string s2, bool expected)', 'public void TestIfSubstringIsRotation2(string s1, string s2, bool expected)', 'public class Chapter1_9', 'public bool IsRotationSubstring2(string s1, string s2)', 'public bool IsRotationSubstring(string s1, string s2)', 'public class Chapter1_9Data : IEnumerable<object[]>', 'private readonly List<object[]> _data = new List<object[]>', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter01,8,126,,
95,Chapter2Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2Data.cs,"['public abstract class Chapter2Data : BaseTestData', 'protected static Node<T> GetInputNode<T>(params T[] nodeData)', 'public class Chapter2DataRemoveMiddle : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class Chapter2DataMiddle : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class Chapter2DataLength : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,55,,
96,Chapter2Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2Test.cs,"['public class Chapter2_2Test : Chapter2TestBase', 'private readonly Chapter2_2 _sut = new Chapter2_2();', 'public Chapter2_2Test(ITestOutputHelper output) : base(output)', 'public void TestGettingKthElementToTheLastElements(', 'public void TestGettingKthElementToTheLastElementOfASinglyLinkedList(']",namespace,Demo.LearnByDoing.Tests.Chapter02,5,40,,
97,Chapter2TestBase.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2TestBase.cs,"['public class Chapter2TestBase : BaseTest', 'protected Chapter2TestBase(ITestOutputHelper output) : base(output)', 'protected bool AreNodesEqual<T>(Node<T> expected, Node<T> actual)']",namespace,Demo.LearnByDoing.Tests.Chapter02,4,31,,
98,Chapter2_1.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_1.cs,"['public class Chapter2_1', 'public LinkedList<int> RemoveDuplicatesWithoutTemporaryBuffer(LinkedList<int> input)', 'public LinkedList<int> RemoveDuplicates(LinkedList<int> input)']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,48,,
99,Chapter2_1Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_1Data.cs,"['public class Chapter2_1Data : IEnumerable<object[]>', 'private readonly List<object[]> _data = new List<object[]>', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,42,,
100,Chapter2_1Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_1Test.cs,"['public class Chapter2_1Test : Chapter2TestBase', 'private readonly Chapter2_1 _sut = new Chapter2_1();', 'public Chapter2_1Test(ITestOutputHelper output) : base(output)', 'public void TestRemovingDuplicatesFromUnsortedLinkedList(LinkedList<int> input, LinkedList<int> expected)', 'public void TestRemovingDuplicatesFromUnsortedLinkedListWithoutUsingTemporaryBuffer(']",namespace,Demo.LearnByDoing.Tests.Chapter02,5,41,,
101,Chapter2_2.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_2.cs,"['public class Chapter2_2', 'public Node<int> GetKthToLastElementsOfNode(Node<int> input, int k)', 'public LinkedList<int> GetKthToLastElements(LinkedList<int> input, int k)']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,32,,
102,Chapter2_2Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_2Data.cs,"['public class Chapter2_2Data : IEnumerable<object[]>', 'private static readonly LinkedListWithInit<int> _input = new LinkedListWithInit<int> { 1, 2, 3, 4, 5 };', 'private readonly List<object[]> _data = new List<object[]>', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,30,,
103,Chapter2_2Data2.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_2Data2.cs,"['public class Chapter2_2Data2 : IEnumerable<object[]>', 'private const int UPTO = 5;', 'private static readonly Node<int> _input = GetInputNode(1, UPTO);', 'private readonly List<object[]> _data = new List<object[]>', 'private static Node<int> GetInputNode(int from, int to)', 'public IEnumerator<object[]> GetEnumerator()']",namespace,Demo.LearnByDoing.Tests.Chapter02,4,49,,
104,Chapter2_3.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_3.cs,"['public class Chapter2_3', 'public Node<string> RemoveMiddelValue(string middleValue, Node<string> input)', 'public Node<string> GetMiddleNodes(Node<string> input)', 'public int GetNodeCount(Node<string> input)']",namespace,Demo.LearnByDoing.Tests.Chapter02,2,65,,
105,Chapter2_3Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_3Test.cs,"['public class Chapter2_3Test : Chapter2TestBase', 'private readonly Chapter2_3 _sut = new Chapter2_3();', 'public Chapter2_3Test(ITestOutputHelper output) : base(output)', 'public void TestGettingSinglyLinkedListLength(Node<string> input, int expected)', 'public void TestGettingMiddleNodesOnly(Node<string> input, Node<string> expected)', 'public void TestRemovingMiddleNode(string middleValue, Node<string> input, Node<string> expected)']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,53,,
106,Chapter2_4Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_4Test.cs,"['public class Chapter2_4Test : Chapter2TestBase', 'private readonly Chapter2_4 _sut = new Chapter2_4();', 'public Chapter2_4Test(ITestOutputHelper output) : base(output)', 'public void TestPartitioningNodeByValue(int partition, Node<int> input, Node<int> expected)', 'public void TestPartitioningNodeByValue2(int partition, Node<int> input, Node<int> expected)', 'public void TestPartitioningNodeByValueUsingAnswerFromBook(int partition, Node<int> input, Node<int> expected)', 'public class Chapter2_4', 'public List<T> NodeToList<T>(Node<T> node)', 'public Node<int> PartitionNode3(int partition, Node<int> node)', 'public Node<int> PartitionNode2(int partition, Node<int> input)', 'public Node<int> PartitionNode(int partition, Node<int> input)', 'private Dictionary<int, int> GetNodeMap(Node<int> input)', 'private Dictionary<int, Node<int>> GetNodeMap2(Node<int> input)', 'public class Chapter2_4Data_Small : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class Chapter2_4Data : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.Chapter02,6,203,,
107,Chapter2_5.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_5.cs,"['public class Chapter2_5', 'public Node<int> AddNodesForwards(Node<int> left, Node<int> right)', 'private int SumNodesForward(Node<int> left, Node<int> right, int digit, int accum)', 'public Node<int> AddNodesReverse(Node<int> left, Node<int> right)', 'public int GetNodeLength(Node<int> node)', 'public Node<int> PadZeroNodes(int length, Node<int> node)', 'private int SumNodes(Node<int> left, Node<int> right, int digit, int accum)', 'private Node<int> ConvertToReverseNode(int value)', 'private Node<int> ConvertToForwardNode(int value)']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,128,,
108,Chapter2_5Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_5Data.cs,"['public class Chapter2_5Data_Padding : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class Chapter2_5Data_Length : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class Chapter2_5Data_Reverse : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class Chapter2_5Data_Forward : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.Chapter02,2,55,,
109,Chapter2_5Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_5Test.cs,"['public class Chapter2_5Test : Chapter2TestBase', 'private readonly Chapter2_5 _sut = new Chapter2_5();', 'public Chapter2_5Test(ITestOutputHelper output) : base(output)', 'public void TestReverseAdditionOfNodes(Node<int> left, Node<int> right, Node<int> expected)', 'public void TestPadZeroToIncreaseNodeLength(int length, Node<int> node, Node<int> expected)', 'public void TestNodeLengths(Node<int> node, int expected)', 'public void TestForwardAdditionOfNodes(Node<int> left, Node<int> right, Node<int> expected)']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,68,,
110,Chapter2_6.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_6.cs,"['public class Chapter2_6', 'public bool IsNodePalindrome(Node<int> node)', 'private bool IsPalindrome(Node<int> node)']",namespace,Demo.LearnByDoing.Tests.Chapter02,4,45,,
111,Chapter2_6Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_6Data.cs,"['public class Chapter2_6Data : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.Chapter02,2,18,,
112,Chapter2_6Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_6Test.cs,"['public class Chapter2_6Test : Chapter2TestBase', 'private readonly Chapter2_6 _sut = new Chapter2_6();', 'public Chapter2_6Test(ITestOutputHelper output) : base(output)', 'public void TestIfNodeIsPalindromic(Node<int> node, bool expected)']",namespace,Demo.LearnByDoing.Tests.Chapter02,3,27,,
113,Chapter2_7.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_7.cs,"['public class Chapter2_7', 'public bool AreNodesIntersecting(Node<int> node1, Node<int> node2)', 'private NodeResult<int> AreIntersecting(Node<int> node1, Node<int> node2)', 'public Node<T> Node1 { get; set; }', 'public Node<T> Node2 { get; set; }', 'public bool AreIntersecting { get; set; }', 'public NodeResult(Node<T> node1, Node<T> node2, bool areIntersecting)']",class,Chapter2_7,2,37,,"['public', 'class', 'Chapter2_7']"
114,Chapter2_7Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_7Data.cs,"['public class Chapter2_7Data : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'private static Tuple<Node<int>, Node<int>>  GetNodes1()', 'private static Tuple<Node<int>, Node<int>>  GetNodes2()', 'private static Tuple<Node<int>, Node<int>>  GetNodes3()', 'private static Tuple<Node<int>, Node<int>>  GetNodes4()']",namespace,Demo.LearnByDoing.Tests.Chapter02,4,73,,
115,Chapter2_7Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_7Test.cs,"['public class Chapter2_7Test : Chapter2TestBase', 'private readonly Chapter2_7 _sut = new Chapter2_7();', 'public Chapter2_7Test(ITestOutputHelper output) : base(output)', 'public void TestNodeIntersection(Tuple<Node<int>, Node<int>> nodes, bool expected)']",namespace,Demo.LearnByDoing.Tests.Chapter02,4,31,,
116,Chapter2_8Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Chapter2_8Test.cs,"['public class Chapter2_8Test : Chapter2TestBase', 'private readonly Chapter2_8 _sut = new Chapter2_8();', 'public Chapter2_8Test(ITestOutputHelper output) : base(output)', 'public void TestDetectingNodeLoopStart(Node<string> node, string expected)', 'public class Chapter2_8', 'public T GetNodeLoopStartValue<T>(Node<T> node)', 'public class Chapter2_8Data : Chapter2Data', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'private static Node<string> GetLoopingNode1()', 'private static Node<string> GetLoopingNode2()']",namespace,Demo.LearnByDoing.Tests.Chapter02,4,108,,
117,LinkedListWithInit.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\LinkedListWithInit.cs,"['public class LinkedListWithInit<T> : LinkedList<T>', 'public void Add(T item)']",namespace,Demo.LearnByDoing.Tests.Chapter02,2,15,,
118,Node.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter02\Node.cs,"['public class Node<T>', 'public Node<T> Next { get; set; }', 'public T Data { get; set; }', 'public Node(T data)', 'public void AddLast<T>(T data)', 'public override string ToString()', 'public int GetLength()']",class,Node<T>,2,59,,"['public', 'class', 'Node<T>']"
119,Chapter4BaseTestData.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter04\Chapter4BaseTestData.cs,['public abstract class Chapter4BaseTestData : BaseTestData'],namespace,Demo.LearnByDoing.Tests.Chapter04,2,8,,
120,Chapter4_1Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter04\Chapter4_1Test.cs,"['public class Chapter4_1Test : BaseTest', 'private readonly Chapter4_1 _sut = new Chapter4_1();', 'public Chapter4_1Test(ITestOutputHelper output) : base(output)', 'public void TestDepthFirstSearchToFindRouteBetweenTwoNodes(bool expected, Node<int> node1, Node<int> node2)', 'public void TestDepthFirstSearchToFindRouteBetweenTwoNodesOptimized(bool expected, Node<int> node1, Node<int> node2)', 'public class Chapter4_1', 'public bool HasRouteUsingDfs2(Node<int> node1, Node<int> node2)', 'public bool HasRouteUsingDfs<T>(Node<T> node1, Node<T> node2)', 'private IEnumerable<T> GetValuesUsingDfs<T>(Node<T> node)', 'public class Chapter4Base1Data : Chapter4BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'private static Graph<int> GetGraph2()', 'private static Graph<int> GetGraph()']",namespace,Demo.LearnByDoing.Tests.Chapter04,6,179,,
121,Chapter4_2Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter04\Chapter4_2Test.cs,"['public class Chapter4_2Test : BaseTest', 'private readonly Chapter4_2 _sut = new Chapter4_2();', 'public Chapter4_2Test(ITestOutputHelper output) : base(output)', 'public class Chapter4_2', 'public class Chapter4Base2Data : Chapter4BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class TreeNode<T>', 'public string Name { get; set; }', 'public TreeNode<T>[] Children { get; set; }', 'public class Tree<T>', 'public TreeNode<T> Root { get; set; }']",namespace,Demo.LearnByDoing.Tests.Chapter04,4,43,,
122,Graph.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter04\Graph.cs,"['public class Graph<T>', 'public List<Node<T>> Nodes { get; set; } = new List<Node<T>>();']",namespace,Demo.LearnByDoing.Tests.Chapter04,2,9,,
123,Node.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter04\Node.cs,"['public class Node<T>', 'public T Name { get; set; }', 'public List<Node<T>> Children { get; set; } = new List<Node<T>>();', 'public bool IsVisited { get; set; } = false;', 'public bool IsMarked { get; set; } = false;', 'public Node(T name)']",namespace,Demo.LearnByDoing.Tests.Chapter04,2,25,,
124,Chapter5_1Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter05\Chapter5_1Test.cs,"['public class Chapter5_1Test : BaseTest', 'private readonly Chapter5_1 _sut = new Chapter5_1();', 'public Chapter5_1Test(ITestOutputHelper output) : base(output)', 'public void TestUpdateBits()', 'public class Chapter5_1', 'private string ToBin(int value)', 'public int UpdateBits(int n, int m, int i, int j)']",namespace,Demo.LearnByDoing.Tests.Chapter05,5,75,,
125,Chapter5_2Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter05\Chapter5_2Test.cs,"['public class Chapter5_2Test : BaseTest', 'private readonly Chapter5_2 _sut = new Chapter5_2();', 'public Chapter5_2Test(ITestOutputHelper output) : base(output)', 'public void TestGettingStringRepresentationOfBinaryDecimal()', 'public class Chapter5_2', 'public string GetBinaryString(double num)']",namespace,Demo.LearnByDoing.Tests.Chapter05,9,73,,
126,Chapter5_3.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter05\Chapter5_3.cs,"['public class Chapter5_3', 'public int GetLongestSequenceOfOnes(int number)', 'private const int INT_BIT_SIZE = 32;', 'public IEnumerable<int> GetOneCount(int number)']",namespace,Demo.LearnByDoing.Tests.Chapter05,4,57,,
127,Chapter5_3Data.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter05\Chapter5_3Data.cs,"['public class Chapter5_3Data : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class Chapter5_3Data_SequentialCount : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.Chapter05,3,23,,
128,Chapter5_3Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter05\Chapter5_3Test.cs,"['public class Chapter5_3Test : BaseTest', 'private readonly Chapter5_3 _sut = new Chapter5_3();', 'public Chapter5_3Test(ITestOutputHelper output) : base(output)', 'public void TestGettingSequentialCount(int number, List<int> expected)', 'public void TestGettingLongestSequenceOfOnes(int number, int expected)']",namespace,Demo.LearnByDoing.Tests.Chapter05,6,45,,
129,Chapter5_6Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter05\Chapter5_6Test.cs,"['public class Chapter5_6Test : BaseTest', 'private readonly Chapter5_6 _sut = new Chapter5_6();', 'public Chapter5_6Test(ITestOutputHelper output) : base(output)', 'public void TestGettingNumberOfFlippedBits(int n1, int n2, int expected)', 'public class Chapter5_6', 'public int GetFlippedBitCount3(int n1, int n2, ITestOutputHelper output)', 'public int GetFlippedBitCount2(int n1, int n2, ITestOutputHelper output)', 'public int GetFlippedBitCount(int n1, int n2, ITestOutputHelper output)', 'public class Chapter5_6Data : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.Chapter05,6,93,,
130,CommonBitManipulationTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter05\CommonBitManipulationTest.cs,"['public class CommonBitManipulationTest : BaseTest', 'private readonly CommonBitManipulation _sut = new CommonBitManipulation();', 'public CommonBitManipulationTest(ITestOutputHelper output) : base(output)', 'public void TestGettingBits()', 'public void TestSettingBits()', 'public void TestClearingBits()', 'public void TestClearingAllBitsFromTheMostSignificantBitThroughI()', 'public void TestUpdatingBit()', 'public class CommonBitManipulation', 'public int UpdateBit(int num, int i, bool bitIs1)', 'public int ClearBitsMsbThroughI(int num, int i)', 'public int ClearBit(int num, int i)', 'public bool GetBit(int num, int i)', 'public int SetBit(int num, int i)']",namespace,Demo.LearnByDoing.Tests.Chapter05,5,109,,
131,Chapter7_2Main.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter07\Chapter7_2Main.cs,"['public class Chapter7_2Main', 'public static void Main(string[] args)', 'private static IEnumerable<Director> GetDirectors(int directorCount)', 'private static IEnumerable<Manager> GetManagers(int managerCount)', 'private static IEnumerable<Employee> GetEmployees(int employeeCount)', 'public class Employees : IElement', 'public int CallCount { get; set; }', 'public Employees(int callCount)', 'public List<List<Employee>> Handlers { get; set; } = new List<List<Employee>>();', 'public void AddCallHandlers(List<Employee> employees)', 'public void Accept(IVisitor visitor)', 'public interface IElement', 'public interface IVisitor', 'public class CallHandlerVisitor : IVisitor', 'public static int CurrentCall { get; set; } = 0;', 'public void Visit(IElement element, int callCount)', 'public class Director : Manager', 'public Director(string name, bool isHandlingCall) : base(name, isHandlingCall)', 'public class Manager : Employee', 'public Manager(string name, bool isHandlingCall) : base(name, isHandlingCall)', 'public class Employee : IElement', 'public string Name { get; set; }', 'public bool CanHandleCall { get; set; }', 'public Employee(string name, bool canHandleCall)', 'public void Accept(IVisitor visitor)']",namespace,Demo.LearnByDoing.Tests.Chapter07,4,131,,
132,Chapter7_2Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter07\Chapter7_2Test.cs,"['public class Chapter7_2Test : BaseTest', 'private readonly Chapter7_2 _sut = new Chapter7_2();', 'public Chapter7_2Test(ITestOutputHelper output) : base(output)', 'public void TestHandlingTheCalls()', 'public class Chapter7_2']",namespace,Demo.LearnByDoing.Tests.Chapter07,9,29,,
133,Chapter10_1Main.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\Chapter10\Chapter10_1Main.cs,"['public class Chapter10_1Main : BaseTest', 'private readonly Chapter10_1 _sut = new Chapter10_1();', 'public Chapter10_1Main(ITestOutputHelper output) : base(output)', 'public void TestCopyingBToA(int lastA, int lastB, int[] a, int[] b, int[] expected)', 'public class Chapter10_1Data : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>', 'public class Chapter10_1', 'public void CopyBToA(ITestOutputHelper output, int[] a, int[] b, int lastA, int lastB)']",namespace,Demo.LearnByDoing.Tests.Chapter10,9,68,,
134,ReverseParenthesesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Arcade\SmoothSailing\ReverseParenthesesTest.cs,"['public class ReverseParenthesesTest : BaseTest', 'public ReverseParenthesesTest(ITestOutputHelper output) : base(output)', 'public void TestSampleCases(string input, string expected)', 'public static IEnumerable<object[]> GetSampleCases()']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Arcade.SmoothSailing,7,92,,
135,StringsRearrangementTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Arcade\ThroughTheFog\StringsRearrangementTest.cs,"['public class StringsRearrangementTest : BaseTest', 'public StringsRearrangementTest(ITestOutputHelper output) : base(output)', 'public void TestSamples(bool expected, string[] a)', 'public static IEnumerable<object[]> GetSampleCases()', 'private static IEnumerable<string[]> GetPermutations(string[] words)', 'private static IEnumerable<string[]> GetPermutations(IEnumerable<string> words, IEnumerable<string> prefix)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Arcade.ThroughTheFog,6,94,,
136,FirstDuplicateTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Arrays\FirstDuplicateTest.cs,"['public class FirstDuplicateTest', 'public void TestSampleData(int expected, int[] input)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Arrays,3,40,,
137,FirstNotRepeatingCharacterTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Arrays\FirstNotRepeatingCharacterTest.cs,"['public class FirstNotRepeatingCharacterTest', 'public void SampleTests(char expected, string input)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Arrays,3,48,,
138,LastDigitDiffZeroTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Challenges\LastDigitDiffZeroTest.cs,"['public class LastDigitDiffZeroTest', 'public void TestSampleCases(long n, int expected)', 'public static IEnumerable<object[]> GetSampleCases()', 'public void TestFactorialGeneration(long n, BigInteger expected)', 'public static IEnumerable<object[]> GetFactorialData()', 'private BigInteger GetFactorial(long n)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Challenges,4,86,,
139,N7MTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Challenges\N7MTest.cs,"['public class N7MTest', 'public static void TestSampleCases(string sentence, string expected)', 'public static IEnumerable<object[]> GetSampleCases()', 'public static void TestWordShortening(string word, string expected)', 'private static string ShortenWord(string input)', 'public static IEnumerable<object[]> GetSampleWords()']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Challenges,4,101,,
140,PrefixSumsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Challenges\PrefixSumsTest.cs,"['public class PrefixSumsTest', 'public void TestSimpleCases(int[] expected, int[] a)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Challenges,4,34,,
141,SortByZTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Challenges\SortByZTest.cs,"['public class SortByZTest', 'public void TestSampleCases(string[] expected, string[] g, int z)', 'public static IEnumerable<object[]> GetSampleCases()']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Challenges,4,44,,
142,SumInRangeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\CommonTechniques\SumInRangeTest.cs,"['public class SumInRangeTest', 'public void TestSumInRange()', 'private int GetSumInRange2(int[] nums, int[][] queries)', 'private int GetSumInRange(int[] nums, int[][] queries)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.CommonTechniques,5,93,,
143,FindLongestSubArrayBySumTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Hashtable\FindLongestSubArrayBySumTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeSignal.Hashtable,5,0,,
144,PossibleSumsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Hashtable\PossibleSumsTest.cs,"['public class PossibleSumsTest : BaseTest', 'public PossibleSumsTest(ITestOutputHelper output) : base(output)', 'public static IEnumerable<object[]> GetSamples()', 'public static IEnumerable<object[]> GetCodeSignalTestData()', 'public void TestCodeSignalTestCases(int expected, int[] coins, int[] quantity)', 'public void TestHappyPaths(int[] expected, int[] coins, int[] quantity)', 'private IEnumerable<int> GetSums(int[] coins, int[] quantity)', 'private int? GetSums(int[] coins, int[] quantity, int startIndex, HashSet<int> sums, int acc)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Hashtable,6,89,,
145,ProductExceptSelfTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\Hashtable\ProductExceptSelfTest.cs,"['public class ProductExceptSelfTest : BaseTest', 'public static IEnumerable<object[]> GetTestCases()', 'public void TestSampleCases(int expected, int[] nums, int m)', 'private int productExceptSelf(int[] nums, int m)', 'private IEnumerable<int> GetProducts(int[] nums, int m)', 'public ProductExceptSelfTest(ITestOutputHelper output) : base(output)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.Hashtable,8,76,,
146,ClimbingStairCaseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\InterviewPractice\BackTracking\ClimbingStairCaseTest.cs,"['public class ClimbingStairCaseTest : BaseTest', 'public ClimbingStairCaseTest(ITestOutputHelper output) : base(output)', 'public static IEnumerable<object[]> GetData()', 'public void TestClimbingStairCases(int n, int k, int[][] expected)']",namespace,Demo.LearnByDoing.Tests.CodeSignal.InterviewPractice.BackTracking,7,182,,
147,LongestPathTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeSignal\InterviewPractice\DfsBfs\LongestPathTest.cs,"['public class LongestPathTest', 'public class Program', 'public static void Main()', 'public static Tree BuildTree(Tree parent, List<string> rest, int depth)', 'public class Tree', 'public string Value { get; set; }', 'public List<Tree> Children { get; set; } = new List<Tree>();']",namespace,Demo.LearnByDoing.Tests.CodeSignal.InterviewPractice.DfsBfs,6,65,,
148,ComGovOrgFirstTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Beta\ComGovOrgFirstTest.cs,"['public class ComGovOrgFirstTest : BaseTest', 'public ComGovOrgFirstTest(ITestOutputHelper output) : base(output)', 'public void SimpleTests()']",namespace,Demo.LearnByDoing.Tests.CodeWars.Beta,7,50,,
149,TheABProblemTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Beta\TheABProblemTest.cs,"['public class TheABProblemTest : BaseTest', 'public TheABProblemTest(ITestOutputHelper output) : base(output)', 'public void BasicTests()', 'public class Kata', 'public static int problem(int A, int B)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Beta,5,41,,
150,AddingBigNumbersTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\AddingBigNumbersTest.cs,"['public class AddingBigNumbersTest : BaseTest', 'public AddingBigNumbersTest(ITestOutputHelper output) : base(output)', 'public partial class Kata', 'public static string Add(string a, string b)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,4,24,,
151,BattleShipsSunkDamagedOrNotTouchedTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\BattleShipsSunkDamagedOrNotTouchedTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,7,0,,
152,CatchingCarMileageNumbersTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\CatchingCarMileageNumbersTest.cs,"['public class CatchingCarMileageNumbersTest : BaseTest', 'public CatchingCarMileageNumbersTest(ITestOutputHelper output) : base(output)', 'public void ShouldWorkTest()', 'public partial class Kata', 'public static int IsInteresting(int number, List<int> awesomePhrases)', 'private static bool IsNumberInteresting(int number, List<int> awesomePhrases)', 'public static bool IsPalindrome(string word)', 'private static IEnumerable<int> GetDigits2(long number)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,6,123,,
153,IPValidationTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\IPValidationTest.cs,"['public class IPValidationTest : BaseTest', 'public IPValidationTest(ITestOutputHelper output) : base(output)', 'public void TestIPValidity(string input, bool expected)', 'public static bool is_valid_IP(string input)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,9,63,,
154,NextSmallerNumberWithTheSameDigitsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\NextSmallerNumberWithTheSameDigitsTest.cs,"['public class NextSmallerNumberWithTheSameDigitsTest : BaseTest', 'public NextSmallerNumberWithTheSameDigitsTest(ITestOutputHelper output) : base(output)', 'public void FixedTests(long number, long expected)', 'public partial class Kata', 'public static long NextSmaller(long number)', 'private static int GetMaxIndexAfter(List<int> digits, int value, int i)', 'private static List<int> Swap(List<int> digits, int i, int j)', 'private static long? ToLong(List<int> digits)', 'private static IEnumerable<int> GetDigits(long number)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,6,123,,
155,NonBouncyNumberCountTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\NonBouncyNumberCountTest.cs,"['public class NonBouncyNumberCountTest : BaseTest', 'public NonBouncyNumberCountTest(ITestOutputHelper output) : base(output)', 'public void TestBouncyNumbers()', 'public void TestTotalIncDecCount(int power, string expected)', 'public static IEnumerable<object[]> GetNumbers()', 'public class TotalIncreasingOrDecreasingNumbers', 'public static BigInteger TotalIncDec(int power)', 'public static bool IsBouncyNumber(BigInteger number)', 'private static IEnumerable<int> GetDigits(BigInteger number)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,7,125,,
156,PyramidSlideDownTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\PyramidSlideDownTest.cs,"['public class PyramidSlideDownTest : BaseTest', 'public PyramidSlideDownTest(ITestOutputHelper output) : base(output)', 'public void SmallPyramidTest()', 'public void MediumPyramidTest()', 'public class PyramidSlideDown', 'public static int LongestSlideDown(int[][] pyramid)', 'private static List<IEnumerable<int>> GetTriangle(int[][] pyramid)', 'public static int GetMximumPathSum(List<IEnumerable<int>> triangle)', 'public static IEnumerable<IEnumerable<int>> ParseInput(string input)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,7,115,,
157,RangeExtractionTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\RangeExtractionTest.cs,"['public class RangeExtractionTest', 'public void SimpleTests()', 'public class RangeExtraction', 'public static string Extract(int[] a)', 'private static IEnumerable<string> ExtractRanges(List<List<int>> buckets)', 'public static string Extract_bad(int[] args)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,5,125,,
158,ReversePolishNotationCalculatorTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\ReversePolishNotationCalculatorTest.cs,"['public class ReversePolishNotationCalculatorTest : BaseTest', 'public ReversePolishNotationCalculatorTest(ITestOutputHelper output) : base(output)', 'public void TestAllEvaluations(string input, double expected)', 'public class Calc', 'public double evaluate(String expr)', 'private double Operate(double left, string op, double right)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,7,75,,
159,SumStringsAsNumbersTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu4\SumStringsAsNumbersTest.cs,"['public class SumStringsAsNumbersTest : BaseTest', 'public SumStringsAsNumbersTest(ITestOutputHelper output) : base(output)', 'public void Given123And456Returns579()', 'public partial class Kata', 'public static string sumStrings(string a, string b)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu4,6,50,,
160,BasicNicoVariationTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\BasicNicoVariationTest.cs,"['public class BasicNicoVariationTest : BaseTest', 'public BasicNicoVariationTest(ITestOutputHelper output) : base(output)', 'public void TestSampleNico(string key, string message, string expected)', 'public partial class Kata', 'public static string Nico(string key, string message)', 'private static Dictionary<char, char[]> BuildMessageMap(string key, string message)', 'private static Dictionary<int, List<string>> BuildMap(List<int> keyOrder, string message)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,8,83,,
161,BitCalculatorTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\BitCalculatorTest.cs,"['public class BitCalculatorTest : BaseTest', 'public BitCalculatorTest(ITestOutputHelper output) : base(output)', 'public void BasicTests()', 'public partial class Kata', 'public static int Calculate(string num1, string num2)', 'private static int ToBase10(string n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,5,53,,
162,BreakCamelCaseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\BreakCamelCaseTest.cs,"['public class BreakCamelCaseTest', 'private static IEnumerable<TestCaseData> testCases', 'public string Test(string str) => Kata.BreakCamelCase(str);', 'public partial class Kata', 'public static string BreakCamelCase(string text)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,4,32,,
163,ComputeTheLargestSumOfAllContiguousSubsequencesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\ComputeTheLargestSumOfAllContiguousSubsequencesTest.cs,"['public class ComputeTheLargestSumOfAllContiguousSubsequencesTest : BaseTest', 'public ComputeTheLargestSumOfAllContiguousSubsequencesTest(ITestOutputHelper output) : base(output)', 'public void TestFromDescription(int[] a, int expected)', 'public static IEnumerable<object[]> GetTestCases()', 'public static int LargestSum(int[] a)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,6,63,,
164,ConvertStringToCamelCaseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\ConvertStringToCamelCaseTest.cs,"['public class ConvertStringToCamelCaseTest : BaseTest', 'public ConvertStringToCamelCaseTest(ITestOutputHelper output) : base(output)', 'public void KataTests()', 'public partial class Kata', 'public static string ToCamelCase(string str)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,6,35,,
165,DidIFinishMySudokuTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\DidIFinishMySudokuTest.cs,"['public class DidIFinishMySudokuTest', 'private static object[] testCases = new object[]', 'public void Test(string expected, int[][] board) => Assert.AreEqual(expected, Sudoku.DoneOrNot(board));', 'public class Sudoku', 'private const int BOARD_SIZE = 9;', 'public static string DoneOrNot(int[][] board)', 'private static bool AreRowsValid(int[][] board)', 'private static bool AreColumnsValid(int[][] board)', 'private static IEnumerable<int> GetColumnValues(int[][] board, int index)', 'private static bool AreBlocksValid(int[][] board)', 'private static IEnumerable<int> GetBlockValues(int[][] board, int rowIndex, int colIndex)', 'private static bool ContainsAllNumbers(IEnumerable<int> row)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,4,136,,
166,DirectionsReductionTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\DirectionsReductionTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,5,0,,
167,DoubleColaTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\DoubleColaTest.cs,"['public class DoubleColaTest : BaseTest', 'public DoubleColaTest(ITestOutputHelper output) : base(output)', 'public void Test2(int n, string expected)', 'public class Line', 'public static string WhoIsNext(string[] names, long n)', 'private static int GetAccumulationIndex(long n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,5,73,,
168,FindTheMissingTermInAnArithmeticProgressionTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\FindTheMissingTermInAnArithmeticProgressionTest.cs,"['public class FindTheMissingTermInAnArithmeticProgressionTest', 'private static IEnumerable<TestCaseData> testCases', 'public int Test(List<int> list) => Kata.FindMissing(list);', 'public partial class Kata', 'public static int FindMissing(List<int> list)', 'private static int GetInterval(List<int> list)', 'public static int FindMissing_bad3(List<int> list)', 'public static int FindMissing_bad2(List<int> list)', 'public static int FindMissing_bad(List<int> list)', 'private static int GetInterval2(List<int> list)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,4,135,,
169,FirstNonRepeatingLetterTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\FirstNonRepeatingLetterTest.cs,"['public class FirstNonRepeatingLetterTest : BaseTest', 'public FirstNonRepeatingLetterTest(ITestOutputHelper output) : base(output)', 'public void TestFirstNonRepeatingLetter(string input, string expected)', 'public partial class Kata', 'public static string FirstNonRepeatingLetter(string input)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,9,49,,
170,FloodFillTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\FloodFillTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,7,0,,
171,GreedIsGoodTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\GreedIsGoodTest.cs,"['public class GreedIsGoodTest : BaseTest', 'public GreedIsGoodTest(ITestOutputHelper output) : base(output)', 'public void TestScoreChecker(int[] dice, int expected)', 'public partial class Kata', 'public static int Score(int[] dice)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,9,91,,
172,HumanReadableTimeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\HumanReadableTimeTest.cs,"['public class HumanReadableTimeTest : BaseTest', 'public HumanReadableTimeTest(ITestOutputHelper output) : base(output)', 'public void HumanReadableTest(int input, string expected)', 'public static class TimeFormat', 'public static string GetReadableTime(int seconds)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,5,51,,
173,Int32ToIP4Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\Int32ToIP4Test.cs,"['public class Int32ToIP4Test', 'public void Test(uint input, string expected)', 'public partial class Kata', 'private const int BYTE_SIZE = 8;', 'public static string UInt32ToIP(uint ip)', 'private static IEnumerable<uint> GetNumbers(string binaryText)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,5,47,,
174,MixbonacciTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\MixbonacciTest.cs,"['public class Kata', 'public static BigInteger[] Mixbonacci(string[] patterns, int n)', 'public static IGetSequence GetNacciStrategy(string pattern)', 'public class Tetranacci : IGetSequence', 'public IEnumerable<BigInteger> GetSequence(int n)', 'public class Tribonacci : IGetSequence', 'public IEnumerable<BigInteger> GetSequence(int n)', 'public class Pell : IGetSequence', 'public IEnumerable<BigInteger> GetSequence(int n)', 'public class Jacobsthal : IGetSequence', 'public IEnumerable<BigInteger> GetSequence(int n)', 'public class Padovan : IGetSequence', 'public IEnumerable<BigInteger> GetSequence(int n)', 'public class Fibonacci : IGetSequence', 'public IEnumerable<BigInteger> GetSequence(int n)', 'public interface IGetSequence']",namespace,Solution,5,248,,
175,PaginationHelperTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\PaginationHelperTest.cs,"['public class PaginationHelperTest : BaseTest', 'private readonly IList<int> intList = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 };', 'private readonly PagnationHelper<int> _sutInt;', 'private readonly PagnationHelper<char> _sutChar;', 'public PaginationHelperTest(ITestOutputHelper output) : base(output)', 'public void PageItemCountTest(int itemIndex, int expected)', 'public void PageIndexTest(int itemIndex, int expected)', 'public void ItemCountTest()', 'public void PageCountTest()', 'public class PagnationHelper<T>', 'public IList<T> Collection { get; }', 'public int ItemsPerPage { get; }', 'public PagnationHelper(IList<T> collection, int itemsPerPage)', 'public int ItemCount', 'public int PageCount', 'public int PageItemCount(int pageIndex)', 'public int PageIndex(int itemIndex)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,6,131,,
176,Rot13Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\Rot13Test.cs,"['public class Rot13Test : BaseTest', 'public Rot13Test(ITestOutputHelper output) : base(output)', 'public void TestHello(string expected, string message)', 'public partial class Kata', 'public static string Rot13(string message)', 'private static string RotateBy(string upper, string lower, int rotationCount)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,8,64,,
177,ScrambliesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\ScrambliesTest.cs,"['public class ScrambliesTest : BaseTest', 'public ScrambliesTest(ITestOutputHelper output) : base(output)', 'public static void Test1()', 'public class Scramblies', 'public static bool Scramble(string s1, string s2)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,7,57,,
178,ScytaleEncoderDecoderTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\ScytaleEncoderDecoderTest.cs,"['public class ScytaleEncoderDecoderTest', 'public void BasicEncodeTest()', 'public void BasicDecodeTest()', 'private static IEnumerable<TestCaseData> EncodeTestCases', 'private static IEnumerable<TestCaseData> DecodeTestCases', 'public string TestFailingEncodeTests(string message, int colSize) => Scytale.Encode(message, colSize);', 'public string TestFailingDecodeTests(string message, int rowSize) => Scytale.Decode(message, rowSize);', 'public class Scytale', 'private static void PrintArray(string[,] a)', 'public static string Encode(string message, int colSize)', 'public static string Decode(string message, int colSize)', 'private static int GetRowSize(string message, int colSize)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,5,149,,
179,SimplePigLatinTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\SimplePigLatinTest.cs,"['public class SimplePigLatinTest : BaseTest', 'public SimplePigLatinTest(ITestOutputHelper output) : base(output)', 'public void TestSentenceLatinPigging(string sentence, string expected)', 'public partial class Kata', 'public static string PigIt(string sentence)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,6,37,,
180,TicTacToeCheckerTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\TicTacToeCheckerTest.cs,"['public class TicTacToeCheckerTest : BaseTest', 'public TicTacToeCheckerTest(ITestOutputHelper output) : base(output)', 'public void TestTicTacToeChecker()', 'public class TicTacToe', 'public int IsSolved(int[,] board)', 'public class TicTacToeCheckerTestData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,6,74,,
181,ValidParenthesesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\ValidParenthesesTest.cs,"['public class ValidParenthesesTest', 'public void SampleTest1()', 'public void SampleTest2()', 'public class Parentheses', 'public static bool ValidParentheses(string input)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,4,56,,
182,WeightForWeightTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\WeightForWeightTest.cs,"['public class WeightForWeightTest : BaseTest', 'public WeightForWeightTest(ITestOutputHelper output) : base(output)', 'public void TestWeightOrder(string numbersText, string expected)', 'public class WeightSort', 'public static string orderWeight(string numbersText)', 'public class WeightComparer : IComparer<long>', 'public int Compare(long x, long y)', 'private long SumText(string numberText)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,7,61,,
183,WhatDoesntBelongToTheseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\WhatDoesntBelongToTheseTest.cs,"['public class WhatDoesntBelongToTheseTest : BaseTest', 'public WhatDoesntBelongToTheseTest(ITestOutputHelper output) : base(output)', 'public void ExampleTests(object[] series, object expected)', 'public static IEnumerable<object[]> GetTestCases()', 'public partial class Kata', 'public static object FindTheNotFittingElement(object[] series)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,9,53,,
184,WhereMyAnagramsAtTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu5\WhereMyAnagramsAtTest.cs,"['public class WhereMyAnagramsAtTest', 'public void SampleTest()', 'public void TestEdgeCases()', 'public static partial class Kata', 'public static List<string> Anagrams(string input, List<string> words)', 'private static bool IsAganram(string word1, string word2)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu5,4,64,,
185,AFunctionalDeckOfCardsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\AFunctionalDeckOfCardsTest.cs,"['public class AFunctionalDeckOfCardsTest', 'public void MyTest()', 'public class DeckOfCards', 'public static string[] BuildDeck()']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,34,,
186,AreTheyTheSameTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\AreTheyTheSameTest.cs,"['public class AreTheyTheSameTest : BaseTest', 'public AreTheyTheSameTest(ITestOutputHelper output) : base(output)', 'public void Test1()', 'public class AreTheySame', 'public static bool comp(int[] a, int[] b)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,37,,
187,ArrayDeepCountTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ArrayDeepCountTest.cs,"['public class ArrayDeepCountTest', 'public void Basic_Tests(object test, int expected)', 'public static IEnumerable<object[]> GetBasicTestCases()', 'public partial class Kata', 'public static int DeepCount(object o)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,53,,
188,ArrayDiffTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ArrayDiffTest.cs,"['public class ArrayDiffTest', 'public void SampleTest()', 'public partial class Kata', 'public static int[] ArrayDiff(int[] a, int[] b)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,38,,
189,BingoCardTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\BingoCardTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,6,0,,
190,BuildTowerTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\BuildTowerTest.cs,"['public class BuildTowerTest : BaseTest', 'public BuildTowerTest(ITestOutputHelper output) : base(output)', 'public void BasicTests()', 'public partial class Kata', 'public static string[] TowerBuilder(int floorCount)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,39,,
191,CondiCipherTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\CondiCipherTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,8,0,,
192,ConsecutiveStringsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ConsecutiveStringsTest.cs,"['public class ConsecutiveStringsTest', 'private static void Testing(string actual, string expected)', 'public static void Test1()', 'public class LongestConsecutives', 'public static string LongestConsec(string[] a, int k)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,62,,
193,DeleteOccurrencesOfAnElementIfItOccursMoreThanNTimesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\DeleteOccurrencesOfAnElementIfItOccursMoreThanNTimesTest.cs,"['public class DeleteOccurrencesOfAnElementIfItOccursMoreThanNTimesTest', 'public void TestSimple0()', 'public void TestSimple1()', 'public void TestSimple2()', 'public partial class Kata', 'public static int[] DeleteNth(int[] a, int x)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,62,,
194,DetectPangramTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\DetectPangramTest.cs,"['public class DetectPangramTest', 'public void SampleTests()', 'public partial class Kata', 'public static bool IsPangram(string str)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,37,,
195,DoesMNumberLookBigInThisTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\DoesMNumberLookBigInThisTest.cs,"['public class DoesMNumberLookBigInThisTest : BaseTest', 'public DoesMNumberLookBigInThisTest(ITestOutputHelper output) : base(output)', 'public void TestSampleCases(int n, bool expected)', 'public partial class Kata', 'public static bool Narcissistic(int n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,7,48,,
196,DubstepTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\DubstepTest.cs,"['public class DubstepTest : BaseTest', 'public DubstepTest(ITestOutputHelper output) : base(output)', 'public void TestDecoder(string input, string expected)', 'public class Dubstep', 'public static string SongDecoder(string input)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,6,37,,
197,DuplicateEncoderTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\DuplicateEncoderTest.cs,"['public class DuplicateEncoderTest : BaseTest', 'public DuplicateEncoderTest(ITestOutputHelper output) : base(output)', 'public void TestDuplicateEncode(string word, string expected)', 'public partial class Kata', 'public static string DuplicateEncode(string word)', 'private static Dictionary<char, int> BuildWordMap(string word)', 'public class DuplicateEncoderBaseTestData : BaseTestData', 'public override List<object[]> Data { get; set; } = new List<object[]>']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,6,67,,
198,EurekaTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\EurekaTest.cs,"['public class EurekaTest : BaseTest', 'public EurekaTest(ITestOutputHelper output) : base(output)', 'private static string Array2String(long[] list)', 'private static void testing(long a, long b, long[] res)', 'public static void test1()', 'public class SumDigPower', 'public static long[] SumDigPow(long a, long b)', 'private static bool IsAMatch(long n)', 'private static IEnumerable<int> GetDigits(long l)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,7,74,,
199,ExtensionGroupWhileConsecutiveByTheConditionItemsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ExtensionGroupWhileConsecutiveByTheConditionItemsTest.cs,"['public class ExtensionGroupWhileConsecutiveByTheConditionItemsTest', 'public void EdgeCaseTest()', 'public void BasicTest1()', 'public void BasicTest2()', 'public static List<List<object>> GroupWhile(this IEnumerable<object> coll, Func<object, bool> pred)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,7,106,,
200,FilePathOperationsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\FilePathOperationsTest.cs,"['public class FilePathOperationsTest', 'public void ExampleTest()', 'private readonly string _filepath;', 'public FileMaster(string filepath)', 'public string extension()', 'public string filename()', 'public string dirpath()']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,46,,
201,FindTheOddIntTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\FindTheOddIntTest.cs,"['public class FindTheOddIntTest : BaseTest', 'public FindTheOddIntTest(ITestOutputHelper output) : base(output)', 'public void Tests()', 'public static int find_it(int[] a)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,39,,
202,FormatWordsIntoASentenceTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\FormatWordsIntoASentenceTest.cs,"['public class FormatWordsIntoASentenceTest : BaseTest', 'public FormatWordsIntoASentenceTest(ITestOutputHelper output) : base(output)', 'public void Test(string expected, string[] words)', 'public void TestEdgeCases()', 'public static IEnumerable<object[]> GetNumbers()', 'public partial class Kata', 'public static string FormatWords(string[] words)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,6,61,,
203,FunWithTreesMaxSumTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\FunWithTreesMaxSumTest.cs,"['public class FunWithTreesMaxSumTest', 'public void MaxSumInNullTree()', 'public void MaxSumInPerfectTree()', 'public class Solution', 'public static int MaxSum(TreeNode node)', 'public static IEnumerable<int> GetMax(TreeNode node)', 'public class TreeNode', 'public TreeNode left;', 'public TreeNode right;', 'public int value;', 'public TreeNode(int value)', 'public static TreeNode Leaf(int value)', 'public TreeNode WithLeaves(int leftValue, int rightValue)', 'public static TreeNode Join(int rootValue, TreeNode leftNode, TreeNode rightNode)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,6,95,,
204,GoodVsEvilTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\GoodVsEvilTest.cs,"['public class GoodVsEvilTest', 'public static void EvilShouldWin()', 'public static void GoodShouldTriumph()', 'public static void ShouldBeATie()', 'public partial class Kata', 'private static int[] _goodWorth = { 1, 2, 3, 3, 4, 10 };', 'private static int[] _evilWorth = { 1, 2, 2, 2, 3, 5, 10 };', 'public static string GoodVsEvil(string good, string evil)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,66,,
205,HelpTheBookSellerTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\HelpTheBookSellerTest.cs,"['public class HelpTheBookSellerTest', 'public void Test1()', 'public void Test2()', 'public void TestEmptyCases()', 'public static class StockList', 'public static string stockSummary(string[] arts, string[] cds)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,61,,
206,HighestScoringWordTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\HighestScoringWordTest.cs,"['public class HighestScoringWordTest', 'private static IEnumerable<TestCaseData> TestCases', 'public string Test(string s) => Kata.High(s);', 'public partial class Kata', 'public static string High(string sentence)', 'private static int GetScore(string word)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,47,,
207,IntegerDepthTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\IntegerDepthTest.cs,"['public class IntegerDepthTest', 'public void SampleTest1()', 'public void SampleTest2()', 'public partial class Kata', 'public static int ComputeDepth(int n)', 'private static IEnumerable<int> GetDigits(int n, int depth)', 'private static bool HasAllDigits(HashSet<int> isSeen)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,61,,
208,IQTestTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\IQTestTest.cs,"['public class IQTestTest : BaseTest', 'public IQTestTest(ITestOutputHelper output) : base(output)', 'public void Test1(string numbers, int expected)', 'public class IQ', 'public static int Test(string numberText)', 'private static IEnumerable<int> ParseNumbers(string numberText)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,7,75,,
209,LinkedListsInsertNthNodeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\LinkedListsInsertNthNodeTest.cs,"['public class LinkedListsInsertNthNodeTest', 'public void EmptyTest()', 'public void TestIndex0()', 'public void TestIndex1()', 'public void TestIndex2()', 'public void TestIndex3()', 'public void ExceptionTest()', 'public partial class Node', 'public int Data;', 'public Node Next;', 'public Node(int data)', 'public static Node InsertNth(Node head, int index, int data)', 'public static Node BuildOneTwoThree()']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,7,125,,
210,LongestPalindromeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\LongestPalindromeTest.cs,"['public class LongestPalindromeTest', 'public void SampleTest(string input, int expected)', 'public partial class Kata', 'public static int GetLongestPalindrome(string sentence)', 'private static bool IsPalindrome(string word)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,2,66,,
211,MakeTheDeadFishSwimTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\MakeTheDeadFishSwimTest.cs,"['public class MakeTheDeadFishSwimTest', 'private static object[] _sampleTestCases = {', 'public void SampleTest(string data, int[] expected)', 'public void TestIterativeVersion(string data, int[] expected)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,30,,
212,MazeRunnerTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\MazeRunnerTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,0,,
213,MrSafetysTreasuresTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\MrSafetysTreasuresTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,0,,
214,MultiplesOf3And5Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\MultiplesOf3And5Test.cs,"['public class MultiplesOf3And5Test : BaseTest', 'public MultiplesOf3And5Test(ITestOutputHelper output) : base(output)', 'public void Test()', 'public partial class Kata', 'public static int Solution(int value)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,31,,
215,ParseALinkedListFromAStringTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ParseALinkedListFromAStringTest.cs,"['public class ParseALinkedListFromAStringTest', 'public void TestSplit(string[] expected, string input)', 'public void SampleTest(Node expected, string input)', 'public static IEnumerable<object[]> GetSampleData()', 'public partial class Kata', 'public static Node Parse(string input)', 'public class Node : Object', 'public int Data;', 'public Node Next;', 'public Node(int data, Node next = null)', 'public override bool Equals(Object obj)', 'public override string ToString()']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,89,,
216,PersistentBuggerTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\PersistentBuggerTest.cs,"['public class PersistentBuggerTest : BaseTest', 'public PersistentBuggerTest(ITestOutputHelper output) : base(output)', 'public void TestPersistence(long number, int expected)', 'public class Persist', 'public static int Persistence(long number)', 'private static IEnumerable<int> GetDigits(long number)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,6,55,,
217,PrizeDrawTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\PrizeDrawTest.cs,"['public class PrizeDrawTest', 'public static void Test1()', 'public class Rank', 'public static string NthRank(string st, int[] we, int n)', 'private static int GetWinningNumber(string name, int weight)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,70,,
218,ReducingByStepsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ReducingByStepsTest.cs,"['public class ReducingByStepsTest', 'private static void testing(string actual, string expected)', 'public static string Array2String(long[] list)', 'public static void test0()', 'public class Operarray', 'public static long gcdi(long x, long y)', 'public static long lcmu(long x, long y)', 'public static long som(long a, long b)', 'public static long maxi(long a, long b)', 'public static long mini(long a, long b)', 'public static long[] OperArray(Func<long, long, long> fct, long[] arr, long init)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,128,,
219,RememberTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\RememberTest.cs,"['public class RememberTest', 'public void Test(string str, List<char> expected)', 'public static IEnumerable<object[]> GetTestData()', 'public partial class Kata', 'public static List<char> Remember(string str)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,61,,
220,ReplaceWithAlphabetPositionTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ReplaceWithAlphabetPositionTest.cs,"['public class ReplaceWithAlphabetPositionTest : BaseTest', 'public ReplaceWithAlphabetPositionTest(ITestOutputHelper output) : base(output)', 'public void SampleTest()', 'public partial class Kata', 'public static string AlphabetPosition(string text)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,6,33,,
221,ReverseASinglyLinkedListTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ReverseASinglyLinkedListTest.cs,"['public class ReverseASinglyLinkedListTest', 'public void SampleTest()', 'public class Kata', 'private static Node head = null;', 'public static Node ReverseList(Node node)', 'private static Node Reverse(Node node)', 'private static string ToString(Node n)', 'public class Node', 'public int Value { get; set; }', 'public Node Next { get; set; }', 'public Node(int v, Node node)', 'public Node(int[] values)', 'private void BuildNode(Node root, int[] values)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,128,,
222,ReversedWordsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ReversedWordsTest.cs,"['public class ReversedWordsTest : BaseTest', 'public ReversedWordsTest(ITestOutputHelper output) : base(output)', 'public void BasicTests()', 'public partial class Kata', 'public static string ReverseWords(string str)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,35,,
223,SortTheOddTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\SortTheOddTest.cs,"['public class SortTheOddTest : BaseTest', 'public SortTheOddTest(ITestOutputHelper output) : base(output)', 'public void BasicTests()', 'public partial class Kata', 'public static int[] SortArray(int[] a)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,7,55,,
224,SplitOddAndEvenTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\SplitOddAndEvenTest.cs,"['public class SplitOddAndEvenTest', 'public void BasicTests()', 'public partial class Kata', 'public static long[] SplitOddAndEven(long number)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,56,,
225,StopgninnipSMysdroWTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\StopgninnipSMysdroWTest.cs,"['public class StopgninnipSMysdroWTest : BaseTest', 'public StopgninnipSMysdroWTest(ITestOutputHelper output) : base(output)', 'public static void Test1()', 'public static void Test2()', 'public static void Test3()', 'public static void Test4()', 'public static void Test5()', 'public static void Test6()', 'public partial class Kata', 'public static string SpinWords(string sentence)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,6,73,,
226,StreetFighter2CharacterSelectionTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\StreetFighter2CharacterSelectionTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,0,,
227,StringBreakersTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\StringBreakersTest.cs,"['public class StringBreakersTest', 'public void SampleTest()', 'public partial class Kata', 'public static string StringBreakers(int n, string str)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,34,,
228,StringLetterCountingTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\StringLetterCountingTest.cs,"['public class StringLetterCountingTest', 'public void Test1()', 'public void Test2()', 'public void Test3()', 'public partial class Kata', 'public static string StringLetterCount(string text)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,47,,
229,SumTheTreeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\SumTheTreeTest.cs,"['public class SumTheTreeTest', 'private static IEnumerable<TestCaseData> TestCases', 'public int Test(SumTheTreeNode root) =>', 'public partial class Kata', 'public static int SumTree(SumTheTreeNode root)', 'public class SumTheTreeNode', 'public int Value;', 'public SumTheTreeNode Left;', 'public SumTheTreeNode Right;', 'public SumTheTreeNode(int value, SumTheTreeNode left = null, SumTheTreeNode right = null)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,53,,
230,TakeATenMinuteWalkTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\TakeATenMinuteWalkTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,0,,
231,TheBookOfMormonTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\TheBookOfMormonTest.cs,"['public class TheBookOfMormonTest', 'public void BasicTests(long expected, long startingNumber, long reach, long target)', 'public partial class Kata', 'public static long Mormons(long startingNumber, long reach, long target)', 'private static long GetDepth(long startingNumber, long reach, long target, int depth)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,2,36,,
232,TriangleNumberCheckTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\TriangleNumberCheckTest.cs,"['public class TriangleNumberCheckTest : BaseTest', 'public TriangleNumberCheckTest(ITestOutputHelper output) : base(output)', 'public void Test1()', 'public void Test2()', 'public class TriangleNumbers', 'public static bool isTriangleNumber(long number)', 'public static bool isTriangleNumber2(long number)', 'private static long GetTriangleNumberUpTo(long number)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,9,60,,
233,TribonacciSequenceTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\TribonacciSequenceTest.cs,"['public class TribonacciSequenceTest', 'private Xbonacci variabonacci;', 'public void SetUp()', 'public void TearDown()', 'public void Tests()', 'public class Xbonacci', 'public double[] Tribonacci(double[] signature, int n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,5,63,,
234,WhichAreInTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\WhichAreInTest.cs,"['public class WhichAreInTest', 'public void Test1()', 'public void Test2()', 'public static string[] inArray(string[] a1, string[] a2)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,44,,
235,WhoLikesItTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\WhoLikesItTest.cs,"['public class WhoLikesItTest', 'public void SampleTestCases(string expected, string[] input)', 'public partial class Kata', 'public static string Likes(string[] name)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,2,35,,
236,WordsToHexTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\WordsToHexTest.cs,"['public class WordsToHexTest', 'public void SampleTest()', 'public static string[] WordsToHex(string sentence)', 'private static string ConvertToHex(string word)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,3,56,,
237,YourOrderPleaseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\YourOrderPleaseTest.cs,"['public class YourOrderPleaseTest', 'public void SampleTest()', 'public partial class Kata', 'public static string Order(string words)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,39,,
238,ZeroFillForTheQueenTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu6\ZeroFillForTheQueenTest.cs,"['public class ZeroFillForTheQueenTest', 'public static IEnumerable<object[]> GetTestCases()', 'public void Test(int number, int size, string expected)', 'public partial class Kata', 'public static string ZeroFill(int number, int size)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu6,4,35,,
239,AllInclusiveTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\AllInclusiveTest.cs,"['public class AllInclusiveTest : BaseTest', 'public AllInclusiveTest(ITestOutputHelper output) : base(output)', 'private static void testing(Boolean actual, Boolean expected)', 'public static void test1()', 'public class Rotations', 'public static bool ContainAllRots(string text, List<string> arr)', 'private static IEnumerable<string> GetRotations(string text)', 'private static string RotateRightOnce(string text)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,8,70,,
240,CartesianNeighborsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\CartesianNeighborsTest.cs,"['public class CartesianNeighborsTest : BaseTest', 'public CartesianNeighborsTest(ITestOutputHelper output) : base(output)', 'public void ExampleTests(List<int[]> expected, int x, int y)', 'public static IEnumerable<object[]> GetSampleData()']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,6,43,,
241,CompareAStringBySumOfCharsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\CompareAStringBySumOfCharsTest.cs,"['public class CompareAStringBySumOfCharsTest', 'public void TestBasics(bool expected, string word1, string word2)', 'public partial class Kata', 'public static bool Compare(string s1, string s2)', 'private static string GetCleanedWord(string word)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,42,,
242,ComplementaryDnaTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\ComplementaryDnaTest.cs,[],namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,6,0,,
243,ConvertALinkedListToAStringTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\ConvertALinkedListToAStringTest.cs,"['public class ConvertALinkedListToAStringTest', 'public void SampleTest()', 'public partial class Kata', 'public static string Stringify(Node node)', 'public class Node', 'public int Data { get; }', 'public Node Next { get; }', 'public Node(int data, Node next = null)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,2,41,,
244,CountingArrayElementsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\CountingArrayElementsTest.cs,"['public class CountingArrayElementsTest', 'public void SampleTest(Dictionary<string, int> expected, List<string> input)', 'public static IEnumerable<object[]> SampleInput()', 'public partial class Kata', 'public static Dictionary<string, int> Count(List<string> list)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,34,,
245,CountTheDigitTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\CountTheDigitTest.cs,"['public class CountTheDigitTest : BaseTest', 'public CountTheDigitTest(ITestOutputHelper output) : base(output)', 'public static void test1(int expected, int n, int d)', 'public class CountDig', 'public static int NbDig(int n, int d)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,6,43,,
246,DisemvowelTrollsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\DisemvowelTrollsTest.cs,"['public class DisemvowelTrollsTest : BaseTest', 'public DisemvowelTrollsTest(ITestOutputHelper output) : base(output)', 'public void ShouldRemoveAllVowels()', 'public partial class Kata', 'public static string Disemvowel(string input)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,29,,
247,FactorialFactoryTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\FactorialFactoryTest.cs,"['public class FactorialFactoryTest', 'public void Test1()', 'public void TestNegativeNumbers()', 'public partial class Kata', 'public static int Factorial(int n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,3,43,,
248,FindTheDuplicatedNumberInAConsecutiveUnsortedListTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\FindTheDuplicatedNumberInAConsecutiveUnsortedListTest.cs,"['public class FindTheDuplicatedNumberInAConsecutiveUnsortedListTest', 'private static IEnumerable<TestCaseData> TestCases', 'public int Test(int[] arr) => Kata.FindDup(arr);', 'public partial class Kata', 'public static int FindDup(int[] a)', 'public static int FindDup2(int[] a)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,56,,
249,FindTheStrayNumberTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\FindTheStrayNumberTest.cs,"['public class FindTheStrayNumberTest : BaseTest', 'public FindTheStrayNumberTest(ITestOutputHelper output) : base(output)', 'public void SimpleArray1()', 'public static int Stray(int[] numbers)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,34,,
250,FindTheVowelsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\FindTheVowelsTest.cs,"['public class FindTheVowelsTest', 'public void FixedTest()', 'public partial class Kata', 'public static int[] VowelIndices(string word)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,34,,
251,FriendOrFoeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\FriendOrFoeTest.cs,"['public class FriendOrFoeTest', 'public void Test1()', 'public partial class Kata', 'public static IEnumerable<string> FriendOrFoe(string[] names)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,28,,
252,GaussNeedsHelpTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\GaussNeedsHelpTest.cs,"['public class GaussNeedsHelpTest : BaseTest', 'public GaussNeedsHelpTest(ITestOutputHelper output) : base(output)', 'public void TestSampleData(long input, long? expected)', 'public partial class Kata', 'public static long? RangeSum(long n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,9,49,,
253,GetTheMiddleCharacterTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\GetTheMiddleCharacterTest.cs,"['public class GetTheMiddleCharacterTest : BaseTest', 'public GetTheMiddleCharacterTest(ITestOutputHelper output) : base(output)', 'public void GenericTests()', 'public partial class Kata', 'public static string GetMiddle(string s)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,41,,
254,GreatestCommonDivisorTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\GreatestCommonDivisorTest.cs,"['public class GreatestCommonDivisorTest', 'public void Test(int expected, int a, int b)', 'public static IEnumerable<object[]> GetTestCases()', 'public partial class Kata', 'public static int Gcd(int a, int b)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,3,35,,
255,HeadTailInitAndLastTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\HeadTailInitAndLastTest.cs,"['public class HeadTailInitAndLastTest : BaseTest', 'public HeadTailInitAndLastTest(ITestOutputHelper output) : base(output)', 'public void SampleTest()', 'public static class ArrayMethods', 'public static TSource Head<TSource>(this List<TSource> list)', 'public static List<TSource> Tail<TSource>(this List<TSource> list)', 'public static List<TSource> Init<TSource>(this List<TSource> list)', 'public static TSource Last_<TSource>(this List<TSource> list)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,6,54,,
256,IndexedCapitalizationTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\IndexedCapitalizationTest.cs,"['public class IndexedCapitalizationTest', 'public static IEnumerable<object[]> GetTestCases()', 'public void Test(string input, List<int> indexes, string expected)', 'public partial class Kata', 'public static string Capitalize(string input, List<int> idxs)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,40,,
257,IsogramsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\IsogramsTest.cs,"['public class IsogramsTest', 'private static IEnumerable<TestCaseData> testCases', 'public bool Test(string str) => Kata.IsIsogram(str);', 'public partial class Kata', 'public static bool IsIsogram(string str)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,40,,
258,IsThisATriangleTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\IsThisATriangleTest.cs,"['public class IsThisATriangleTest : BaseTest', 'public IsThisATriangleTest(ITestOutputHelper output) : base(output)', 'public void IsTriangle_ValidPostiveNumbers_ReturnsTrue(int a, int b, int c, bool expected)', 'public class Triangle', 'public static bool IsTriangle(int a, int b, int c)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,40,,
259,JadenCasingStringsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\JadenCasingStringsTest.cs,"['public class JadenCasingStringsTest', 'public void FixedTest()', 'public static class JadenCase', 'public static string ToJadenCase(this string phrase)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,3,29,,
260,MostDigitsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\MostDigitsTest.cs,"['public class MostDigitsTest', 'public void SampleTest()', 'public partial class Kata', 'public static int FindLongest(int[] number)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,3,28,,
261,MoveAllVowelsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\MoveAllVowelsTest.cs,"['public class MoveAllVowelsTest', 'public static IEnumerable<object[]> GetTestCases()', 'public void Test(string input, string expected) =>', 'public partial class Kata', 'public static string MoveVowel(string input)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,40,,
262,MovesInSquaredStringsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\MovesInSquaredStringsTest.cs,"['public class MovesInSquaredStringsTest : BaseTest', 'public MovesInSquaredStringsTest(ITestOutputHelper output) : base(output)', 'private static void testing(string actual, string expected)', 'public void TestVerticalMirror()', 'public void TestHorizontalMirror()', 'public class Opstrings', 'public static string VertMirror(string text)', 'public static string HorMirror(string text)', 'public static string Oper(Func<string, string> strategy, string text)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,6,61,,
263,NiceArrayTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\NiceArrayTest.cs,"['public class NiceArrayTest : BaseTest', 'public NiceArrayTest(ITestOutputHelper output) : base(output)', 'public void SampleTest()', 'public partial class Kata', 'public static bool IsNice(int[] a)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,36,,
264,RegexValidatePinCodeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\RegexValidatePinCodeTest.cs,"['public class RegexValidatePinCodeTest : BaseTest', 'public RegexValidatePinCodeTest(ITestOutputHelper output) : base(output)', 'public void LengthTest()', 'public void NonDigitTest()', 'public void ValidTest()', 'public partial class Kata', 'public static bool ValidatePin(string pin)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,58,,
265,SevenAte9Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\SevenAte9Test.cs,"['public class SevenAte9Test : BaseTest', 'public SevenAte9Test(ITestOutputHelper output) : base(output)', 'public void ExampleTests(string input, string expected)', 'public partial class Kata', 'public static string SevenAteNine(string str)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,49,,
266,SortArrayByStringLengthTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\SortArrayByStringLengthTest.cs,"['public class SortArrayByStringLengthTest', 'public void ExampleTests()', 'public partial class Kata', 'public static string[] SortByLength(string[] array)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,3,28,,
267,SumOfAllTheMultiplesOf3Or5Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\SumOfAllTheMultiplesOf3Or5Test.cs,"['public class SumOfAllTheMultiplesOf3Or5Test : BaseTest', 'public SumOfAllTheMultiplesOf3Or5Test(ITestOutputHelper output) : base(output)', 'public void MyTest()', 'public static class Program', 'public static int findSum(int n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,6,31,,
268,SumOfASequenceTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\SumOfASequenceTest.cs,"['public class SumOfASequenceTest', 'public void BasicTest()', 'public partial class Kata', 'public static int SequenceSum(int start, int end, int step)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,3,39,,
269,SumOfCubesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\SumOfCubesTest.cs,"['public class SumOfCubesTest', 'public void SampleTest()', 'public partial class Kata', 'public static long SumCubes(int n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,32,,
270,SumTimesTablesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\SumTimesTablesTest.cs,"['public class SumTimesTablesTest', 'public void SampleTest()', 'public partial class Kata', 'public static long SumTimesTable(List<int> tables, long min, long max)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,3,33,,
271,SymbolsCountedTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\SymbolsCountedTest.cs,"['public class SymbolsCountedTest', 'public void TestSampleCases(string input, string expected)', 'public static IEnumerable<object[]> GetTestCases()', 'public partial class Kata', 'public static string Transform(string input)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,40,,
272,TwoToOneTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\TwoToOneTest.cs,"['public class TwoToOneTest : BaseTest', 'public TwoToOneTest(ITestOutputHelper output) : base(output)', 'public static void TestAll()', 'public class TwoToOne', 'public static string Longest(string s1, string s2)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,6,35,,
273,UnflattenAListEasyTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\UnflattenAListEasyTest.cs,"['public class UnflattenAListEasyTest : BaseTest', 'public UnflattenAListEasyTest(ITestOutputHelper output) : base(output)', 'public void BasicTests()', 'public partial class Kata', 'public static object[] Unflatten(int[] a)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,6,59,,
274,WeHaveLiftoffTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\WeHaveLiftoffTest.cs,"['public class WeHaveLiftoffTest', 'public void Test()', 'public partial class Kata', 'public static string Liftoff(List<int> l)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,5,31,,
275,ZeroBalancedArrayTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu7\ZeroBalancedArrayTest.cs,"['public class ZeroBalancedArrayTest', 'public void SampleTest()', 'public partial class Kata', 'public static bool IsZeroBalanced(List<int> xs)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu7,4,32,,
276,BeginnerSeriesClockTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\BeginnerSeriesClockTest.cs,"['public class BeginnerSeriesClockTest', 'public void Test()', 'public static class Clock', 'public static int Past(int h, int m, int s)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,2,24,,
277,CalculateBmiTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\CalculateBmiTest.cs,"['public class CalculateBmiTest', 'public void SampleTest(double bmi, string expected)', 'public partial class Kata', 'public static string Bmi(double bmi)', 'public static string Bmi(double weight, double height)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,2,43,,
278,ConvertNumberToReversedArrayOfDigitsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\ConvertNumberToReversedArrayOfDigitsTest.cs,"['public class ConvertNumberToReversedArrayOfDigitsTest', 'public void MyTest()', 'public static long[] Digitize(long n)', 'private static IEnumerable<long> Digitize(string s, int startIndex, int endIndex)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,4,39,,
279,CountByXTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\CountByXTest.cs,"['public class CountByXTest : BaseTest', 'public CountByXTest(ITestOutputHelper output) : base(output)', 'public static void CountBy1()', 'public static void CountBy2()', 'public static void CountBy3()', 'public static void CountBy4()', 'public partial class Kata', 'public static int[] CountBy(int x, int n)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,5,47,,
280,CountOfpositivesSumOfNegativesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\CountOfpositivesSumOfNegativesTest.cs,"['public class CountOfpositivesSumOfNegativesTest', 'public void CountPositivesSumNegatives_BasicTest()', 'public void CountPositivesSumNegatives_InputWithZeroes()', 'public void CountPositivesSumNegatives_NullInput()', 'public partial class Kata', 'public static int[] CountPositivesSumNegatives(int[] a)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,3,50,,
281,DuckDuckGooseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\DuckDuckGooseTest.cs,"['public class DuckDuckGooseTest : BaseTest', 'public DuckDuckGooseTest(ITestOutputHelper output) : base(output)', 'public void DuckDuckGooseTests(int goose, string expected)', 'public partial class Kata', 'public static string DuckDuckGoose(Player[] players, int goose)', 'public class Player', 'public string Name { get; set; }', 'public Player(string name)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,5,53,,
282,FilterOutTheGeeseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\FilterOutTheGeeseTest.cs,"['public class FilterOutTheGeeseTest', 'public void SampleTest()', 'public static class Filter', 'public static IEnumerable<string> GooseFilter(IEnumerable<string> birds)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,4,36,,
283,FindTheFirstNonConsecutiveNumberTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\FindTheFirstNonConsecutiveNumberTest.cs,"['public class FindTheFirstNonConsecutiveNumberTest : BaseTest', 'public FindTheFirstNonConsecutiveNumberTest(ITestOutputHelper output) : base(output)', 'public void SampleTest(object expected, int[] input)', 'public partial class Kata', 'public static object FirstNonConsecutive(int[] arr)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,5,60,,
284,RemoveAllExclamationMarksFromTheEndOfSentenceTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\CodeWars\Kyu8\RemoveAllExclamationMarksFromTheEndOfSentenceTest.cs,"['public class RemoveAllExclamationMarksFromTheEndOfSentenceTest', 'public void SampleTest()', 'public partial class Kata', 'public static string Remove(string s)']",namespace,Demo.LearnByDoing.Tests.CodeWars.Kyu8,3,32,,
285,TriestTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\DataStructure\TriestTest.cs,"['public class TriestTest : BaseTest', 'private readonly TrieBuilder _trieBuilder = new TrieBuilder();', 'public TriestTest(ITestOutputHelper output) : base(output)', 'public void TestCreation()', 'public void TestCompleteWordSearch(bool expected, string word, string[] source)', 'public void TestPrefixWordSearch(bool expected, string prefix, string[] source)', 'public static IEnumerable<object[]> GetPrefixData()', 'public static IEnumerable<object[]> GetCompleteWordData()', 'public class Trie', 'public TrieNode Root { get; set; }', 'public Trie(TrieNode root)', 'public bool SearchCompleteWord(string word)', 'public bool SearchPrefix(string prefix)', 'public class TrieNode', 'public bool IsCompleteWord { get; set; } = false;', 'public Dictionary<char, TrieNode> Children { get; } = new Dictionary<char, TrieNode>();', 'public class TrieBuilder', 'public TrieNode BuildTrie(IEnumerable<string> words)', 'private void Insert(TrieNode current, string word)']",namespace,Demo.LearnByDoing.Tests.DataStructure,6,166,,
286,LinkedListPalindromeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\DataStructure\LinkedList\LinkedListPalindromeTest.cs,"['public class LinkedListPalindromeTest : BaseTest', 'public LinkedListPalindromeTest(ITestOutputHelper output) : base(output)']",namespace,Demo.LearnByDoing.Tests.DataStructure.LinkedList,8,19,,
287,ReverseSinglyLinkedListTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\DataStructure\LinkedList\ReverseSinglyLinkedListTest.cs,"['public class ReverseSinglyLinkedListTest : BaseTest', 'public ReverseSinglyLinkedListTest(ITestOutputHelper output) : base(output)', 'public void TestReverse()', 'private ListNode<int> ReverseLinkedList(ListNode<int> l)', 'public T value { get; set; }', 'public ListNode<T> next { get; set; }']",namespace,Demo.LearnByDoing.Tests.DataStructure.LinkedList,4,71,,
288,BinaryMinHeap.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\DataStructure\Tree\BinaryMinHeap.cs,"['public class BinaryMinHeap<T>', 'public class Node', 'public T Id { get; set; }', 'public int Weight { get; set; }', 'public override string ToString() => $""{Id}:{Weight}"";', 'private int _size = 0;', 'private int _capacity = 10;', 'private Node[] _items;', 'private readonly Dictionary<T, int> _map;', 'public BinaryMinHeap()', 'private void Swap(int index1, int index2)', 'public void Decrease(Node node)', 'public Node ExtractMinimum()', 'public void Add(Node node)', 'private void HeapifyDown(int startingIndex = 0)', 'private bool HasParent(int childIndex) => GetParentIndex(childIndex) >= 0;', 'private Node GetParent(int childIndex) => _items[GetParentIndex(childIndex)];', 'private int GetParentIndex(int childIndex) => (childIndex - 1) / 2;', 'private bool HasLeft(int index) => GetLeftIndex(index) < _size;', 'private Node GetLeft(int index) => _items[GetLeftIndex(index)];', 'private int GetLeftIndex(int index) => 2 * index + 1;', 'private bool HasRight(int index) => GetRightIndex(index) < _size;', 'private Node GetRight(int index) => _items[GetRightIndex(index)];', 'private int GetRightIndex(int index) => 2 * index + 2;', 'private void HeapifyUp(int startingIndex)', 'private void EnsureExtraCapacity()', 'public Node GetNode(T id) => _items[_map[id]];', 'public bool Contains(T id) => _map.ContainsKey(id);', 'public bool HasItem() => _size > 0;']",namespace,Demo.LearnByDoing.Tests.DataStructure.Tree,3,149,,
289,BinaryTreeTraversalsTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\DataStructure\Tree\BinaryTreeTraversalsTest.cs,"['public class BinaryTreeTraversalsTest', 'public void TestRecursiveDepthFirstPreOrderSearch(IEnumerable<int> expected, BinaryTreeNode root)', 'public void TestIterativeDepthFirstSearch(IEnumerable<int> expected, BinaryTreeNode root)', 'public void TestRecursiveDepthFirstInOrderSearch(IEnumerable<int> expected, BinaryTreeNode root)', 'public void TestRecursiveDepthFirstPostOrderSearch(IEnumerable<int> expected, BinaryTreeNode root)', 'public void TestIterativeDepthFirstPostOrderSearch(IEnumerable<int> expected, BinaryTreeNode root)', 'public static IEnumerable<object[]> GetDepthFirstPreOrderData()', 'public static IEnumerable<object[]> GetDepthFirstInOrderData()', 'public static IEnumerable<object[]> GetDepthFirstPostOrderData()', 'public class BinaryTreeNodeTraverser', 'public IEnumerable<int> TraverseDfsPreOrderIteratively(BinaryTreeNode root)', 'public IEnumerable<int> TraverseDfsPostOrderIterativelyUsingDoubleStack(BinaryTreeNode root)', 'public IEnumerable<int> TraverseDfsPreOrderRecursively(BinaryTreeNode root)', 'public IEnumerable<int> TraverseDfsInOrderRecursively(BinaryTreeNode root)', 'public IEnumerable<int> TraverseDfsPostOrderRecursively(BinaryTreeNode root)', 'public class BinaryTreeNode', 'public int Value { get; }', 'public BinaryTreeNode Left { get; set; }', 'public BinaryTreeNode Right { get; set; }', 'public BinaryTreeNode(int value)', 'public BinaryTreeNode InsertLeft(int leftValue)', 'public BinaryTreeNode InsertRight(int rightValue)']",namespace,Demo.LearnByDoing.Tests.DataStructure.Tree,4,207,,
290,BstTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\FEM\Algorithms\BinaryTrees\BstTest.cs,"['public class BstTest : BaseTest', 'public BstTest(ITestOutputHelper output) : base(output)', 'public void TestBstInsert()', 'public void TestContains()', 'public int? Value { get; set; }', 'public FemBinarySearchTree Left { get; set; }', 'public FemBinarySearchTree Right { get; set; }', 'public bool? Contains(int value)', 'public void Insert(int value)']",namespace,Demo.LearnByDoing.Tests.FEM.Algorithms.BinaryTrees,9,98,,
291,BstTraverseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\FEM\Algorithms\BinaryTrees\BstTraverseTest.cs,"['public class BstTraverseTest', 'public static IEnumerable<object[]> GetInOrderData()', 'public static IEnumerable<object[]> GetPreOrderData()', 'public static IEnumerable<object[]> GetPostOrderData()', 'private static TraverseNode GetSampleTree()', 'public int Value { get; set; }', 'public TraverseNode Left { get; set; }', 'public TraverseNode Right { get; set; }']",namespace,Demo.LearnByDoing.Tests.FEM.Algorithms.BinaryTrees,4,94,,
292,HashtableTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\FEM\Algorithms\DataStructures\HashtableTest.cs,"['public class HashtableTest : BaseTest', 'public HashtableTest(ITestOutputHelper output) : base(output)', 'public void TestSet()', 'public void TestGet()', 'public string[] Data { get; }', 'public string Get(string key)', 'public void Set(string key, string value)', 'public FemHashtable(int size)']",namespace,Demo.LearnByDoing.Tests.FEM.Algorithms.DataStructures,9,77,,
293,ExerciseTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\FEM\Algorithms\Recursion\ExerciseTest.cs,"['public class ExerciseTest : BaseTest', 'public ExerciseTest(ITestOutputHelper output) : base(output)', 'public static IEnumerable<object[]> GetSampleCaseFor1And2()', 'public void TestExercise1(int[] expected, int n)', 'private IEnumerable<int> Exercise1(int n)', 'public void TestExercise2(int[] expected, int n)', 'private IEnumerable<int> Exercise2(int n)', 'public static IEnumerable<object[]> GetSampleCaseFor3And4()', 'public void TestExercise3(int expected, int @base, int expo)', 'private int Exercise3(int @base, int expo)', 'public void TestExercise4(int expected, int @base, int expo)', 'private int Exercise4(int @base, int expo)', 'public static IEnumerable<object[]> GetSampleCaseFor5And6()', 'public void TestExercise5(int[] expected, int[] a, int num)', 'private IEnumerable<int> Exercise5(int[] a, int num)', 'public void TestExercise6(int[] expected, int[] a, int num)', 'private IEnumerable<int> Exercise6(int[] a, int num, int i)', 'public void TestFactorial()', 'private int Factorial(int n)', 'public void TestFib(int expected, int n)', 'private int Fib(int n)', 'public void TestGreatestCommonDivisor(int x, int y, int expected)', 'private int GetGreatestCommonDivisor(int x, int y)', 'public void TestReverseSequence(int[] expected, int[] sequence)', 'private IEnumerable<int> ReverseSequence(int[] sequence, int index)', 'public void TestNonDupePermuntations(string[] expected, string text)', 'private IEnumerable<string> GetNonDupePermutations(string text)']",namespace,Demo.LearnByDoing.Tests.FEM.Algorithms.Recursion,7,287,,
294,SortTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\FEM\Algorithms\Sorting\SortTest.cs,"['public class SortTest', 'public static IEnumerable<object[]> GetTestData()', 'public void TestQuickSort(int[] expected, int[] a)', 'private void QuickSort(int[] a, int start, int end)', 'private int Partition(int[] a, int start, int end)', 'public void TestMergeSort(int[] expected, int[] a)', 'private IEnumerable<int> MergeSort(int[] a)', 'private IEnumerable<int> Merge(List<int> left, List<int> right)', 'public void TestInsertionSort(int[] expected, int[] input)', 'private IEnumerable<int> InsertionSort(int[] input)', 'public void TestSelectionSort(int[] expected, int[] input)', 'private int[] SelectionSort(int[] input)', 'public void TestBubbleSort(int[] expected, int[] input)', 'private IEnumerable<int> BubbleSort(int[] input)']",namespace,Demo.LearnByDoing.Tests.FEM.Algorithms.Sorting,5,230,,
295,LinkedListTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\FEM\Algorithms\TreeAndSearching\LinkedListTest.cs,"['public class LinkedListTest : BaseTest', 'public LinkedListTest(ITestOutputHelper output) : base(output)', 'public static IEnumerable<object[]> GetLinkedLists()', 'public void TestLinkedList(int[] expected)', 'public int Value { get; set; }', 'public FemLinkedListNode Tail { get; set; }']",namespace,Demo.LearnByDoing.Tests.FEM.Algorithms.TreeAndSearching,9,42,,
296,01 Overlapping Subproblems Property.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\GeeksForGeeks\DynamicProgramming\BasicConcepts\01 Overlapping Subproblems Property.cs,"['public class _01_Overlapping_Subproblems_Property', 'public void TestFibonacciMemoization(int upto, int expected)', 'public void TestFibonacciTabulation(int upto, int expected)', 'public static IEnumerable<object[]> GetSampleCases()', 'public class GfgFibonacci', 'private List<int> _memoization;', 'private const int NIL = -1;', 'public int GetFibonacciUptoUsingTabulation(int upto)', 'public int GetFibonacciUptoUsingRecursiveMemoization(int upto)']",namespace,Demo.LearnByDoing.Tests.GeeksForGeeks.DynamicProgramming.BasicConcepts,4,84,,
297,03 How to solve a Dynamic Programming Problem.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\GeeksForGeeks\DynamicProgramming\BasicConcepts\03 How to solve a Dynamic Programming Problem.cs,"['public class _03_How_to_solve_a_Dynamic_Programming_Problem', 'private readonly NumberOfWays _sut;', 'public _03_How_to_solve_a_Dynamic_Programming_Problem()', 'public void TestNaiveAnswer(int expected, int n)', 'public void TestMemoizationAnswer(int expected, int n)', 'public static IEnumerable<object[]> GetSamples()', 'public void TestBytelandianGoldCoins(int expected, int n)', 'public static IEnumerable<object[]> GetBytelandianSamples()', 'public class BytelandianGoldCoins', 'public int GetNumberOfWays(int n)', 'private int[] _ways;', 'public int GetNumberOfWaysBad(int n)', 'public class NumberOfWays', 'public int GetNumberOfWaysNaiveWay(int n)', 'private int[] _ways;', 'public int GetNumberOfWaysMemoization(int n)']",namespace,Demo.LearnByDoing.Tests.GeeksForGeeks.DynamicProgramming.BasicConcepts,4,143,,
298,02_Binomial Coefficient.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\GeeksForGeeks\DynamicProgramming\BasicProblems\02_Binomial Coefficient.cs,"['public class _02_Binomial_CoefficientTest', 'public void TestSampleCases(int n, int k, int expected)', 'public static IEnumerable<object[]> GetSampleCases()', 'public int GetValue(int n, int k)']",namespace,Demo.LearnByDoing.Tests.GeeksForGeeks.DynamicProgramming.BasicProblems,7,57,,
299,03 Longest Common Subsequence Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\GeeksForGeeks\DynamicProgramming\BasicProblems\03 Longest Common Subsequence Test.cs,"['public class _03_Longest_Common_Subsequence_Test', 'public void TestSampleCases(string text1, string text2, int expected)', 'public static IEnumerable<object[]> GetSampleCases()', 'public class _03_Longest_Common_Subsequence', 'public int GetLongestCommonSubsequence2(string text1, string text2)', 'public int GetLongestCommonSubsequence(string text1, string text2)']",namespace,Demo.LearnByDoing.Tests.GeeksForGeeks.DynamicProgramming.BasicProblems,4,89,,
300,LongestCommonSubsequenceTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\GeeksForGeeks\DynamicProgramming\BasicProblems\LongestCommonSubsequenceTest.cs,"['public class LongestCommonSubsequenceTest', 'public static IEnumerable<object[]> GetTestCases()', 'public void TestHappyPaths(char[] expected, string text1, string text2)', 'private IEnumerable<char> GetLongestCommonSubsequence(string text1, string text2)', 'private IEnumerable<char> BuildPath(int[,] m, string t1, string t2)', 'private int[,] BuildMatrix(string text1, string text2)']",namespace,Demo.LearnByDoing.Tests.GeeksForGeeks.DynamicProgramming.BasicProblems,5,102,,
301,01_Graph and its representations.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\GeeksForGeeks\GraphDataStructureAndAlgorithms\IntroductionToDfsAndBfs\01_Graph and its representations.cs,"['public class _01_Graph_and_its_representations : BaseTest', 'public _01_Graph_and_its_representations(ITestOutputHelper output) : base(output)', 'public void PrintGraph()', 'public class UndirectedGraph', 'public int VertexCount { get; set; }', 'public LinkedList<int>[] AdjacentLists { get; set; }', 'public UndirectedGraph(int vertexCount)', 'private void SetupAdjacentLists(int vertexCount)', 'public void AddEdge(int fromVetex, int toVertex)', 'public void PrintGraph()']",namespace,Demo.LearnByDoing.Tests.GeeksForGeeks.GraphDataStructureAndAlgorithms.IntroductionToDfsAndBfs,9,77,,
302,02_Breadth First Traversal or BFS for a Graph.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\GeeksForGeeks\GraphDataStructureAndAlgorithms\IntroductionToDfsAndBfs\02_Breadth First Traversal or BFS for a Graph.cs,[],namespace,Demo.LearnByDoing.Tests.GeeksForGeeks.GraphDataStructureAndAlgorithms.IntroductionToDfsAndBfs,6,12,,
303,MeshMessageTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\MeshMessageTest.cs,[],namespace,Demo.LearnByDoing.Tests.InterviewCake,5,0,,
304,Question001Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question001Test.cs,"['public class Question001Test', 'public void TestSampleData(int expected, int[] input)', 'private int GetMaxProfit(int[] a)', 'private int GetMaxProfitFailsForNegative(int[] a)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,69,,
305,Question002Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question002Test.cs,"['public class Question002Test', 'public void TestSampleCases(int[] expected, int[] a)', 'public void ThrowErrorIfLessThanTwoElementIsPassed()', 'public class ICProductOfOtherNumbers', 'public IEnumerable<int> GetProductOfOtherNumbers(int[] a)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,5,65,,
306,Question003Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question003Test.cs,"['public class Question003Test', 'public void TestSampleCases(int[] input, int expected)', 'public class HighestProductOfThree', 'private const int PRODUCT_SIZE = 3;', 'public int GetMax(int[] a)', 'private List<int> GetRearrangedPositiveValue(List<int> list, int value)', 'private List<int> GetRearrangedNegativeValue(List<int> list, int value)', 'public int GetMax_DoesntWorkForNegativeElement(int[] a)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,5,96,,
307,Question004Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question004Test.cs,"['public class Question004Test', 'public static IEnumerable<object[]> TestCases()', 'public void TestAllCases(Meeting[] input, Meeting[] expected)', 'public class MeetingEqualityComparer : IEqualityComparer<Meeting>', 'public bool Equals(Meeting x, Meeting y)', 'public int GetHashCode(Meeting obj)', 'public class MeetingMerger', 'public Meeting[] MergeRanges(Meeting[] meetings)', 'public class Meeting', 'public int StartTime { get; }', 'public int EndTime { get; }', 'public Meeting(int startTime, int endTime)', 'public override string ToString()']",namespace,Demo.LearnByDoing.Tests.InterviewCake,5,142,,
308,Question005Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question005Test.cs,"['public class Question005Test : BaseTest', 'public Question005Test(ITestOutputHelper output) : base(output)', 'public void TestSampleData()', 'public void TestNoAnswer()', 'public void TestSomethingElse()', 'public int ChangePossibilitiesTopDown2(int amountLeft, int[] denominations, int currentIndex)', 'public int ChangePossibilitiesTopDown(int amountLeft, int[] denominations, int currentIndex, Dictionary<Tuple<int, int[]>, int> seen)', 'private static int steps = 0;', 'public int ChangePossibilitiesTopDown_Copied(int amountLeft, int[] denominations, int currentIndex, Dictionary<Tuple<int, int[]>, int> seen)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,7,176,,
309,Question006Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question006Test.cs,"['public class Question006Test', 'public int LeftX { get; set; }', 'public int BottomY { get; set; }', 'public int Width { get; set; }', 'public int Height { get; set; }', 'public Rectangle() { }', 'public Rectangle(int leftX, int bottomY, int width, int height)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,6,36,,
310,Question007Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question007Test.cs,"['public class Question007Test', 'public void TestInsert(int[] temperatures, int max, int min, double mean, int mode)', 'public static IEnumerable<object[]> GetTestInsertData()', 'private int _max = int.MinValue;', 'private int _min = int.MaxValue;', 'private int _sum = 0;', 'private int _count = 0;', 'private double _mean = 0;', 'private int _maxOccurrences = 0;', 'private int _mode = 0;', 'private readonly Dictionary<int, int> _map = new Dictionary<int, int>();', 'public void Insert(int temperature)', 'public int GetMax() => _max;', 'public int GetMin() => _min;', 'public double GetMean() => _mean;', 'public int GetMode() => _mode;']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,89,,
311,Question008Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question008Test.cs,"['public class Question008Test', 'public static IEnumerable<object[]> GetTrueCases()', 'public bool IsSuperBalancedTree(BinaryTreeNode root)', 'private int GetMaxDepth(BinaryTreeNode root, int depth)', 'public int Value { get; }', 'public BinaryTreeNode Left { get; private set; }', 'public BinaryTreeNode Right { get; private set; }', 'public BinaryTreeNode(int value)', 'public BinaryTreeNode InsertLeft(int leftValue)', 'public BinaryTreeNode InsertRight(int rightValue)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,88,,
312,Question009Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question009Test.cs,"['public class Question009Test', 'public static IEnumerable<object[]> GetCases()', 'public bool IsBinarySearchTree(BinaryTreeNode root)', 'public bool IsBinarySearchTree_MyImplmentation(BinaryTreeNode root)', 'private IEnumerable<int> TraverseInOrder(BinaryTreeNode root)', 'public BinaryTreeNode Node { get; set; }', 'public int LowerBound { get; set; }', 'public int UpperBound { get; set; }', 'public NodeBounds(BinaryTreeNode node, int lowerBound, int upperBound)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,6,138,,
313,Question012Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question012Test.cs,"['public class Question012Test', 'private readonly Question012 _sut;', 'public Question012Test()', 'public static IEnumerable<object[]> GoodPathData()', 'public void TestGoodPaths(bool expected, int[] a, int n)', 'public void TestEdgeCases()', 'public class Question012', 'public bool Contains(int[] a, int n)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,89,,
314,Question013Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question013Test.cs,"['public class Question013Test', 'public void TestEdgeCases()', 'public static IEnumerable<object[]> SampleCases()', 'public void TestSample(int expected, string[] words)', 'public class Question013', 'public int GetRotationIndex(string[] words)', 'public int GetRotationIndex_Slow(string[] words)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,92,,
315,Question014Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question014Test.cs,"['public class Question014Test', 'private Question014 _sut;', 'public Question014Test()', 'public void TestSampleCases(bool expected, int n, int[] a)', 'public static IEnumerable<object[]> GetSampleCases()', 'public class Question014', 'public bool HasCombination(int[] a, int n)', 'public bool HasCombinationGood(int[] a, int n)', 'public bool HasCombination_StillNotGood(int[] a, int n)', 'public bool HasCombination_NotGood(int[] a, int n)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,107,,
316,Question015Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question015Test.cs,"['public class Question015Test', 'private readonly Question015 _sut = new Question015();', 'public void TestSampleData(int n, int expected)', 'public void TestSampleDataUsingBitnetsFormula(int n, int expected)', 'public static IEnumerable<object[]> GetSampleData()', 'public int GetNthFibUsingBinetsFormula(int n)', 'public int GetNthFib(int n)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,7,80,,
317,Question016Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question016Test.cs,"['public class Question016Test', 'private readonly Question016 _sut = new Question016();', 'public void TestSampleCases(double expected, CakeType[] cakeTypes, int capacity)', 'public static IEnumerable<object[]> GetSampleCases()', 'public double MaxDuffelBagValue(CakeType[] cakeTypes, int capacity)', 'public double MaxDuffelBagValueBad(CakeType[] cakeTypes, int capacity)', 'public static void PrintMatrix(int[,] matrix)', 'public class CakeType', 'public int Weight { get; }', 'public long Value { get; }', 'public CakeType(int weight, long value)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,155,,
318,Question019Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question019Test.cs,"['public class Question019Test', 'public static IEnumerable<object[]> GetSampleCases()', 'public void TestSampleCases(int[] input)', 'public void TestOneOffCases()', 'public class QueueWithTwoStacks', 'public Stack<int> InStack { get; set; } = new Stack<int>();', 'public Stack<int> OutStack { get; set; } = new Stack<int>();', 'public void Enqueue(int value)', 'public int Dequeue()', 'public void EnqeueRange(int[] input)', 'public int[] DequeueAll()']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,84,,
319,Question020Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question020Test.cs,"['public class Question020Test', 'public static IEnumerable<object[]> GetAllPushCases()', 'public void TestAllPushes(int[] input, int expected)', 'public void TestPushPop()', 'public class MaxStack', 'private readonly Stack<int> _valueStack = new Stack<int>();', 'private readonly Stack<int> _maxStack = new Stack<int>();', 'public int Push(int value)', 'public int Pop()', 'public int GetMax()']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,101,,
320,Question021Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question021Test.cs,"['public class Question021Test', 'public void TestSampleCases(int expected, int[] deliveryIdConfirmations)', 'public void TestSampleCasesUsingLinq(int expected, int[] deliveryIdConfirmations)', 'public void TestSampleCasesUsingHashtable(int expected, int[] deliveryIdConfirmations)', 'public static IEnumerable<object[]> GetSampleData()', 'private int FindUniqueIntegerUsingHashtable(int[] deliveryIdConfirmations)', 'private int FindUniqueIntegerUsingLinq(int[] deliveryIdConfirmations)', 'private int FindUniqueInteger(int[] deliveryIdConfirmations)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,5,102,,
321,Question022Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question022Test.cs,"['public class Question022Test', 'public void TestSampleCase()', 'private void DeleteNode(LinkedListNode head, LinkedListNode nodeToDelete)', 'public int Value { get; set; }', 'public LinkedListNode Next { get; set; }', 'public LinkedListNode(int value)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,2,70,,
322,Question023Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question023Test.cs,"['public class Question023Test', 'public void TestForCycleInTheMiddle()', 'public void TestForCycleInTheBeginning()', 'public bool ContainsCycleUsingAnswer(LinkedListNode head)', 'public bool ContainsCycle(LinkedListNode head)', 'public bool ContainsCycleWithSet(LinkedListNode head)', 'public class LinkedListNode', 'public int Value { get; set; }', 'public LinkedListNode Next { get; set; }', 'public LinkedListNode(int value)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,131,,
323,Question024Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question024Test.cs,"['public class Question024Test', 'public void TestReverse()', 'public void TestEdgeCases()', 'private LinkedListNode ReverseLinkedList(LinkedListNode head)', 'public class LinkedListNode', 'public int Value { get; set; }', 'public LinkedListNode Next { get; set; }', 'public LinkedListNode(int value)', 'public IEnumerable<int> Traverse()']",namespace,Demo.LearnByDoing.Tests.InterviewCake,7,103,,
324,Question025Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question025Test.cs,"['public class Question025Test', 'public void TestSampleCase()', 'public LinkedListNode KthToLastNode(int kth, LinkedListNode head)', 'private LinkedListNode GetAheadNode(int kth, LinkedListNode head)', 'public class LinkedListNode', 'public int Value { get; set; }', 'public LinkedListNode Next { get; set; }', 'public LinkedListNode(int value)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,102,,
325,Question026Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question026Test.cs,"['public class Question026Test', 'public void TestSampleCases(string expected, string input)', 'public static IEnumerable<object[]> GetSampleCases()', 'public class StringReverser', 'public string ReverseInPlace2(string input)', 'public string ReverseInPlace(string input)', 'private void Swap(char[] a, int i, int j)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,79,,
326,Question027Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question027Test.cs,"['public class Question027Test', 'public void TestSampleCases(string expected, string sentence)', 'public static IEnumerable<object[]> GetSampleCases()', 'public string ReverseWordsByChar(string sentence)', 'private void ReverseCharacters(char[] a, int startIndex, int endIndex)', 'private void Swap(char[] a, int i, int j)', 'public string ReverseWords(string sentence)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,115,,
327,Question028Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question028Test.cs,"['public class Question028Test', 'public void TestSampleCase()', 'public int GetMatchingIndex(string sentence, int position)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,70,,
328,Question029Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question029Test.cs,"['public class Question029Test', 'public void TestSampleCases(bool expected, string input)', 'public static IEnumerable<object[]> GetSampleCases()', 'public class Question029', 'public bool IsBracketMatching(string input)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,74,,
329,Question030Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question030Test.cs,"['public class Question030Test', 'public static IEnumerable<object[]> GetSampleCases()', 'public void TestSampleCases(bool expected, string word)', 'public class Question030', 'public bool IsPermutationPalindrome2(string word)', 'public bool IsPermutationPalindrome(string word)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,3,72,,
330,Question031Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question031Test.cs,"['public class Question031Test', 'public static IEnumerable<object[]> GetSampleCases()', 'public void TestSampleCases(string input, string[] expected)', 'public class Question031', 'public string[] GetPermutations(string input)', 'private IEnumerable<string> FillPermutations(string input)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,98,,
331,Question032Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question032Test.cs,"['public class Question032Test', 'public void TestSampleCase()', 'public void TestDuplicateValueCase()', 'private int[] SortScores2(int[] unsortedScores, int highestPossibleScore)', 'private int[] SortScores(int[] unsortedScores, int highestPossibleScore)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,115,,
332,Question033Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question033Test.cs,"['public class Question033Test', 'public void TestHashVersion(int expected, int[] input)', 'public void TestMathVersion(int expected, int[] input)', 'public static IEnumerable<object[]> GetSampleCases()', 'private int FindDupeUsingMath(int[] input)', 'private int FindDupeUsingHash(int[] input)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,5,65,,
333,Question034Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question034Test.cs,[],namespace,Demo.LearnByDoing.Tests.InterviewCake,7,0,,
334,Question035Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question035Test.cs,"['public class Question035Test : BaseTest', 'public Question035Test(ITestOutputHelper output) : base(output)', 'public void TestRandomNumber()', 'private int[] ShuffleInPlace(int[] input)', 'private readonly RNGCryptoServiceProvider _rngCsp = new RNGCryptoServiceProvider();', 'private int GetRandom(int floor, int ceiling)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,7,67,,
335,Question040Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question040Test.cs,"['public class Question040Test', 'public void TestSampleCases(int expected, int[] input)', 'public void TestSampleCasesWithoutModifyingInput(int expected, int[] input)', 'public static IEnumerable<object[]> GetSampleCases()', 'private int GetDuplicateWithoutModifyingInput(int[] input)', 'private int GetDuplicate(int[] a)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,7,73,,
336,Question043Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question043Test.cs,"['public class Question043Test', 'public void TestSampleCase()', 'private IEnumerable<int> MergeArrays(int[] a1, int[] a2)']",namespace,Demo.LearnByDoing.Tests.InterviewCake,4,84,,
337,Question046Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\InterviewCake\Question046Test.cs,[],namespace,Demo.LearnByDoing.Tests.InterviewCake,8,0,,
338,LruCacheTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\LeetCode\Hard\LruCacheTest.cs,"['public class LruCacheTest : BaseTest', 'private const int CACHE_SIZE = 3;', 'public LruCacheTest(ITestOutputHelper output) : base(output)', 'public void IntegrationTest()', 'public static IEnumerable<object[]> GetEmptyCache()', 'public void TestGetEmpty(int expected, LRUCache emptyCache)', 'public void TestPutInEmptyCahce()', 'public void TestPutInNotFullCahce()', 'public void TestPutInFullCahce()', 'public void TestGetInCache()', 'public class LRUCache', 'private const int NOT_IN_CACHE = -1;', 'private readonly Dictionary<int, LRUNode> _map;', 'private LRUNode _start = null;', 'private LRUNode _end = null;', 'public int Capacity { get; set; }', 'public LRUCache(int capacity)', 'public int Get(int key)', 'public void Put(int key, int value)', 'private void RemoveNode(LRUNode node)', 'private void AppendNode(LRUNode node)', 'private void AddKey(int key, LRUNode value)', 'private void RemoveKey(int key)', 'private LRUNode GetNode(int key)', 'private bool IsFull()', 'private bool InCache(int key)', 'public class LRUNode', 'public int Key { get; set; }', 'public int Value { get; set; }', 'public LRUNode Previous { get; set; } = null;', 'public LRUNode Next { get; set; } = null;', 'public LRUNode(int key, int value)', 'public override string ToString()']",namespace,Demo.LearnByDoing.Tests.LeetCode.Hard,5,201,,
339,AddTwoNumbersTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\LeetCode\Medium\AddTwoNumbersTest.cs,"['public class AddTwoNumbersTest', 'public void TestSampleCase()', 'public class Solution', 'public ListNode AddTwoNumbers(ListNode l1, ListNode l2)', 'public ListNode AddTwoNumbers1(ListNode l1, ListNode l2)', 'public BigInteger GetNodeValue(ListNode n)', 'public ListNode BuildNode(BigInteger value)', 'private IEnumerable<int> GetDigitsReverse(BigInteger value)', 'public class ListNode', 'public int val;', 'public ListNode next;', 'public ListNode(int x) { val = x; }']",namespace,Demo.LearnByDoing.Tests.LeetCode.Medium,7,119,,
340,DoublyLinkedListTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\DoublyLinkedListTest.cs,"['public class DoublyLinkedListTest : BaseTest', 'public DoublyLinkedListTest(ITestOutputHelper output) : base(output)', 'public void TestEdgeCases()', 'public void TestInsertAndTraversal()', 'public void TestTraversalCallback()', 'public void TestInsertAt()', 'public void TestRemoving()', 'public void TestPreviousNode()', 'public void TestRemovingFirstAndLast()', 'public class DoublySungNode<T>', 'public T Value { get; set; }', 'public DoublySungNode<T> Next { get; set; }', 'public DoublySungNode<T> Previous { get; set; }', 'public DoublySungNode(T value)', 'public override bool Equals(object obj)', 'protected bool Equals(DoublySungNode<T> other)', 'public override int GetHashCode()']",namespace,Demo.LearnByDoing.Tests.MissionInterview,6,165,,
341,DoublySungLinkedList.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\DoublySungLinkedList.cs,"['public class DoublySungLinkedList<T>', 'public DoublySungNode<T> Head { get; set; }', 'public IEnumerable<DoublySungNode<T>> Traverse(Func<DoublySungNode<T>, DoublySungNode<T>, bool> callback = null)', 'public DoublySungNode<T> Append(T value)', 'public DoublySungNode<T> InsertAt(DoublySungNode<T> node, T value)', 'public void Remove(DoublySungNode<T> node)']",namespace,Demo.LearnByDoing.Tests.MissionInterview,4,80,,
342,LinkedListTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\LinkedListTest.cs,"['public class LinkedListTest : BaseTest', 'public LinkedListTest(ITestOutputHelper output) : base(output)', 'public void TestEdgeCases()', 'public void TestInsertAndTraversal()', 'public void TestTraversalCallback()', 'public void TestInsertAt()', 'public void TestRemoving()', 'public void TestRemovingFirstAndLast()', 'public class SungNode<T>', 'public T Value { get; set; }', 'public SungNode<T> Next { get; set; }', 'public SungNode(T value)', 'public override bool Equals(object obj)', 'protected bool Equals(SungNode<T> other)', 'public override int GetHashCode()']",namespace,Demo.LearnByDoing.Tests.MissionInterview,6,145,,
343,QueueTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\QueueTest.cs,"['public class QueueTest', 'public void TestEnqueue()', 'public void TestPeek()', 'public void TestDequeue()']",namespace,Demo.LearnByDoing.Tests.MissionInterview._01_DataStructures,6,58,,
344,StackTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\StackTest.cs,"['public class StackTest : BaseTest', 'public StackTest(ITestOutputHelper output) : base(output)', 'public void TestPush()', 'public void TestPop()', 'public void TestPeek()']",namespace,Demo.LearnByDoing.Tests.MissionInterview,6,75,,
345,SungGraphTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\SungGraphTest.cs,"['public class SungGraphTest : BaseTest', 'public SungGraphTest(ITestOutputHelper output) : base(output)', 'public void PrintOnScreen()', 'public class SungVertex<T>', 'public T Value { get; set; }', 'private List<SungEdge<T>> Edges { get; }', 'public SungVertex(T value)', 'public SungVertex<T> To(SungEdge<T> edge)', 'public SungVertex<T> To(SungVertex<T> toVertex, int cost)', 'public IEnumerable<SungEdge<T>> Traverse(SungVertex<T> vertex)', 'public class SungEdge<T>', 'public SungVertex<T> To { get; set; }', 'public int Cost { get; set; }', 'public SungEdge(SungVertex<T> to, int cost)']",namespace,Demo.LearnByDoing.Tests.MissionInterview._01_DataStructures,6,73,,
346,SungLinkedList.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\SungLinkedList.cs,"['public class SungLinkedList<T>', 'public SungNode<T> Head { get; set; }', 'public IEnumerable<SungNode<T>> Traverse(Func<SungNode<T>, SungNode<T>, bool> callback = null)', 'public SungNode<T> Append(T value)', 'public SungNode<T> InsertAt(SungNode<T> node, T value)', 'public void Remove(SungNode<T> node)']",namespace,Demo.LearnByDoing.Tests.MissionInterview,4,80,,
347,SungQueue.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\SungQueue.cs,"['public class SungQueue<T>', 'private int _count = 0;', 'private readonly DoublySungLinkedList<T> _list = new DoublySungLinkedList<T>();', 'public void Enqueue(T value)', 'public IEnumerable<T> Traverse()', 'public T Dequeue()', 'public T Peek()']",namespace,Demo.LearnByDoing.Tests.MissionInterview._01_DataStructures,4,39,,
348,SungStack.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\SungStack.cs,"['public class SungStack<T>', 'private readonly DoublySungLinkedList<T> _list;', 'private int _count;', 'public SungStack()', 'public void Push(T value)', 'public IEnumerable<T> Traverse()', 'public T Pop()', 'public T Peek()']",namespace,Demo.LearnByDoing.Tests.MissionInterview,4,49,,
349,SungTreeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\MissionInterview\01-DataStructures\SungTreeTest.cs,"['public class SungTreeTest : BaseTest', 'public SungTreeTest(ITestOutputHelper output) : base(output)', 'public static SungBinaryTreeNode<int> GetSampleTree()', 'public static IEnumerable<object[]> GetPreData()', 'public static IEnumerable<object[]> GetInData()', 'public static IEnumerable<object[]> GetPostData()', 'public void TestPreTraversal(List<int> expected, SungBinaryTreeNode<int> root)', 'public void TestInTraversal(List<int> expected, SungBinaryTreeNode<int> root)', 'public void TestPostTraversal(List<int> expected, SungBinaryTreeNode<int> root)', 'public void TestBuildingTree(SungBinaryTreeNode<int> expected, int[] input)', 'public static SungBinaryTreeNode<int> GetSampleBinaryTreeNode()', 'public static IEnumerable<object[]> GetBinaryTreeNodeData()', 'public class SungBinaryTreeBuilder', 'public SungBinaryTreeNode<int> Build(int[] input)', 'private SungBinaryTreeNode<int> Build(int[] a, int min, int max)', 'public class SungBinaryTreeTraverser', 'public IEnumerable<T> TraversePre<T>(SungBinaryTreeNode<T> root)', 'public IEnumerable<int> TraverseIn(SungBinaryTreeNode<int> root)', 'public IEnumerable<int> TraversePost(SungBinaryTreeNode<int> root)', 'public class SungBinaryTreeNode<T>', 'public T Value { get; set; }', 'public SungBinaryTreeNode<T> Left { get; set; }', 'public SungBinaryTreeNode<T> Right { get; set; }', 'public SungBinaryTreeNode(T value)', 'public SungBinaryTreeNode<T> AddLeft(T value)', 'public SungBinaryTreeNode<T> AddRight(T value)']",namespace,Demo.LearnByDoing.Tests.MissionInterview._01_DataStructures,7,203,,
350,BinaryPrintTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\BinaryPrintTest.cs,"['public class BinaryPrintTest : BaseTest', 'public BinaryPrintTest(ITestOutputHelper output) : base(output)', 'public void JustPrint()', 'private static int step = 0;', 'private void PrintBinaryCombinations(int[] a, int i, int step)', 'private void PrintArray(int[] a)']",namespace,Demo.LearnByDoing.Tests.RandomStuff,6,55,,
351,CountWayTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\CountWayTest.cs,"['public class CountWayTest', 'public void TestSample()', 'public long CountWays(int[] S, int m, int n)']",namespace,Demo.LearnByDoing.Tests.RandomStuff,3,53,,
352,FindDifferencesOnInterviewingIOTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\FindDifferencesOnInterviewingIOTest.cs,"['public class FindDifferencesOnInterviewingIOTest', 'public void TestUsingBitwiseOperation(int expected, int[] a1, int[] a2)', 'public void TestUsingLookup(int expected, int[] a1, int[] a2)', 'public void TestUsingSorting(int expected, int[] a1, int[] a2)', 'public void TestUsingSum(int expected, int[] a1, int[] a2)', 'private int GetDifferenceUsingSum(int[] a1, int[] a2)', 'private int GetDifferenceUsingSorting(int[] a1, int[] a2)', 'private int GetDifferenceUsingLookup(int[] a1, int[] a2)', 'private int GetDifferenceUsingBitwiseOperation(int[] a1, int[] a2)', 'private int GetValueAt(int[] a, int index)', 'public static IEnumerable<object[]> GetInput()']",namespace,Demo.LearnByDoing.Tests.RandomStuff,6,152,,
353,FogCreekSupportEngineer1Test.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\FogCreekSupportEngineer1Test.cs,"['public class FogCreekSupportEngineer1Test', 'public void TestInput()', 'public class FogCreekSupportEngineer1', 'public string GetResult(string input)']",namespace,Demo.LearnByDoing.Tests.RandomStuff,4,36,,
354,GraphTraversalFromScratchTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\GraphTraversalFromScratchTest.cs,[],namespace,Demo.LearnByDoing.Tests.RandomStuff,6,0,,
355,MergeSortTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\MergeSortTest.cs,"['public class MergeSortTest', 'public void TestMergeSort(int[] expected, int[] input)', 'private int[] MergeSortInput(int[] a)', 'private int[] MergeArrays(int[] left, int[] right)', 'public static IEnumerable<object[]> GetInput()']",namespace,Demo.LearnByDoing.Tests.RandomStuff,4,82,,
356,PalindromeUsingXorTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\PalindromeUsingXorTest.cs,"['public class PalindromeUsingXorTest : BaseTest', 'public PalindromeUsingXorTest(ITestOutputHelper output) : base(output)', 'public void TestPalindromeness(bool expected, ListNode<int> list)', 'public static IEnumerable<object[]> GetTestData()', 'private static ListNode<int> GetListNode(params int[] args)', 'public class ListNode<T>', 'public T Value { get; set; }', 'public ListNode<T> Next { get; set; }']",namespace,Demo.LearnByDoing.Tests.RandomStuff,5,54,,
357,PermutablePrimesTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\PermutablePrimesTest.cs,[],namespace,Demo.LearnByDoing.Tests.RandomStuff,4,0,,
358,PermutateTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\PermutateTest.cs,"['public class PermutateTest : BaseTest', 'public PermutateTest(ITestOutputHelper output) : base(output)', 'public static IEnumerable<object[]> GetOneDimensionalData()', 'public void TestOneDimensionalArrayPermutationSums(int number, int count, int[] expected)', 'private IEnumerable<int> GetPermutatedSums(int number, int count)']",namespace,Demo.LearnByDoing.Tests.RandomStuff,7,39,,
359,QuickSortTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\QuickSortTest.cs,"['public class QuickSortTest', 'public void TestQuickSort(int[] expected, int[] input)', 'private void QuickSortInput(int[] a, int start, int end)', 'private int Partition(int[] a, int start, int end)', 'private void Swap(int[] a, int i1, int i2)', 'public static IEnumerable<object[]> GetInput()']",namespace,Demo.LearnByDoing.Tests.RandomStuff,4,69,,
360,RecursionTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\RecursionTest.cs,"['public class RecursionTest : BaseTest', 'public RecursionTest(ITestOutputHelper output) : base(output)', 'public void TestSumming(int[] input, int expected)', 'public void TestNestedArraySum(object[] input, int expected)', 'public class RecursionStuff', 'public int GetNestedArraySum(object[] input)', 'private int GetNestedArraySumRecursively(object[] input, int i)', 'public int GetSum(int[] input)', 'private int GetSumRecursively(int[] input, int i)']",namespace,Demo.LearnByDoing.Tests.RandomStuff,6,70,,
361,TreeNodeAncestorDecendentCheckTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\TreeNodeAncestorDecendentCheckTest.cs,"['public class TreeNodeAncestorDecendentCheckTest : BaseTest', 'public TreeNodeAncestorDecendentCheckTest(ITestOutputHelper output) : base(output)', 'private static int _preSteps;', 'private static int _postSteps;', 'public static void TestSamples(bool expected, int parent, int decendant, Node node)', 'private static bool CheckParentDescendant(int parent, int decendant, Dictionary<int, int> preMap, Dictionary<int, int> postMap)', 'private static Dictionary<int, int> GetPreOrderMap(Node node)', 'private static IEnumerable<(int, int)> PreTraverseNode(Node node)', 'private static Dictionary<int, int> GetPostOrderMap(Node node)', 'private static IEnumerable<(int, int)> PostTraverseNode(Node node)', 'public static IEnumerable<object[]> GetSampleInputs()', 'private static Node GetBinaryTree()', 'public class Node', 'public int Value { get; set; }', 'public Node Left { get; set; }', 'public Node Right { get; set; }']",namespace,Demo.LearnByDoing.Tests.RandomStuff,6,163,,
362,BalancedTreeCheckerTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Asana\BalancedTreeCheckerTest.cs,"['public class BalancedTreeCheckerTest', 'public static IEnumerable<object[]> GetTrueCases()', 'private bool IsBalancedTree(BinaryTreeNode node)', 'private int GetMaxDepth(BinaryTreeNode node, int depth)', 'public int Value { get; }', 'public BinaryTreeNode Left { get; private set; }', 'public BinaryTreeNode Right { get; private set; }', 'public BinaryTreeNode(int value)', 'public BinaryTreeNode InsertLeft(int leftValue)', 'public BinaryTreeNode InsertRight(int rightValue)']",namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Asana,4,84,,
363,BinarySearchTreeCheckTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Asana\BinarySearchTreeCheckTest.cs,"['public class BinarySearchTreeCheckTest', 'public static IEnumerable<object[]> GetTestCases()', 'public void TestBinarySearchTree(bool expected, BinarySearchTreeNode root)', 'private bool IsBinarySearchTree(BinarySearchTreeNode node)', 'private bool IsLeaf(BinarySearchTreeNode node) =>', 'private bool IsWithinBoundary(BinarySearchTreeNode node, int leftBoundary, int rightBoundary) =>', 'private bool CheckBinarySearchTree(BinarySearchTreeNode node, int leftBoundary, int rightBoundary)', 'public class BinarySearchTreeNode', 'public int Value { get; }', 'public BinarySearchTreeNode Left { get; set; }', 'public BinarySearchTreeNode Right { get; set; }', 'public BinarySearchTreeNode(int value)', 'public BinarySearchTreeNode InsertLeft(int leftValue)', 'public BinarySearchTreeNode InsertRight(int rightValue)']",namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Asana,3,118,,
364,HungryRabbitTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Asana\HungryRabbitTest.cs,[],namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Asana,4,0,,
365,KClosePointsToOriginTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Asana\KClosePointsToOriginTest.cs,"['public class KClosePointsToOriginTest', 'public void TestHappyPath()', 'private IEnumerable<(int, int)> GetKClosestPointsToOrigin(int k, (int X, int Y)[] points)', 'private Dictionary<(int, int), double> BuildPointToDistanceMap((int x, int y)[] points)', 'private double CalculateDistance((int X, int Y) point) => Math.Sqrt(point.X * point.X + point.Y * point.Y);', 'private GenericMaxHeap<(int X, int Y, double Distance)> BuildMaxHeapMap(int k, (int X, int Y)[] points)', 'public int Compare((int X, int Y, double Distance) x, (int X, int Y, double Distance) y)', 'private T[] _items;', 'private int _capacity = 10;', 'private int _size;', 'private readonly IComparer<T> _comparer;', 'public GenericMaxHeap(IComparer<T> comparer)', 'public T Peek()', 'public T Poll()', 'public bool HasItem() => _size > 0;', 'public void Add(T item)', 'private void EnsuareCapacity()', 'private void HeapifyUp()', 'private void HeapifyDown()', 'private bool HasParent(int childIndex) => GetParentIndex(childIndex) >= 0;', 'private bool HasLeftChild(int index) => GetLeftChildIndex(index) < _size;', 'private bool HasRightChild(int index) => GetRightChildIndex(index) < _size;', 'private int GetParentIndex(int childIndex) => (childIndex - 1) / 2;', 'private int GetLeftChildIndex(int index) => index * 2 + 1;', 'private int GetRightChildIndex(int index) => index * 2 + 2;', 'private T GetParentValue(int childIndex) => _items[GetParentIndex(childIndex)];', 'private T GetLeftChildValue(int index) => _items[GetLeftChildIndex(index)];', 'private T GetRightChildValue(int index) => _items[GetRightChildIndex(index)];', 'private void Swap(int index1, int index2) =>']",namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Asana,5,200,,
366,MaxHeapTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Asana\MaxHeapTest.cs,"['public class MaxHeapTest', 'public void TestHeapness()', 'public static IEnumerable<object[]> GetSortData()', 'public void TestSort(int[] input, int[] expected)', 'private IEnumerable<int> Sort(int[] input)', 'private void Heapify(int[] a, int size, int rootIndex)', 'private void Swap(int[] a, int i1, int i2) => (a[i1], a[i2]) = (a[i2], a[i1]);', 'private int _capacity = 10;', 'private int _size = 0;', 'private int[] _items;', 'public MaxHeap()', 'private void EnsureExtraCapacity()', 'public int Peek()', 'public int Poll()', 'public void Add(int item)', 'public void AddRange(IEnumerable<int> items)', 'private void HeapifyUp()', 'private bool HasParent(int childIndex) => GetParentIndex(childIndex) >= 0;', 'private bool HasLeftChild(int index) => GetLeftChildIndex(index) < _size;', 'private bool HasRightChild(int index) => GetRightChildIndex(index) < _size;', 'private int GetParentIndex(int childIndex) => (childIndex - 1) / 2;', 'private int GetLeftChildIndex(int index) => index * 2 + 1;', 'private int GetRightChildIndex(int index) => index * 2 + 2;', 'private int GetParent(int childIndex) => _items[GetParentIndex(childIndex)];', 'private int GetLeftChild(int index) => _items[GetLeftChildIndex(index)];', 'private int GetRightChild(int index) => _items[GetRightChildIndex(index)];', 'private void Swap(int i1, int i2) => (_items[i1], _items[i2]) = (_items[i2], _items[i1]);', 'private void HeapifyDown()']",namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Asana,5,188,,
367,MaxNumbersInSquaresToTravelTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Asana\MaxNumbersInSquaresToTravelTest.cs,[],namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Asana,7,0,,
368,MinHeapTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Asana\MinHeapTest.cs,"['public class MinHeapTest : BaseTest', 'public void TestHeapness()', 'public void ThrowExceptionWhenExtractingAnEmptyBinaryMinHeap()', 'public static IEnumerable<object[]> GetSampleBinaryHeap()', 'public void TestBinaryMinHeapContains(BinaryMinHeap<char> sut)', 'public void TestBinaryMinHeap(BinaryMinHeap<char> sut)', 'public void TestBinaryMinHeapDecrease()', 'public MinHeapTest(ITestOutputHelper output) : base(output)', 'private int Capacity { get; } = 10;', 'private int Size { get; set; }', 'public int[] Items { get; set; }', 'public MinHeap()', 'private int GetLeftChildIndex(int parentIndex) => (2 * parentIndex) + 1;', 'private int GetRightChildIndex(int parentIndex) => (2 * parentIndex) + 2;', 'private int GetParentIndex(int childIndex) => (childIndex - 1) / 2;', 'private bool HasLeftChild(int parentIndex) => GetLeftChildIndex(parentIndex) < Size;', 'private bool HasRightChild(int parentIndex) => GetRightChildIndex(parentIndex) < Size;', 'private bool HashParent(int childIndex) => GetParentIndex(childIndex) >= 0;', 'private int LeftChild(int index) => Items[GetLeftChildIndex(index)];', 'private int RightChild(int index) => Items[GetRightChildIndex(index)];', 'private int Parent(int index) => Items[GetParentIndex(index)];', 'private void Swap(int indexOne, int indexTwo)', 'private void EnsureExtraCapacity()', 'public int Peek()', 'public int Poll()', 'public void Add(int item)', 'public void AddRange(IEnumerable<int> items)', 'private void HeapifyUp()', 'private void HeapifyDown()']",namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Asana,8,237,,
369,TopologicalSortTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Asana\TopologicalSortTest.cs,[],namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Asana,7,0,,
370,FindLcaInBinaryTreeTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Zocdoc\FindLcaInBinaryTreeTest.cs,"['public class FindLcaInBinaryTreeTest', 'public static void TestSamples(int expected, int leftValue, int rightValue)', 'private static bool _isLeftFound = false;', 'private static bool _isRightFound = false;', 'private static BinaryTreeNode FindLca2(BinaryTreeNode node, int n1, int n2)', 'private static BinaryTreeNode FindLca(BinaryTreeNode node, int n1, int n2)', 'public static IEnumerable<object[]> GetSampleInputs()', 'public class BinaryTreeNode', 'public int Value { get; }', 'public BinaryTreeNode Left { get; set; }', 'public BinaryTreeNode Right { get; set; }', 'public BinaryTreeNode(int value)', 'public BinaryTreeNode InsertLeft(int leftValue)', 'public BinaryTreeNode InsertRight(int rightValue)', 'public override string ToString()']",namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Zocdoc,4,163,,
371,PalindromeCheckTest.cs,.\cs_code\Demo.LearnByDoing-5afb7d3fae028348316b4ede0c8d969d9c1fe84c\Demo.LearnByDoing.Tests\RandomStuff\Glassdoor\Zocdoc\PalindromeCheckTest.cs,"['public class PalindromeCheckTest', 'public static void TestPalindromes(bool expected, string input)', 'private static bool IsPalindrome(string input)', 'public static IEnumerable<object[]> GetSampleInput()']",namespace,Demo.LearnByDoing.Tests.RandomStuff.Glassdoor.Zocdoc,3,79,,
372,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Program.cs,"['private static AIHeroClient Player => ObjectManager.Player;', 'private static void GameEventOnOnGameLoad()']",namespace,DeathGodX.AIO,9,132,,
373,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Amumu\Program.cs,"['private const string Champion = ""Amumu"";', 'private static List<Spell> SpellList = new List<Spell>();', 'private static Spell Q;', 'private static Spell W;', 'private static Spell E;', 'private static Spell R;', 'private static Menu Config, JungleMenu, ComboMenu, LaneClearMenu, DrawMenu;', 'private static Items.Item RDO;', 'private static Items.Item DFG;', 'private static Items.Item YOY;', 'private static Items.Item BOTK;', 'private static Items.Item HYD;', 'private static Items.Item CUT;', 'private static Items.Item TYM;', 'private static AIHeroClient Player;', 'public static AIHeroClient _Player', 'public static void AmumuGame_OnGameLoad()', 'private static void OnGameUpdate(EventArgs args)', 'private static void WaveClear()', 'private static void JungleClear() //Credits To Flapperdoodle!', 'private static void Combo()', 'private static int GetNumberHitByR(AIBaseClient target) // Credits to Trelli For helping me with this one!', 'private static void OnDraw(EventArgs args)']",namespace,StonedAmumu,14,363,,
374,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Cassiopeia\Program.cs,"['private static AIHeroClient _Player', 'public static Spell _Q;', 'public static Spell _W;', 'public static Spell _E;', 'public static Spell _R;', 'public static Spell _Ignite;', 'public static Item Seraph;', 'public static Item Zhonia;', 'private static Menu StartMenu, ComboMenu, LastHitM, DebugC, DrawingsMenu, JungleMenu, ClearMenu, UtilityMenu, RSet, ESet, WSet, QSet, otheroptions;', 'public static void CassiopeiaLoading_OnLoadingComplete()', 'public static bool PoisonWillExpire(this AIBaseClient target, float time)', 'private static bool Immobile(AIBaseClient unit)', 'private static void Game_OnUpdate(EventArgs args)', 'public static void LastHit()', 'public static void JungleClear()', 'public static void LaneClear()', 'public static List<AIMinionClient> GetGenericJungleMinionsTargets()', 'public static List<AIMinionClient> GetGenericJungleMinionsTargetsInRange(float range)', 'public static List<AIMinionClient> GetEnemyLaneMinionsTargets()', 'public static List<AIMinionClient> GetEnemyLaneMinionsTargetsInRange(float range)', 'public static void Harass()', 'private static void Zhonya()', 'private static void SeraphsEmbrace()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Combo()', 'private static void Interruptererer(AIBaseClient sender, Interrupter.InterruptSpellArgs args)', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'public static void Ignite()', 'private static void Dash_OnDash(AIBaseClient sender, Dash.DashArgs e)', 'public static void KillSteal()', 'private static void ImmobileQ()']",namespace,Cassiopeia_Du_Couteau_2,16,1403,,
375,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Corki\Program.cs,"['public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Item Botrk;', 'public static Item Bil;', 'public static Spell Ignite;', 'public static Menu Menu, SpellMenu, HarassMenu, ClearMenu, KillstealMenu, JungleMenu, items, Misc;', 'public static AIHeroClient _Player', 'public static void CorkiOnLoadingComplete()', 'private static void Game_OnUpdate(EventArgs args)', 'private static void ResetAttack(object e, OrbwalkerActionArgs args)', 'private static void Combo()', 'private static void Harass()', 'private static void LaneClear()', 'private static void KillSteal()', 'private static void Flee()', 'private static void JungleClear()', 'public static void Item()', 'private static void Drawing_OnDraw(EventArgs args)']",namespace,Corki7,15,452,,
376,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Diana\Program.cs,"['private static Menu StartMenu, ComboMenu, DrawingsMenu, AHarrasM, ActivatorMenu, HarrasMenu, LCMenu, AntiSpellMenu, LastHitM, KSMenu;', 'public static Spell _Q;', 'public static Spell _W;', 'public static Spell _E;', 'public static Spell _R;', 'public static Spell _Ignite;', 'private static Spell _RM;', 'public static AIHeroClient _Playere', 'private static AIHeroClient _Player', 'public static void DianaLoading_OnLoadingComplete()', 'private static void Game_OnUpdate(EventArgs args)', 'private static void Game_OnTick(EventArgs args)', 'public static void Misaya()', 'private static void Drawing_OnDraw(EventArgs args)', 'public static void AHarra()', 'public static void AntiSpell()', 'private static void LaneClear()', 'private static void JungleClear()', 'private static void Combo()', 'private static void LastHit()', 'private static void Harras()', 'public static void KillSteal()', 'public static void Activator()']",namespace,Diana___Bloody_Lunari,15,634,,
377,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Ekko\Program.cs,"['public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Font Thm;', 'public static GameObject EkkoREmitter { get; set; }', 'public static AIHeroClient _Player', 'public static Menu Menu, ComboMenu, JungleClearMenu, HarassMenu, Ulti, LaneClearMenu, Misc, KillSteals;', 'public static void EkkoOnLoadingComplete()', 'private static void Game_OnUpdate(EventArgs args)', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Flee()', 'public static int SkinId()', 'public static bool checkSkin()', 'public static double QDamage(AIBaseClient target)', 'public static double EDamage(AIBaseClient target)', 'public static double RDamage(AIBaseClient target)', 'public static void Game_On_Create(GameObject sender, EventArgs args)', 'public static void Game_On_Delete(GameObject sender, EventArgs args)', 'private static void Ultimate()', 'public static void Interupt(AIHeroClient sender, Interrupter.InterruptSpellArgs i)', 'private static void Harass()', 'private static bool UnderTuret(AIBaseClient target)', 'private static void Combo()', 'private static void LaneClear()', 'private static void JungleClear()', 'public static void DrawFont(Font vFont, string vText, float vPosX, float vPosY, ColorBGRA vColor)', 'private static void KillSteal()', 'private static void AIHeroClient_OnProcessSpellCast(AIBaseClient sender, AIBaseClientProcessSpellCastEventArgs args)', 'public static void Miscs()', 'private static void Gapcloser_OnGapCloser(AIHeroClient sender, Gapcloser.GapcloserArgs args)']",namespace,Ekko,15,697,,
378,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Ezreal\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, Auto, LaneClearMenu, JungleClearMenu, Misc, Items, KillStealMenu, Drawings;', 'public static Item Botrk;', 'public static Item Bil;', 'public static Font Thm;', 'public static Font Thn;', 'private static readonly Item Tear = new Item(ItemId.Tear_of_the_Goddess, 400);', 'private static readonly Item Manamune = new Item(ItemId.Manamune, 400);', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static AIHeroClient _Player', 'public static void EzrealOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'public static void DrawFont(Font vFont, string vText, float vPosX, float vPosY, ColorBGRA vColor)', 'private static void Game_OnUpdate(EventArgs args)', 'public static void Item()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'public static void Combo()', 'public static void JungleClear()', 'private static void Flee()', 'public static void LaneClear()', 'private static void Orbwalker_CantLasthit(object targetz, OrbwalkerActionArgs args)', 'public static void Harass()', 'public static void LastHit()', 'public static void AutoHarass()', 'public static void RStun()', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'public static bool Tru(Vector3 position)', 'public static void KillSteal()', 'public static void Stacks()']",namespace,Ezreal,17,603,,
379,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Graves\Program.cs,"['private static Menu Menu, ComboMenu, HarassMenu, ClearMenu, JungleMenu, Drawings, KillStealMenu, Items, Misc;', 'public static AIHeroClient _Player', 'public static Item Botrk;', 'public static Item Bil;', 'public static Item Youmuu;', 'public static Font Thm;', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static MenuSlider ComboMode;', 'public static void GravesLoading_OnLoadingComplete()', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'private static void Drawing_OnDraw(EventArgs args)', 'public static void DrawFont(Font vFont, string vText, float vPosX, float vPosY, ColorBGRA vColor)', 'public static void Item()', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'private static void Flee()', 'private static void ResetAttack(object target, OrbwalkerActionArgs args)', 'public static void Combo()', 'private static void Harass()', 'private static void LaneClear()', 'private static void JungleClear()', 'public static void QStun()', 'private static void KillSteal()']",namespace,Graves7,14,458,,
380,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Hecarim\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, Auto, JungleClearMenu, LaneClearMenu, KillStealMenu, Skin, Drawings;', 'public static AIHeroClient _Player', 'public static Font Thm;', 'public static Font thn;', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void HecarimOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'public static void DrawFont(Font vFont, string vText, float vPosX, float vPosY, ColorBGRA vColor)', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'public static float ETime(AIBaseClient target)', 'private static void Combo()', 'private static void RSelected()', 'private static void LaneClear()', 'public static void JungleClear()', 'private static void Harass()', 'public static void Interupt(AIBaseClient sender, Interrupter.InterruptSpellArgs i)', 'private static void AutoQ()', 'private static void Flee()', 'public static bool Tru(Vector3 position)', 'private static void LastHit()', 'public static double RDamage(AIBaseClient target)', 'public static double QDamage(AIBaseClient target)', 'private static void KillSteal()']",namespace,Hecarim7,15,456,,
381,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\JarvanIV\Program.cs,"['private const string Champion = ""JarvanIV"";', 'private static List<Spell> SpellList = new List<Spell>();', 'private static Spell Q;', 'private static Spell W;', 'private static Spell E;', 'private static Spell R;', 'public static SpellSlot IgniteSlot;', 'public static Menu Menu, ComboMenu, DrawMenu, MiscMenu, LaneMenu, JungleMenu, Misc, KillStealMenu, Drawings;', 'private static AIHeroClient Player;', 'public static AIHeroClient _Player', 'public static void JarvanGame_OnGameLoad()', 'private static void OnDeleteObj(GameObject sender, EventArgs args)', 'private static void OnGameUpdate(EventArgs args)', 'private static void LaneClear()', 'private static void JungleClear()', 'private static void EQMouse()', 'private static void Combo()', 'private static void OnDraw(EventArgs args)', 'private static float IgniteDamage(AIHeroClient target)']",namespace,StonedJarvan,14,278,,
382,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Jax\Program.cs,"['public static Menu Menu, ComboMenu, Autos, HarassMenu, LaneClearMenu, JungleClearMenu, Misc, KillStealMenu, Drawings;', 'public static Item Botrk;', 'public static Item Bil;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void JaxOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static bool ECasting', 'public static void Item()', 'public static void Combo()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'public static void JungleClear()', 'public static void LaneClear()', 'public static void LastHit()', 'public static void Harass()', 'public static void Flee()', 'public static void WardJump(Vector3 cursorpos)', 'public static ItemId[] WardIds = {ItemId.Warding_Totem, ItemId.Greater_Stealth_Totem_Trinket, ItemId.Greater_Vision_Totem_Trinket, ItemId.Sightstone, ItemId.Ruby_Sightstone, (ItemId) 2043, (ItemId)3340, (ItemId)2303,', 'public static InventorySlot JumpWard()', 'public static void KillSteal()']",namespace,Jax,14,505,,
383,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Kassadin\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, LaneClearMenu, LastHitMenu, JungleClearMenu, KillStealMenu, Misc;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static Font thm;', 'public static void KassadinOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'public static bool EReady', 'private static void Combo()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'private static void LaneClear()', 'private static void LastHit()', 'private static bool UnderTuret(AIBaseClient target)', 'private static void Harass()', 'public static void JungleClear()', 'public static void DrawFont(Font vFont, string vText, float jx, float jy, ColorBGRA jc)', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'public static void Interupt(AIBaseClient sender, Interrupter.InterruptSpellArgs i)', 'private static void Flee()', 'private static void Dtc()', 'private static void KillSteal()']",namespace,Kassadin7,14,526,,
384,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\KogMaw\Program.cs,"['public static Item Botrk;', 'public static Menu Menu, ComboMenu, HarassMenu, LaneClearMenu, JungleClearMenu, KillStealMenu, Misc, Items;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void KogMawOnLoadingComplete()', 'public static void Item()', 'private static void Drawing_OnDraw(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'private static void Game_OnUpdate(EventArgs args)', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'private static void Combo()', 'private static void Ultimate()', 'private static void LaneClear()', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'private static void LastHit()', 'private static void Harass()', 'public static void JungleClear()', 'public static void Flee()', 'public static double RDamege(AIBaseClient target)', 'private static void KillSteal()']",namespace,KogMaw,15,490,,
385,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Leona\Program.cs,"['private static AIHeroClient _Player', 'private static Menu StartMenu, ComboMenu, DrawingsMenu, ActivatorMenu;', 'public static Spell _Q;', 'public static Spell _W;', 'public static Spell _E;', 'public static Spell _R;', 'public static Spell _Ignite;', 'public static void LeonaLoading_OnLoadingComplete()', 'private static void Game_OnTick(EventArgs args)', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Combo()', 'public static void Activator()']",namespace,The_Horizon_Leona,15,186,,
386,ChewyMoonsLux.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Lux\ChewyMoonsLux.cs,"['public static AIHeroClient _Player', 'public static Spell Ignite;', 'private static GameObject _eGameObject;', 'public static Spell Q, W, E, R;', 'public static Menu drawingMenu, tsMenu, comboMenu, harassMenu, ksMenu, itemsMenu, miscMenu, LaneClearMenu, JungleClearMenu;', 'public static bool PacketCast = false;', 'public static bool Debug', 'public static void LuxOnGameLoad()', 'private static void AutoShield()', 'private static void KillSecure()', 'private static void Harass()', 'private static void LaneClear()', 'private static void Combo()', 'private static bool HasPassive(AIBaseClient target)', 'private static void Game_OnUpdate(EventArgs args)', 'private static void OnDraw(EventArgs args)', 'public static void JungleClear()', 'private static void SetupMenu()']",namespace,ChewyMoonsLux,17,356,,
387,QGapCloser.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Lux\QGapCloser.cs,[],namespace,ChewyMoonsLux,17,31,,
388,SpellCombo.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Lux\SpellCombo.cs,"['public class SpellCombo', 'public static void CastQ(AIHeroClient target)']",namespace,ChewyMoonsLux,18,56,,
389,Utilities.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Lux\Utilities.cs,['public static void PrintChat(string msg)'],namespace,ChewyMoonsLux,8,19,,
390,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Malphite\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, JungleClearMenu, LaneClearMenu, KillStealMenu, Drawings;', 'public static Font Thm;', 'public static Font Thn;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void MalphiteOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'private static void Combo()', 'private static void RSelect()', 'private static void LaneClear()', 'private static void LastHit()', 'public static void JungleClear()', 'private static void Harass()', 'private static void Flee()', 'public static void Interupt(AIBaseClient sender, Interrupter.InterruptSpellArgs i)', 'public static void DrawFont(Font vFont, string vText, float vPosX, float vPosY, ColorBGRA vColor)', 'private static void KillSteal()']",namespace,Malphite,14,424,,
391,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\MasterYi\Program.cs,"['public static Menu Menu, ComboMenu, Evade, HarassMenu, LaneClearMenu, Items, KillStealMenu, Drawings;', 'public static Item Botrk;', 'public static Item Bil;', 'public static Item Youmuu;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void MasterYiOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static void Item()', 'private static void Gapcloser_OnGapCloser(AIHeroClient sender, Gapcloser.GapcloserArgs args)', 'public static void Combo()', 'public static void JungleClear()', 'public static void LaneClear()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'public static void Harass()', 'public static void Flee()', 'public static void QEvade()', 'private static void AIHeroClient_OnProcessSpellCast(AIBaseClient sender, AIBaseClientProcessSpellCastEventArgs args)', 'public static void KillSteal()']",namespace,Yi,15,532,,
392,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\MonkeyKing\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, Ulti, LaneClearMenu, JungleClearMenu, KillStealMenu, Misc;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Font thm;', 'public static Item Hydra;', 'public static Item Tiamat;', 'public static Spell Ignite;', 'public static void MonkeyKingOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'public static bool QPassive', 'public static bool RActive', 'private static void Combo()', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'private static void Ultimate()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'private static void LaneClear()', 'private static void Harass()', 'public static void JungleClear()', 'public static void Interupt(AIBaseClient sender, Interrupter.InterruptSpellArgs i)', 'public static void Flee()', 'public static void DrawFont(Font vFont, string vText, float jx, float jy, ColorBGRA jc)', 'public static bool UnderTuret(this Vector3 position)', 'private static void KillSteal()']",namespace,Doctor_s_WuKong,14,454,,
393,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Nidalee\Program.cs,"['public static AIHeroClient myhero { get { return ObjectManager.Player; } }', 'private static Menu menu, combo, harass, laneclear, jungleclear, misc, draw, pred, flee;', 'public static bool Q1Ready = true, Q2Ready = true, W1Ready = true, W2Ready = true, E2Ready = true;', 'private static Spell ignt { get; set; }', 'private static Spell smite { get; set; }', 'public static Item Potion { get; private set; }', 'public static Item Biscuit { get; private set; }', 'public static Item RPotion { get; private set; }', 'public static void NidaleeOnLoad()', 'private static void OnTick(EventArgs args)', 'private static bool check(Menu submenu, string sig)', 'private static int MenuSlider(Menu submenu, string sig)', 'private static int comb(Menu submenu, string sig)', 'private static bool key(Menu submenu, string sig)', 'private static void OnLvlUp(AIBaseClient sender, AIHeroClientLevelUpEventArgs args)', 'private static double QDamage(AIHeroClient target)', 'private static bool IsCougar()', 'private static bool IsHunted(AIHeroClient target)', 'private static void RLogic(AIHeroClient target)', 'private static void CastW2(AIHeroClient target)', 'private static void Combo()', 'private static void Harass()', 'private static void Laneclear()', 'private static void Jungleclear()', 'private static void Misc()', 'private static void OnDraw(EventArgs args)', 'private static void OnProcess(AIBaseClient sender, AIBaseClientProcessSpellCastEventArgs args)', 'public static void DatMenu()', 'public static class DemSpells', 'public static Spell Q1 { get; private set; }', 'public static Spell Q2 { get; private set; }', 'public static Spell W1 { get; private set; }', 'public static Spell W2 { get; private set; }', 'public static Spell W2E { get; private set; }', 'public static Spell E1 { get; private set; }', 'public static Spell E2 { get; private set; }', 'public static Spell R { get; private set; }']",namespace,T7_Nidalee,12,811,,
394,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Olaf\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, LaneClearMenu, LastHitMenu, JungleClearMenu, Misc, KillStealMenu, Skin, Drawings;', 'public static Item Botrk;', 'public static Item Bil;', 'public static Item Hydra;', 'public static Item Tiamat;', 'public static Item Titanic;', 'public static GameObject Axe { get; set; }', 'public static float Time { get; set; }', 'public static float End { get; set; }', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void OlafOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'public static void Combo()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'public static void JungleClear()', 'private static void LaneClear()', 'private static void Orbwalker_CantLasthit(object target, OrbwalkerActionArgs args)', 'private static void Flee()', 'public static void Harass()', 'public static void LastHit()', 'public static void RStun()', 'public static void GameObject_OnCreate(GameObject sender, EventArgs args)', 'public static void GameObject_OnDelete(GameObject sender, EventArgs args)', 'public static void KillSteal()', 'private static void Ult()']",namespace,Olaf7,15,547,,
395,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Renekton\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, Ulti, LaneClearMenu, JungleClearMenu, KillStealMenu, Misc;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static Item Hydra;', 'public static Item Tiamat;', 'public static Item Titanic;', 'public static void RenektonOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'public static bool PassiveW', 'public static bool PassiveE', 'public static bool Fury', 'public static double QDamage(AIBaseClient target)', 'public static double WDamage(AIBaseClient target)', 'public static double EDamage(AIBaseClient target)', 'public static float GetDamage(AIHeroClient target)', 'private static void Combo()', 'private static void Ultimate()', 'public static void Item()', 'private static void LaneClear()', 'public static void LastHit()', 'private static void Harass()', 'public static void JungleClear()', 'private static void KillSteal()']",namespace,Renekton7,14,455,,
396,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Rengar\Program.cs,"['private static AIHeroClient _player;', 'private static Spell _q, _w, _e, _r;', 'private static SpellSlot _igniteSlot;', 'private static Items.Item _youmuu, _tiamat, _hydra, _blade, _bilge, _rand, _lotis;', 'private static SpellSlot _smiteSlot;', 'private static Menu Menu { get; set; }', 'public static Menu comboMenu, harassMenu, itemMenu, clearMenu, miscMenu, lasthitMenu, jungleMenu, drawMenu, smiteMenu;', 'private static Spell _smite;', 'private static int _lastTick;', 'public static void RengarGame_OnGameLoad()', 'public static bool getMenuBoolItem(Menu m, string item)', 'public static int getMenuSliderItem(Menu m, string item)', 'public static bool getMenuKeyBindItem(Menu m, string item)', 'public static int getBoxItem(Menu m, string item)', 'private static void Game_OnGameUpdate(EventArgs args)', 'public static void Dash()', 'private static void OnAfterAttack(object targeti, OrbwalkerActionArgs args)', 'private static void OnBeforeAttack(object targete, OrbwalkerActionArgs args)', 'private static void ChangeComboMode()', 'private static void Interrupter2_OnInterruptableTarget(AIHeroClient unit, Interrupter.InterruptSpellArgs args)', 'private static void OnProcessSpellCast(AIBaseClient sender, AIBaseClientProcessSpellCastEventArgs args)', 'private static void Smiteontarget()', 'private static void Usepotion()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static double ComboDamage(AIBaseClient enemy)', 'private static void Combo()', 'private static void Harass()', 'private static HitChance Echange()', 'private static void KillSteal()', 'public static readonly string[] Smitetype =', 'private static int GetSmiteDmg()', 'private static void Smiteuse()', 'private static void Laneclear()', 'private static void JungleClear()', 'private static void LastHit()', 'private static void AutoHeal()', 'private static void UseItemes()']",namespace,D_Rengar,16,1157,,
397,ElRumbleMenu.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Rumble\ElRumbleMenu.cs,"['public class ElRumbleMenu', 'private static Menu Menu { get; set; }', 'public static Menu comboMenu, harassMenu, heatMenu, clearMenu, miscMenu;', 'public static void Initialize()']",namespace,ElRumble,16,62,,
398,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Sejuani\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, JungleClearMenu, LaneClearMenu, KillStealMenu, Skin, Drawings;', 'public static Font Thm;', 'public static Font Thn;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell F;', 'public static Spell Ignite;', 'public static void SejuaniOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'private static void Combo()', 'private static void FlashQ()', 'private static void LaneClear()', 'public static void JungleClear()', 'private static void Harass()', 'private static void Flee()', 'public static void Interupt(AIBaseClient sender, Interrupter.InterruptSpellArgs i)', 'public static void DrawFont(Font vFont, string vText, float vPosX, float vPosY, ColorBGRA vColor)', 'public static double RDamage(AIBaseClient target)', 'public static double QDamage(AIBaseClient target)', 'public static double EDamage(AIBaseClient target)', 'private static void KillSteal()']",namespace,Sejuani7,17,449,,
399,ChewyMoonShaco.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Shaco\ChewyMoonShaco.cs,"['public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Menu Menu;', 'public static Menu illuminatiMenu, comboMenu, drawingMenu, escapeMenu, ActivatorMenu, harassMenu, miscMenu, AntiSpellMenu, LastHitM, ksMenu;', 'public static List<Spell> SpellList;', 'public static Items.Item Tiamat;', 'public static Items.Item Hydra;', 'public static int cloneAct = 0;', 'public static AIHeroClient player = ObjectManager.Player;', 'public static void ShacoOnGameLoad()', 'private static void OrbwalkingOnAfterAttack(Object unit, OrbwalkerActionArgs targeti)', 'private static void CreateMenu()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void GameOnOnGameUpdate(EventArgs args)', 'public static void Escape()', 'public static AIBaseClient getClone()', 'private static void KillSecure()', 'private static void Combo()', 'private static void Harass()']",namespace,ChewyMoonsShaco,15,374,,
400,DangerDB.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Shaco\DangerDB.cs,"['public class DangerDB', 'public static List<String> Skillshots = new List<string>()', 'public static List<String> TargetedList = new List<string>()', 'public static List<String> CircleSkills = new List<string>()']",namespace,ChewyMoonsShaco,6,56,,
401,Illuminati.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Shaco\Illuminati.cs,"['private const float BoxSafeDistance = 100;', 'public static float TriangleLegDistance = ChewyMoonShaco.illuminatiMenu[""BoxDistance""].GetValue<MenuSlider>().Value;', 'private static readonly List<AIMinionClient> Boxes = new List<AIMinionClient>();', 'private static Vector3 _extendPoint;', 'public static void Init()', 'private static void GameOnOnUpdate(EventArgs args)', 'private static Vector2 RotateAroundPoint(double angleDegree, Vector2 center, Vector3 point)', 'public static void PlaceInitialBox()', 'private static void DrawingOnOnDraw(EventArgs args)']",namespace,ChewyMoonsShaco,15,172,,
402,ShacoUtil.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Shaco\ShacoUtil.cs,"['public static Vector3 GetQPos(AIHeroClient target, bool serverPos, int distance = 150)', 'public static Vector2 GetShortestWayPoint(List<Vector2> waypoints)']",namespace,ChewyMoonsShaco,14,32,,
403,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Sona\Program.cs,"['private static AIHeroClient _Player', 'private static Menu StartMenu, ComboMenu, DrawingsMenu, ActivatorMenu, AHarrasMenu;', 'public static Spell _Q;', 'public static Spell _W;', 'public static Spell _E;', 'public static Spell _R;', 'public static Spell _FlashR;', 'public static Spell _Ignite;', 'public static Spell _Flash = new Spell(ReturnSlot(""summonerflash""), 425);', 'public static SpellSlot ReturnSlot(string Name)', 'public static void SonaLoading_OnLoadingComplete()', 'private static void Game_OnUpdate(EventArgs args)', 'private static void Game_OnTick(EventArgs args)', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Combo()', 'public static void Heal()', 'public static void HealSelf()', 'public static void Run()', 'public static void AHarras()', 'public static void UltA()', 'public static void Activator()', 'public static void FlashR()']",namespace,The_Horizon_Sona,15,326,,
404,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Talon\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, LaneClearMenu, JungleClearMenu, Misc, KillStealMenu, Items;', 'public static Item Botrk;', 'public static Item Hydra;', 'public static Item Tiamat;', 'public static Item Bil;', 'public static Item Youmuu;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void TalonOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static bool RActive', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs args)', 'public static void Combo()', 'public static void AutoR()', 'public static void JungleClear()', 'public static void LaneClear()', 'public static void Item()', 'public static void Harass()', 'public static void RStun()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'public static double QDamage(AIBaseClient target)', 'public static double WDamage(AIBaseClient target)', 'public static double RDamage(AIBaseClient target)', 'public static void KillSteal()']",namespace,Talon7,15,426,,
405,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Tristana\Program.cs,"['public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Font Thm;', 'public static AIHeroClient _Player', 'public static Menu Menu, SpellMenu, JungleMenu, HarassMenu, LaneMenu, Misc;', 'public static void TristanaOnLoadingComplete()', 'public static double EDamage(AIBaseClient target)', 'public static double RDamage(AIBaseClient target)', 'public static double GetDamage(AIHeroClient target)', 'private static void Flee()', 'private static void Interupt(AIBaseClient sender, Interrupter.InterruptSpellArgs i)', 'private static void Harass()', 'private static void Combo()', 'private static void LaneClear()', 'private static void JungleClear()', 'private static void DrawFont(Font vFont, string vText, float vPosX, float vPosY, ColorBGRA vColor)', 'private static void GameObject_OnCreate(GameObject sender, EventArgs args)', 'private static void Gapcloser_OnGapCloser(AIBaseClient sender, Gapcloser.GapcloserArgs args)', 'private static void KillSteal()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static bool UnderTuret(this Vector3 position)', 'private static void Game_OnUpdate(EventArgs args)']",namespace,Tristana,17,433,,
406,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Trundle\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, LaneClearMenu, JungleClearMenu, KillStealMenu, Items, Misc;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static Item Hydra;', 'public static Item Tiamat;', 'public static Item Titanic;', 'public static Item Botrk;', 'public static Item Bil;', 'public static void TrundleOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static void Interupt(AIBaseClient sender, Interrupter.InterruptSpellArgs i)', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'public static int SkinId()', 'public static bool checkSkin()', 'private static void Combo()', 'public static void Item()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'private static void LaneClear()', 'public static void LastHit()', 'private static void Harass()', 'public static void JungleClear()', 'public static void Flee()', 'private static void KillSteal()']",namespace,Trundle7,13,440,,
407,Tryndamare.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Tryndamere\Tryndamare.cs,"['private static AIHeroClient User = ObjectManager.Player;', 'public static Menu Menu, ComboMenu, HarassMenu, Ulti, LaneClearMenu, JungleClearMenu, KillStealMenu, Misc;', 'private static AIHeroClient fly { get { return ObjectManager.Player; } }', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static Font thm;', 'public static Font thn;', 'public static Item Hydra;', 'public static Item Tiamat;', 'public static Item Botrk;', 'public static Item Bil;', 'public const float YOff = 10;', 'public const float XOff = 0;', 'public const float Width = 107;', 'public const float Thick = 9;', 'public static void TryndamereOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'private static void Damage(EventArgs args)', 'public static float RTime(AIBaseClient target)', 'private static void Combo()', 'private static void Ultimate()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'private static void LaneClear()', 'private static void Harass()', 'public static void JungleClear()', 'public static void Flee()', 'public static void DrawFont(Font vFont, string vText, float jx, float jy, ColorBGRA jc)', 'public static bool UnderTuret(this Vector3 position)', 'private static void KillSteal()']",namespace,Tryndamere,16,485,,
408,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Twitch\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, LaneClearMenu, JungleClearMenu, Misc, KillStealMenu, Items;', 'public static Item Botrk;', 'public static Item Bil;', 'public static Item Youmuu;', 'public static readonly int[] SDamage = { 0, 15, 20, 25, 30, 35 };', 'public static readonly int[] BDamage = { 0, 20, 35, 50, 65, 80 };', 'public const float YOff = 10;', 'public const float XOff = 0;', 'public const float Width = 107;', 'public const float Thick = 9;', 'private static Font thm;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void TwitchOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static float QTime(AIBaseClient target)', 'public static float RTime(AIBaseClient target)', 'private static bool QCasting', 'public static void Combo()', 'public static void ResetAttack(object e, OrbwalkerActionArgs args)', 'public static void JungleClear()', 'public static void Item()', 'private static void Orbwalker_CantLasthit(object targeti, OrbwalkerActionArgs args)', 'private static void Flee()', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'public static void LaneClear()', 'public static void Harass()', 'private static void Damage(EventArgs args)', 'public static double EDamage(AIBaseClient target)', 'public static float StackTimeDamage(AIBaseClient target)', 'private static int Stack(AIBaseClient target)', 'public static float StackTime(AIBaseClient target)', 'public static void KillSteal()', 'public static void Escape()', 'public static void DrawFont(Font vFont, string vText, float jx, float jy, ColorBGRA jc)']",namespace,Twitch,14,575,,
409,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Vayne\Program.cs,"['public class Vayne', 'public static Spell E;', 'public static Spell Q;', 'public static Spell R;', 'private static Menu menu;', 'private static Dictionary<string, SpellSlot> spellData;', 'private static AIHeroClient tar;', 'public const string ChampName = ""Vayne"";', 'public static AIHeroClient Player;', 'private static Menu qmenu;', 'private static Menu emenu;', 'private static readonly Vector2 MidPos = new Vector2(6707.485f, 8802.744f);', 'private static readonly Vector2 DragPos = new Vector2(11514, 4462);', 'private static float LastMoveC;', 'private static void TumbleHandler()', 'private static void MoveToLimited(Vector3 where)', 'public static void VayneGame_OnGameLoad()', 'private static void AntiGapcloser_OnEnemyGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs gapcloser)', 'public static bool getMenuBoolItem(Menu m, string item)', 'public static int getMenuSliderItem(Menu m, string item)', 'public static bool getMenuKeyBindItem(Menu m, string item)', 'public static int getBoxItem(Menu m, string item)', 'private static void Interrupter2_OnInterruptableTarget(AIHeroClient unit,Interrupter.InterruptSpellArgs args)', 'public static void Orbwalking_AfterAttack(Object targeti ,OrbwalkerActionArgs args)', 'public static Vector3 Normalize(Vector3 A)', 'public static List<Vector2> Points = new List<Vector2>();', 'public static bool threeSixty(AIHeroClient unit, Vector2 pos = new Vector2())', 'public static void Game_OnGameUpdate(EventArgs args)']",namespace,hi_im_gosu,18,303,,
410,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Vladimir\Program.cs,"['public static Menu Menu, ComboMenu, Evade, HarassMenu, LaneClearMenu, Misc, KillStealMenu, Drawings;', 'public static AIHeroClient _Player', 'public static Font Thn;', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static void VladimirOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'public static bool EActive', 'public static bool Frenzy', 'public static double QDamage(AIBaseClient target)', 'public static double EDamage(AIBaseClient target)', 'public static double RDamage(AIBaseClient target)', 'public static void AutoQ()', 'private static void Gapcloser_OnGapCloser(AIHeroClient sender, Gapcloser.GapcloserArgs args)', 'public static void Combo()', 'public static void JungleClear()', 'public static void LastHit()', 'public static void LaneClear()', 'public static void WLogic()', 'public static void Harass()', 'public static void Flee()', 'private static void AIHeroClient_OnProcessSpellCast(AIBaseClient sender, AIBaseClientProcessSpellCastEventArgs args)', 'public static void KillSteal()', 'public static void DrawFont(Font vFont, string vText, float vPosX, float vPosY, ColorBGRA vColor)']",namespace,Vladimir,14,596,,
411,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Volibear\Program.cs,"['private const string ChampionName = ""Volibear"";', 'public static AIHeroClient Player;', 'public static Menu Menu { get; set; }', 'public static Menu comboMenu, laneclearing, fleeMenu, misc, drawingMenu;', 'private static Spell _q, _w, _e, _r;', 'private static readonly int[] SmitePurple = { 3713, 3726, 3725, 3726, 3723 };', 'private static readonly int[] SmiteGrey = { 3711, 3722, 3721, 3720, 3719 };', 'private static readonly int[] SmiteRed = { 3715, 3718, 3717, 3716, 3714 };', 'private static readonly int[] SmiteBlue = { 3706, 3710, 3709, 3708, 3707 };', 'public static void VolibearGame_OnLoad()', 'public static bool getMenuBoolItem(Menu m, string item)', 'public static int getMenuSliderItem(Menu m, string item)', 'public static bool getMenuKeyBindItem(Menu m, string item)', 'public static int getBoxItem(Menu m, string item)', 'private static void OnEndScene(EventArgs args)', 'private static int CalcDamage(AIBaseClient target)', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnUpdate(EventArgs args)', 'private static void Flee()', 'private static void Laneclear() // jungle clear ^^', 'private static void Combo()']",namespace,VoliPower,12,347,,
412,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\XinZhao\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, Ulti, LaneClearMenu, JungleClearMenu, KillStealMenu, Misc;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public static Font thm;', 'public static Item Hydra;', 'public static Item Tiamat;', 'public static Item Titanic;', 'public static Item Botrk;', 'public static Item Bil;', 'public const float YOff = 10;', 'public const float XOff = 0;', 'public const float Width = 107;', 'public const float Thick = 9;', 'public static void XinZhaoOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnTick(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'private static void Damage(EventArgs args)', 'public static double RDamage(AIBaseClient target)', 'private static void Combo()', 'private static void Ultimate()', 'private static void ResetAttack(object target, OrbwalkerActionArgs args)', 'private static void LaneClear()', 'private static void Harass()', 'public static void JungleClear()', 'public static void Interupt(object sender, InterruptSpellArgs i)', 'public static void Flee()', 'public static void DrawFont(Font vFont, string vText, float jx, float jy, ColorBGRA jc)', 'public static bool UnderTuret(this Vector3 position)', 'private static void KillSteal()']",namespace,XinZhao7,14,446,,
413,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\DeathGodxAio\Champions\Ziggs\Program.cs,"['public static Menu Menu, ComboMenu, HarassMenu, LaneClearMenu, JungleClearMenu, KillStealMenu, Misc;', 'public static AIHeroClient _Player', 'public static Spell Q;', 'public static Spell Q2;', 'public static Spell Q3;', 'public static Spell W;', 'public static Spell E;', 'public static Spell R;', 'public static Spell Ignite;', 'public const float YOff = 10;', 'public const float XOff = 0;', 'public const float Width = 107;', 'public const float Thick = 9;', 'public static void ZiggsOnLoadingComplete()', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void Game_OnTick(EventArgs args)', 'public static int SkinId()', 'public static bool checkSkin()', 'private static void Damage(EventArgs args)', 'public static double RDamage(AIBaseClient target)', 'public static double Rborders(AIBaseClient target)', 'public static void QCast(AIBaseClient target)', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs e)', 'private static void Combo()', 'private static void LaneClear()', 'private static void Harass()', 'public static void JungleClear()', 'public static void Interupt(AIBaseClient sender, Interrupter.InterruptSpellArgs i)', 'public static void Flee()', 'private static void KillSteal()']",namespace,Ziggs7,14,445,,
414,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Program.cs,['private static void GameEvent_OnGameLoad()'],namespace,PortEnsoulSharp.AIO,8,31,,
415,Init.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Init.cs,"['public static class Init', 'public static void Initialize()', 'private static void LoadChampion()', 'private static void Game_OnUpdate(EventArgs args)']",namespace,PortAIO,7,60,,
416,Misc.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Misc.cs,"['public static Menu info;', 'public static void Load()']",namespace,PortAIO.Dual_Port,11,30,,
417,Amumu.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\Amumu\AmumuSharp\Amumu.cs,"['private static readonly AIHeroClient Player = ObjectManager.Player;', 'private readonly Spell _spellQ;', 'private readonly Spell _spellW;', 'private readonly Spell _spellE;', 'private readonly Spell _spellR;', 'private bool _comboW;', 'public Amumu()', 'public bool PacketsNoLel()', 'public float GetManaPercent()']",namespace,AmumuSharp,11,352,,
418,Helper.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\Amumu\AmumuSharp\Helper.cs,"['public AIHeroClient Player;', 'public int LastSeen;', 'public EnemyInfo(AIHeroClient player)', 'public IEnumerable<AIHeroClient> EnemyTeam;', 'public IEnumerable<AIHeroClient> OwnTeam;', 'public List<EnemyInfo> EnemyInfo = new List<EnemyInfo>();', 'public Helper()', 'public EnemyInfo GetPlayerInfo(AIHeroClient enemy)', 'public float GetTargetHealth(EnemyInfo playerInfo, int additionalTime)']",namespace,AmumuSharp,5,69,,
419,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\Amumu\AmumuSharp\Program.cs,"['public static Helper Helper;', 'public static void Game_OnGameLoad()']",namespace,AmumuSharp,2,15,,
420,Darius.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\Darius\Dsharp\Darius.cs,"['public const string ChampName = ""Darius"";', 'public static int passiveCounter;', 'public static Menu QMenu { get; private set; }', 'public static Menu WMenu { get; private set; }', 'public static Menu EMenu { get; private set; }', 'public static Menu RMenu { get; private set; }', 'public static Menu ManaMenu { get; private set; }', 'public static Menu ItemsMenu { get; private set; }', 'public static Menu KillStealMenu { get; private set; }', 'public static Menu DrawMenu { get; private set; }', 'private static Menu menuIni;', 'public static Spell Q { get; private set; }', 'public static Spell W { get; private set; }', 'public static Spell E { get; private set; }', 'public static Spell R { get; private set; }', 'public static HpBarIndicator Hpi = new HpBarIndicator();', 'public static Spell Ignite;', 'public static void Execute()', 'private static void OnAfterAttack(object sender, OrbwalkerActionArgs args)', 'private static void Interrupter_OnInterrupterSpell(AIHeroClient sender, Interrupter.InterruptSpellArgs args)', 'private static void OnUpdate(EventArgs args)', 'private static void Clear()', 'private static void Harass()', 'private static void Combo()', 'private static void RCast()', 'private static void ECast()', 'private static void WCast()', 'private static void QCast()', 'private static void Flee()', 'private static void KillSteal()', 'public static double PassiveDmg(AIBaseClient unit, int stackcount)', 'private static void OnDraw(EventArgs args)', 'private static void AIBaseClient_OnProcessSpellCast(AIBaseClient sender, AIBaseClientProcessSpellCastEventArgs args)', 'public static float RDmg(AIBaseClient unit, int stackcount)', 'private static void OnEndScene(EventArgs args)', 'public static bool IsKillable(this AIBaseClient target, float range)', 'public static bool IsKillable(this AIBaseClient target)', 'public static bool IsKillable(this AIHeroClient target)', 'public static bool IsKillable(this AIHeroClient target, float range)']",namespace,Darius,13,738,,
421,HpBarIndicator.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\Darius\Dsharp\HpBarIndicator.cs,"['public static Device dxDevice = Drawing.Direct3DDevice;', 'public static Line dxLine;', 'public AIHeroClient unit { get; set; }', 'public float width = 104;', 'public float hight = 9;', 'public HpBarIndicator()', 'private static void CurrentDomainOnDomainUnload(object sender, EventArgs eventArgs)', 'private static void DrawingOnOnPostReset(EventArgs args)', 'private static void DrawingOnOnPreReset(EventArgs args)', 'private Vector2 Offset', 'public Vector2 startPosition', 'private float getHpProc(float dmg = 0)', 'private Vector2 getHpPosAfterDmg(float dmg)', 'public void drawDmg(float dmg, System.Drawing.Color color)', 'private void fillHPBar(int to, int from, System.Drawing.Color color)', 'private void fillHPBar(Vector2 from, Vector2 to, System.Drawing.Color color)']",namespace,Darius,7,111,,
422,main.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\Darius\Dsharp\main.cs,['public static void Game_OnGameLoad()'],namespace,Darius,2,13,,
423,Orbwalk.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\Darius\Dsharp\Orbwalk.cs,"['public static class Orbwalk', 'private static int _lastAutoAttackSent;', 'private static bool _autoAttackStarted;', 'private static float _lastCastEndTime;', 'private static bool _setCastEndTime;', 'private static bool _autoAttackCompleted;', 'public delegate void PostAttackHandler(AttackableUnit target, EventArgs args);', 'public static event PostAttackHandler OnPostAttack;', 'public static bool CanAutoAttack', 'public static bool GotAutoAttackReset { get; internal set; }', 'public static void ResetAutoAttack()', 'public static int LastAutoAttack { get; internal set; }', 'private static bool CanIssueOrder', 'public static float AttackDelay']",namespace,Darius.Orb,5,125,,
424,buff.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\LeeSin\BubbaKush\buff.cs,"['public static void Orbwalk(AttackableUnit target = null, Vector3? position = null)']",namespace,BubbaKushsLeeSin,3,29,,
425,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\LeeSin\BubbaKush\Program.cs,"['private static bool isSkinReset = true;', 'private static void InitItem()']",namespace,BubbaKush,22,55,,
426,RectanglePoly.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\LeeSin\BubbaKush\RectanglePoly.cs,"['public class RectanglePoly : Geometry.Polygon', 'public RectanglePoly(Vector3 start, Vector3 end, float width)', 'public RectanglePoly(Vector2 start, Vector2 end, float width)', 'public Vector2 Direction => (this.End - this.Start).Normalized();', 'public Vector2 End { get; set; }', 'public Vector2 Perpendicular => this.Direction.Perpendicular();', 'public Vector2 Start { get; set; }', 'public float Width { get; set; }', 'public void UpdatePolygon(int offset = 0, float overrideWidth = -1)']",namespace,EnsoulSharp.SDK,17,124,,
427,Common.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\LeeSin\BubbaKush\Core\Common.cs,[],namespace,xxEliot.Core,0,0,,
428,Config.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\LeeSin\BubbaKush\Core\Config.cs,[],namespace,xxEliot.Core,0,0,,
429,AssassinManager.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\LeeSin\LeeSin\AssassinManager.cs,"['public AssassinManager()', 'private static void Load()', 'private static void OnUpdate(EventArgs args)', 'private static void Game_OnWndProc(GameWndProcEventArgs args)', 'private static void Drawing_OnDraw(EventArgs args)']",namespace,LeeSin,8,159,,
430,DamageIndicator.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\LeeSin\LeeSin\DamageIndicator.cs,"['public delegate float DamageToUnitDelegate(AIHeroClient hero);', 'private const int XOffset = 10;', 'private const int YOffset = 20;', 'private const int Width = 103;', 'private const int Height = 8;', 'public static Color Color = Color.Lime;', 'public static Color FillColor = Color.Goldenrod;', 'public static bool Fill = true;', 'private static DamageToUnitDelegate _damageToUnit;', 'private static readonly Render.Text Text = new Render.Text(', 'public static DamageToUnitDelegate DamageToUnit', 'private static void Drawing_OnDraw(EventArgs args)']",namespace,LeeSin,7,77,,
431,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\LeeSin\LeeSin\Program.cs,"['private const string ChampionName = ""LeeSin"";', 'private static List<Spell> SpellList = new List<Spell>();', 'private static Spell _q, _w, _e, _r;', 'public static Menu TargetSelectorMenu;', 'public static Menu _config;', 'private static AIHeroClient _player;', 'private static AIBaseClient insobj;', 'private static SpellSlot _igniteSlot;', 'private static SpellSlot _flashSlot;', 'private static SpellSlot _smitedmgSlot;', 'private static SpellSlot _smitehpSlot;', 'private static Items.Item _tiamat, _hydra, _blade, _bilge, _rand, _lotis, _youmuu;', 'public static Vector3 WardCastPosition;', 'private static Vector3 insdirec;', 'private static Vector3 insecpos;', 'private static Vector3 movepoint;', 'private static Vector3 jumppoint;', 'private static Vector3 wpos;', 'private static Vector3 wallcheck;', 'private static Vector3 firstpos;', 'public static int canmove = 1;', 'private static int instypecheck;', 'private static float wardtime;', 'private static float inscount;', 'private static float counttime;', 'private static float qcasttime;', 'private static float q2casttime;', 'private static float wcasttime;', 'private static float ecasttime;', 'private static float casttime;', 'private static bool walljump;', 'private static bool checker;', 'private static int bCount;', 'public static void Game_OnGameLoad()', 'private static void Game_OnUpdate(EventArgs args)', 'private static void OnWndProc(GameWndProcEventArgs args)', 'private static void OnProcessSpell(AIBaseClient sender, AIBaseClientProcessSpellCastEventArgs args)', 'private static float ComboDamage(AIBaseClient enemy)', 'private static bool Passive()', 'private static void Combo(AIHeroClient t)', 'private static void Harass(AIHeroClient t)', 'public static void WardJump(Vector3 pos, bool useWard = true, bool checkObjects = true, bool fullRange = false)', 'private static void placeward(Vector3 castpos)', 'private static void wjumpflee()', 'private static IEnumerable<Vector3> GetPossibleJumpPositions(Vector3 pos)', 'private static void Insec(AIHeroClient t)', 'private static QCastStage QStage', 'private static ECastStage EStage', 'private static WCastStage WStage', 'private static void CastSelfW()', 'private static void CastW(AIBaseClient obj)', 'private static void CastECombo()', 'private static void CastE1()', 'private static void CastQ1(AIBaseClient target)', 'private static readonly int[] SmitePurple = { 3713, 3726, 3725, 3726, 3723 };', 'private static readonly int[] SmiteGrey = { 3711, 3722, 3721, 3720, 3719 };', 'private static readonly int[] SmiteRed = { 3715, 3718, 3717, 3716, 3714 };', 'private static readonly int[] SmiteBlue = { 3706, 3710, 3709, 3708, 3707 };', 'private static string SmitetypeDmg()', 'private static string SmitetypeHp()', 'private static void UseItemes(AIHeroClient target)', 'private static void LaneClear()', 'private static void LastHit()', 'private static void JungleClear()', 'private static void KillSteal()', 'private static void Drawing_OnDraw(EventArgs args)']",namespace,LeeSin,13,1060,,
432,Program.cs,.\cs_code\PortEnsoul.Aio-016d3f2a458ee196d837622246725aa3fa10ccca\PortEnsoulSharp.Aio\Core\Champion Ports\viktor\Program.cs,"['public class Program', 'public static AIHeroClient player;', 'public static List<Spell> SpellList = new List<Spell>();', 'private static Spell Q, W, E, R;', 'private static readonly int maxRangeE = 1225;', 'private static readonly int lengthE = 700;', 'private static readonly int speedE = 1050;', 'private static readonly int rangeE = 525;', 'private static int lasttick = 0;', 'private static Vector3 GapCloserPos;', 'private static bool AttacksEnabled', 'private const string MenuName = ""My VikTor"";', 'public static Menu MainMenu, DrawMenu, ComboMenu, RMenu, RSolo, TestFeatures, HarassMenu, LastHit, WaveClear, FleeMenu, MiscMenu;', 'public static MenuList HitChanceList;', 'public static MenuList RTargetsAmount;', 'public static void Game_OnGameLoad()', 'private static void Game_OnGameUpdate(EventArgs args)', 'private static void OnHarass()', 'private static void OnWaveClear()', 'private static bool PredictCastMinionE()', 'public static FarmLocation GetBestLaserFarmLocation(bool jungle)', 'private static bool PredictCastMinionEJungle()', 'public struct FarmLocation', 'public int MinionsHit;', 'public Vector2 Position1;', 'public Vector2 Position2;', 'public FarmLocation(Vector2 startpos, Vector2 endpos, int minionsHit)', 'private static void OnJungleClear()', 'private static void Flee()', 'private static void OnCombo()', 'private static float TotalDmg(AIBaseClient enemy, bool useQ, bool useE, bool useR, bool qRange)', 'private static void PredictCastE(AIHeroClient target)', 'private static void CastE(Vector3 source, Vector3 destination)', 'private static void CastE(Vector2 source, Vector2 destination)', 'private static void Interrupter_OnInterrupterSpell(AIHeroClient sender, Interrupter.InterruptSpellArgs args)', 'private static void Orbwalker_OnAction(object sender, OrbwalkerActionArgs args)', 'private static void Orbwalking_OnNonKillableMinion(OrbwalkerActionArgs args)', 'private static void QLastHit(AIBaseClient minion)', 'private static void OrbwalkingOnBeforeAttack(OrbwalkerActionArgs args)', 'private static void DrawDmg(EventArgs args)', 'private static void Gapcloser_OnGapcloser(AIHeroClient sender, Gapcloser.GapcloserArgs gapcloser)', 'private static void Drawing_OnDraw(EventArgs args)', 'private static void AutoW()', 'private static float GetComboDamage(AIBaseClient enemy)', 'private static void SetupMenu()', 'public float GetDamage(AIBaseClient target, DamageStage stage = DamageStage.Default)', 'public bool CanKill(AIBaseClient unit, SpellSlot slot, DamageStage stage = DamageStage.Default)', 'public Spell.CustomDamageDelegate GetCustomDamages { get; set; }', 'public DamageStage GetCustomDamageType { get; set; }', 'public SpellSlot Slot { get; set; }']",namespace,Viktor,13,895,,
433,Form1.cs,.\cs_code\WindowsFormsApp_helloworld\Form1.cs,"['public partial class Form1 : Form', 'public Form1()', 'private void button1_Click(object sender, EventArgs e)']",namespace,WindowsFormsApp_helloworld,10,25,,
434,Form1.Designer.cs,.\cs_code\WindowsFormsApp_helloworld\Form1.Designer.cs,"['private System.ComponentModel.IContainer components = null;', 'protected override void Dispose(bool disposing)', 'private void InitializeComponent()', 'private System.Windows.Forms.Button button1;']",namespace,WindowsFormsApp_helloworld,1,61,,
435,Program.cs,.\cs_code\WindowsFormsApp_helloworld\Program.cs,[],namespace,WindowsFormsApp_helloworld,6,22,,
436,Resources.Designer.cs,.\cs_code\WindowsFormsApp_helloworld\Properties\Resources.Designer.cs,"['private static global::System.Resources.ResourceManager resourceMan;', 'private static global::System.Globalization.CultureInfo resourceCulture;']",namespace,WindowsFormsApp_helloworld.Properties,11,70,,
437,Settings.Designer.cs,.\cs_code\WindowsFormsApp_helloworld\Properties\Settings.Designer.cs,"['private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));', 'public static Settings Default']",namespace,WindowsFormsApp_helloworld.Properties,11,29,,
